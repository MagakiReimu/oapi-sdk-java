// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.approval.v4.model;

import com.google.gson.annotations.SerializedName;

public class ExternalTaskItem {
    /**
     * 审批任务 ID
     * <p> 示例值：310
     */
    @SerializedName("id")
    private String id;
    /**
     * 审批任务状态
     * <p> 示例值：PENDING
     */
    @SerializedName("status")
    private String status;
    /**
     * 审批任务最后更新时间，单位 毫秒
     * <p> 示例值：1621863215000
     */
    @SerializedName("update_time")
    private String updateTime;

    // builder 开始
    public ExternalTaskItem() {
    }

    public ExternalTaskItem(Builder builder) {
        /**
         * 审批任务 ID
         * <p> 示例值：310
         */
        this.id = builder.id;
        /**
         * 审批任务状态
         * <p> 示例值：PENDING
         */
        this.status = builder.status;
        /**
         * 审批任务最后更新时间，单位 毫秒
         * <p> 示例值：1621863215000
         */
        this.updateTime = builder.updateTime;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getUpdateTime() {
        return this.updateTime;
    }

    public void setUpdateTime(String updateTime) {
        this.updateTime = updateTime;
    }

    public static class Builder {
        /**
         * 审批任务 ID
         * <p> 示例值：310
         */
        private String id;
        /**
         * 审批任务状态
         * <p> 示例值：PENDING
         */
        private String status;
        /**
         * 审批任务最后更新时间，单位 毫秒
         * <p> 示例值：1621863215000
         */
        private String updateTime;

        /**
         * 审批任务 ID
         * <p> 示例值：310
         *
         * @param id
         * @return
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }


        /**
         * 审批任务状态
         * <p> 示例值：PENDING
         *
         * @param status
         * @return
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * 审批任务状态
         * <p> 示例值：PENDING
         *
         * @param status {@link com.lark.oapi.service.approval.v4.enums.ExternalTaskItemExternalTaskStatusEnum}
         * @return
         */
        public Builder status(com.lark.oapi.service.approval.v4.enums.ExternalTaskItemExternalTaskStatusEnum status) {
            this.status = status.getValue();
            return this;
        }


        /**
         * 审批任务最后更新时间，单位 毫秒
         * <p> 示例值：1621863215000
         *
         * @param updateTime
         * @return
         */
        public Builder updateTime(String updateTime) {
            this.updateTime = updateTime;
            return this;
        }


        public ExternalTaskItem build() {
            return new ExternalTaskItem(this);
        }
    }
}
