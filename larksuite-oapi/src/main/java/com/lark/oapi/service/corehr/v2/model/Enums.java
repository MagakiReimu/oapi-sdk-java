// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.corehr.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class Enums {
    /**
     * 枚举名称
     * <p> 示例值：overtime_date_type
     */
    @SerializedName("enum_apiname")
    private String enumApiname;
    /**
     * 枚举值
     * <p> 示例值：
     */
    @SerializedName("enum_items")
    private EnumField[] enumItems;

    // builder 开始
    public Enums() {
    }

    public Enums(Builder builder) {
        /**
         * 枚举名称
         * <p> 示例值：overtime_date_type
         */
        this.enumApiname = builder.enumApiname;
        /**
         * 枚举值
         * <p> 示例值：
         */
        this.enumItems = builder.enumItems;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getEnumApiname() {
        return this.enumApiname;
    }

    public void setEnumApiname(String enumApiname) {
        this.enumApiname = enumApiname;
    }

    public EnumField[] getEnumItems() {
        return this.enumItems;
    }

    public void setEnumItems(EnumField[] enumItems) {
        this.enumItems = enumItems;
    }

    public static class Builder {
        /**
         * 枚举名称
         * <p> 示例值：overtime_date_type
         */
        private String enumApiname;
        /**
         * 枚举值
         * <p> 示例值：
         */
        private EnumField[] enumItems;

        /**
         * 枚举名称
         * <p> 示例值：overtime_date_type
         *
         * @param enumApiname
         * @return
         */
        public Builder enumApiname(String enumApiname) {
            this.enumApiname = enumApiname;
            return this;
        }


        /**
         * 枚举值
         * <p> 示例值：
         *
         * @param enumItems
         * @return
         */
        public Builder enumItems(EnumField[] enumItems) {
            this.enumItems = enumItems;
            return this;
        }


        public Enums build() {
            return new Enums(this);
        }
    }
}
