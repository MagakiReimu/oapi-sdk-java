// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.google.gson.annotations.SerializedName;

public class LookupFieldSetting {
    /**
     * 查找字段对应的对象 apiname，可通过【获取自定义字段列表】接口获取这个对象中定义的自定义字段
     * <p> 示例值：employment
     */
    @SerializedName("lookup_obj_api_name")
    private String lookupObjApiName;
    /**
     * 是否为多值
     * <p> 示例值：false
     */
    @SerializedName("is_multiple")
    private Boolean isMultiple;

    // builder 开始
    public LookupFieldSetting() {
    }

    public LookupFieldSetting(Builder builder) {
        /**
         * 查找字段对应的对象 apiname，可通过【获取自定义字段列表】接口获取这个对象中定义的自定义字段
         * <p> 示例值：employment
         */
        this.lookupObjApiName = builder.lookupObjApiName;
        /**
         * 是否为多值
         * <p> 示例值：false
         */
        this.isMultiple = builder.isMultiple;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getLookupObjApiName() {
        return this.lookupObjApiName;
    }

    public void setLookupObjApiName(String lookupObjApiName) {
        this.lookupObjApiName = lookupObjApiName;
    }

    public Boolean getIsMultiple() {
        return this.isMultiple;
    }

    public void setIsMultiple(Boolean isMultiple) {
        this.isMultiple = isMultiple;
    }

    public static class Builder {
        /**
         * 查找字段对应的对象 apiname，可通过【获取自定义字段列表】接口获取这个对象中定义的自定义字段
         * <p> 示例值：employment
         */
        private String lookupObjApiName;
        /**
         * 是否为多值
         * <p> 示例值：false
         */
        private Boolean isMultiple;

        /**
         * 查找字段对应的对象 apiname，可通过【获取自定义字段列表】接口获取这个对象中定义的自定义字段
         * <p> 示例值：employment
         *
         * @param lookupObjApiName
         * @return
         */
        public Builder lookupObjApiName(String lookupObjApiName) {
            this.lookupObjApiName = lookupObjApiName;
            return this;
        }


        /**
         * 是否为多值
         * <p> 示例值：false
         *
         * @param isMultiple
         * @return
         */
        public Builder isMultiple(Boolean isMultiple) {
            this.isMultiple = isMultiple;
            return this;
        }


        public LookupFieldSetting build() {
            return new LookupFieldSetting(this);
        }
    }
}
