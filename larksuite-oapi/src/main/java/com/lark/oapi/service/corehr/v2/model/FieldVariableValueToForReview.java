// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.corehr.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class FieldVariableValueToForReview {
    /**
     * 文本值
     * <p> 示例值：测试测试
     */
    @SerializedName("text_value")
    private String textValue;
    /**
     * 布尔值
     * <p> 示例值：true
     */
    @SerializedName("bool_value")
    private Boolean boolValue;
    /**
     * 数字值
     * <p> 示例值：100
     */
    @SerializedName("number_value")
    private String numberValue;
    /**
     * 枚举值，这里是枚举的id
     * <p> 示例值：home_address
     */
    @SerializedName("enum_value")
    private String enumValue;
    /**
     * 从 1970 开始的天数
     * <p> 示例值：19838
     */
    @SerializedName("date_value")
    private String dateValue;
    /**
     * 时间戳，毫秒
     * <p> 示例值：1714013877512
     */
    @SerializedName("date_time_value")
    private String dateTimeValue;
    /**
     * 多语字段值
     * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
     */
    @SerializedName("i18n_value")
    private FieldVariableValueI18n i18nValue;
    /**
     * 对象值，包括对象id和对象类型
     * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
     */
    @SerializedName("object_value")
    private FieldVariableValueToObject objectValue;
    /**
     * 部门id，根据入参选择对应的部门id
     * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
     */
    @SerializedName("department_value")
    private String departmentValue;
    /**
     * 员工类型字段值，为用户id，根据入参选择返回的用户id
     * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
     */
    @SerializedName("employment_value")
    private String employmentValue;
    /**
     * 数组类型值，里面包含多个值，每个元素都对应subValues中的key
     * <p> 示例值：
     */
    @SerializedName("list_values")
    private String[] listValues;

    // builder 开始
    public FieldVariableValueToForReview() {
    }

    public FieldVariableValueToForReview(Builder builder) {
        /**
         * 文本值
         * <p> 示例值：测试测试
         */
        this.textValue = builder.textValue;
        /**
         * 布尔值
         * <p> 示例值：true
         */
        this.boolValue = builder.boolValue;
        /**
         * 数字值
         * <p> 示例值：100
         */
        this.numberValue = builder.numberValue;
        /**
         * 枚举值，这里是枚举的id
         * <p> 示例值：home_address
         */
        this.enumValue = builder.enumValue;
        /**
         * 从 1970 开始的天数
         * <p> 示例值：19838
         */
        this.dateValue = builder.dateValue;
        /**
         * 时间戳，毫秒
         * <p> 示例值：1714013877512
         */
        this.dateTimeValue = builder.dateTimeValue;
        /**
         * 多语字段值
         * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
         */
        this.i18nValue = builder.i18nValue;
        /**
         * 对象值，包括对象id和对象类型
         * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
         */
        this.objectValue = builder.objectValue;
        /**
         * 部门id，根据入参选择对应的部门id
         * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
         */
        this.departmentValue = builder.departmentValue;
        /**
         * 员工类型字段值，为用户id，根据入参选择返回的用户id
         * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
         */
        this.employmentValue = builder.employmentValue;
        /**
         * 数组类型值，里面包含多个值，每个元素都对应subValues中的key
         * <p> 示例值：
         */
        this.listValues = builder.listValues;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getTextValue() {
        return this.textValue;
    }

    public void setTextValue(String textValue) {
        this.textValue = textValue;
    }

    public Boolean getBoolValue() {
        return this.boolValue;
    }

    public void setBoolValue(Boolean boolValue) {
        this.boolValue = boolValue;
    }

    public String getNumberValue() {
        return this.numberValue;
    }

    public void setNumberValue(String numberValue) {
        this.numberValue = numberValue;
    }

    public String getEnumValue() {
        return this.enumValue;
    }

    public void setEnumValue(String enumValue) {
        this.enumValue = enumValue;
    }

    public String getDateValue() {
        return this.dateValue;
    }

    public void setDateValue(String dateValue) {
        this.dateValue = dateValue;
    }

    public String getDateTimeValue() {
        return this.dateTimeValue;
    }

    public void setDateTimeValue(String dateTimeValue) {
        this.dateTimeValue = dateTimeValue;
    }

    public FieldVariableValueI18n getI18nValue() {
        return this.i18nValue;
    }

    public void setI18nValue(FieldVariableValueI18n i18nValue) {
        this.i18nValue = i18nValue;
    }

    public FieldVariableValueToObject getObjectValue() {
        return this.objectValue;
    }

    public void setObjectValue(FieldVariableValueToObject objectValue) {
        this.objectValue = objectValue;
    }

    public String getDepartmentValue() {
        return this.departmentValue;
    }

    public void setDepartmentValue(String departmentValue) {
        this.departmentValue = departmentValue;
    }

    public String getEmploymentValue() {
        return this.employmentValue;
    }

    public void setEmploymentValue(String employmentValue) {
        this.employmentValue = employmentValue;
    }

    public String[] getListValues() {
        return this.listValues;
    }

    public void setListValues(String[] listValues) {
        this.listValues = listValues;
    }

    public static class Builder {
        /**
         * 文本值
         * <p> 示例值：测试测试
         */
        private String textValue;
        /**
         * 布尔值
         * <p> 示例值：true
         */
        private Boolean boolValue;
        /**
         * 数字值
         * <p> 示例值：100
         */
        private String numberValue;
        /**
         * 枚举值，这里是枚举的id
         * <p> 示例值：home_address
         */
        private String enumValue;
        /**
         * 从 1970 开始的天数
         * <p> 示例值：19838
         */
        private String dateValue;
        /**
         * 时间戳，毫秒
         * <p> 示例值：1714013877512
         */
        private String dateTimeValue;
        /**
         * 多语字段值
         * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
         */
        private FieldVariableValueI18n i18nValue;
        /**
         * 对象值，包括对象id和对象类型
         * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
         */
        private FieldVariableValueToObject objectValue;
        /**
         * 部门id，根据入参选择对应的部门id
         * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
         */
        private String departmentValue;
        /**
         * 员工类型字段值，为用户id，根据入参选择返回的用户id
         * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
         */
        private String employmentValue;
        /**
         * 数组类型值，里面包含多个值，每个元素都对应subValues中的key
         * <p> 示例值：
         */
        private String[] listValues;

        /**
         * 文本值
         * <p> 示例值：测试测试
         *
         * @param textValue
         * @return
         */
        public Builder textValue(String textValue) {
            this.textValue = textValue;
            return this;
        }


        /**
         * 布尔值
         * <p> 示例值：true
         *
         * @param boolValue
         * @return
         */
        public Builder boolValue(Boolean boolValue) {
            this.boolValue = boolValue;
            return this;
        }


        /**
         * 数字值
         * <p> 示例值：100
         *
         * @param numberValue
         * @return
         */
        public Builder numberValue(String numberValue) {
            this.numberValue = numberValue;
            return this;
        }


        /**
         * 枚举值，这里是枚举的id
         * <p> 示例值：home_address
         *
         * @param enumValue
         * @return
         */
        public Builder enumValue(String enumValue) {
            this.enumValue = enumValue;
            return this;
        }


        /**
         * 从 1970 开始的天数
         * <p> 示例值：19838
         *
         * @param dateValue
         * @return
         */
        public Builder dateValue(String dateValue) {
            this.dateValue = dateValue;
            return this;
        }


        /**
         * 时间戳，毫秒
         * <p> 示例值：1714013877512
         *
         * @param dateTimeValue
         * @return
         */
        public Builder dateTimeValue(String dateTimeValue) {
            this.dateTimeValue = dateTimeValue;
            return this;
        }


        /**
         * 多语字段值
         * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
         *
         * @param i18nValue
         * @return
         */
        public Builder i18nValue(FieldVariableValueI18n i18nValue) {
            this.i18nValue = i18nValue;
            return this;
        }


        /**
         * 对象值，包括对象id和对象类型
         * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
         *
         * @param objectValue
         * @return
         */
        public Builder objectValue(FieldVariableValueToObject objectValue) {
            this.objectValue = objectValue;
            return this;
        }


        /**
         * 部门id，根据入参选择对应的部门id
         * <p> 示例值：od-a761814f6bc3f14bd3b00905ec1d7c6f
         *
         * @param departmentValue
         * @return
         */
        public Builder departmentValue(String departmentValue) {
            this.departmentValue = departmentValue;
            return this;
        }


        /**
         * 员工类型字段值，为用户id，根据入参选择返回的用户id
         * <p> 示例值：ou_c57053dad6eea0aea4696c48433d8562
         *
         * @param employmentValue
         * @return
         */
        public Builder employmentValue(String employmentValue) {
            this.employmentValue = employmentValue;
            return this;
        }


        /**
         * 数组类型值，里面包含多个值，每个元素都对应subValues中的key
         * <p> 示例值：
         *
         * @param listValues
         * @return
         */
        public Builder listValues(String[] listValues) {
            this.listValues = listValues;
            return this;
        }


        public FieldVariableValueToForReview build() {
            return new FieldVariableValueToForReview(this);
        }
    }
}
