// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.application.v6.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.application.v6.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class AppConfigEvent {
    /**
     * 订阅方式
     * <p> 示例值：webhook
     */
    @SerializedName("subscription_type")
    private String subscriptionType;
    /**
     * 接收事件的服务器地址
     * <p> 示例值：https://open.feishu.cn/
     */
    @SerializedName("request_url")
    private String requestUrl;
    /**
     * 添加事件列表
     * <p> 示例值：
     */
    @SerializedName("add_events")
    private String[] addEvents;
    /**
     * 删除事件列表
     * <p> 示例值：
     */
    @SerializedName("remove_events")
    private String[] removeEvents;

    // builder 开始
    public AppConfigEvent() {
    }

    public AppConfigEvent(Builder builder) {
        /**
         * 订阅方式
         * <p> 示例值：webhook
         */
        this.subscriptionType = builder.subscriptionType;
        /**
         * 接收事件的服务器地址
         * <p> 示例值：https://open.feishu.cn/
         */
        this.requestUrl = builder.requestUrl;
        /**
         * 添加事件列表
         * <p> 示例值：
         */
        this.addEvents = builder.addEvents;
        /**
         * 删除事件列表
         * <p> 示例值：
         */
        this.removeEvents = builder.removeEvents;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getSubscriptionType() {
        return this.subscriptionType;
    }

    public void setSubscriptionType(String subscriptionType) {
        this.subscriptionType = subscriptionType;
    }

    public String getRequestUrl() {
        return this.requestUrl;
    }

    public void setRequestUrl(String requestUrl) {
        this.requestUrl = requestUrl;
    }

    public String[] getAddEvents() {
        return this.addEvents;
    }

    public void setAddEvents(String[] addEvents) {
        this.addEvents = addEvents;
    }

    public String[] getRemoveEvents() {
        return this.removeEvents;
    }

    public void setRemoveEvents(String[] removeEvents) {
        this.removeEvents = removeEvents;
    }

    public static class Builder {
        /**
         * 订阅方式
         * <p> 示例值：webhook
         */
        private String subscriptionType;
        /**
         * 接收事件的服务器地址
         * <p> 示例值：https://open.feishu.cn/
         */
        private String requestUrl;
        /**
         * 添加事件列表
         * <p> 示例值：
         */
        private String[] addEvents;
        /**
         * 删除事件列表
         * <p> 示例值：
         */
        private String[] removeEvents;

        /**
         * 订阅方式
         * <p> 示例值：webhook
         *
         * @param subscriptionType
         * @return
         */
        public Builder subscriptionType(String subscriptionType) {
            this.subscriptionType = subscriptionType;
            return this;
        }

        /**
         * 订阅方式
         * <p> 示例值：webhook
         *
         * @param subscriptionType {@link com.lark.oapi.service.application.v6.enums.AppConfigEventSubscriptionTypeEnum}
         * @return
         */
        public Builder subscriptionType(com.lark.oapi.service.application.v6.enums.AppConfigEventSubscriptionTypeEnum subscriptionType) {
            this.subscriptionType = subscriptionType.getValue();
            return this;
        }


        /**
         * 接收事件的服务器地址
         * <p> 示例值：https://open.feishu.cn/
         *
         * @param requestUrl
         * @return
         */
        public Builder requestUrl(String requestUrl) {
            this.requestUrl = requestUrl;
            return this;
        }


        /**
         * 添加事件列表
         * <p> 示例值：
         *
         * @param addEvents
         * @return
         */
        public Builder addEvents(String[] addEvents) {
            this.addEvents = addEvents;
            return this;
        }


        /**
         * 删除事件列表
         * <p> 示例值：
         *
         * @param removeEvents
         * @return
         */
        public Builder removeEvents(String[] removeEvents) {
            this.removeEvents = removeEvents;
            return this;
        }


        public AppConfigEvent build() {
            return new AppConfigEvent(this);
        }
    }
}
