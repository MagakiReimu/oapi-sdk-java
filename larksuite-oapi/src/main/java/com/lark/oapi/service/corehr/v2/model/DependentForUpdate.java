// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.corehr.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class DependentForUpdate {
    /**
     * 关系
     * <p> 示例值：parent
     */
    @SerializedName("relationship")
    private String relationship;
    /**
     * 性别
     * <p> 示例值：male
     */
    @SerializedName("gender")
    private String gender;
    /**
     * 生日
     * <p> 示例值：2020-01-01
     */
    @SerializedName("date_of_birth")
    private String dateOfBirth;
    /**
     * 证件号码
     * <p> 示例值：
     */
    @SerializedName("national_ids")
    private NationalIdForUpdate[] nationalIds;
    /**
     * 配偶工作状态
     * <p> 示例值：working
     */
    @SerializedName("spouses_working_status")
    private String spousesWorkingStatus;
    /**
     * 包含家属医疗保险
     * <p> 示例值：true
     */
    @SerializedName("is_this_person_covered_by_health_insurance")
    private Boolean isThisPersonCoveredByHealthInsurance;
    /**
     * 允许家属抵扣税款
     * <p> 示例值：false
     */
    @SerializedName("is_this_person_allowed_for_tax_deduction")
    private Boolean isThisPersonAllowedForTaxDeduction;
    /**
     * 家庭成员姓名
     * <p> 示例值：王冰
     */
    @SerializedName("dependent_name")
    private String dependentName;
    /**
     * 工作单位
     * <p> 示例值：海淀区交警大队
     */
    @SerializedName("employer")
    private String employer;
    /**
     * 岗位
     * <p> 示例值：保安
     */
    @SerializedName("job")
    private String job;
    /**
     * 电话
     * <p> 示例值：
     */
    @SerializedName("phone")
    private PhoneForUpdate phone;
    /**
     * 联系地址
     * <p> 示例值：
     */
    @SerializedName("address")
    private AddressForUpdate address;
    /**
     * 出生证明
     * <p> 示例值：
     */
    @SerializedName("birth_certificate_of_children")
    private File[] birthCertificateOfChildren;

    // builder 开始
    public DependentForUpdate() {
    }

    public DependentForUpdate(Builder builder) {
        /**
         * 关系
         * <p> 示例值：parent
         */
        this.relationship = builder.relationship;
        /**
         * 性别
         * <p> 示例值：male
         */
        this.gender = builder.gender;
        /**
         * 生日
         * <p> 示例值：2020-01-01
         */
        this.dateOfBirth = builder.dateOfBirth;
        /**
         * 证件号码
         * <p> 示例值：
         */
        this.nationalIds = builder.nationalIds;
        /**
         * 配偶工作状态
         * <p> 示例值：working
         */
        this.spousesWorkingStatus = builder.spousesWorkingStatus;
        /**
         * 包含家属医疗保险
         * <p> 示例值：true
         */
        this.isThisPersonCoveredByHealthInsurance = builder.isThisPersonCoveredByHealthInsurance;
        /**
         * 允许家属抵扣税款
         * <p> 示例值：false
         */
        this.isThisPersonAllowedForTaxDeduction = builder.isThisPersonAllowedForTaxDeduction;
        /**
         * 家庭成员姓名
         * <p> 示例值：王冰
         */
        this.dependentName = builder.dependentName;
        /**
         * 工作单位
         * <p> 示例值：海淀区交警大队
         */
        this.employer = builder.employer;
        /**
         * 岗位
         * <p> 示例值：保安
         */
        this.job = builder.job;
        /**
         * 电话
         * <p> 示例值：
         */
        this.phone = builder.phone;
        /**
         * 联系地址
         * <p> 示例值：
         */
        this.address = builder.address;
        /**
         * 出生证明
         * <p> 示例值：
         */
        this.birthCertificateOfChildren = builder.birthCertificateOfChildren;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getRelationship() {
        return this.relationship;
    }

    public void setRelationship(String relationship) {
        this.relationship = relationship;
    }

    public String getGender() {
        return this.gender;
    }

    public void setGender(String gender) {
        this.gender = gender;
    }

    public String getDateOfBirth() {
        return this.dateOfBirth;
    }

    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    public NationalIdForUpdate[] getNationalIds() {
        return this.nationalIds;
    }

    public void setNationalIds(NationalIdForUpdate[] nationalIds) {
        this.nationalIds = nationalIds;
    }

    public String getSpousesWorkingStatus() {
        return this.spousesWorkingStatus;
    }

    public void setSpousesWorkingStatus(String spousesWorkingStatus) {
        this.spousesWorkingStatus = spousesWorkingStatus;
    }

    public Boolean getIsThisPersonCoveredByHealthInsurance() {
        return this.isThisPersonCoveredByHealthInsurance;
    }

    public void setIsThisPersonCoveredByHealthInsurance(Boolean isThisPersonCoveredByHealthInsurance) {
        this.isThisPersonCoveredByHealthInsurance = isThisPersonCoveredByHealthInsurance;
    }

    public Boolean getIsThisPersonAllowedForTaxDeduction() {
        return this.isThisPersonAllowedForTaxDeduction;
    }

    public void setIsThisPersonAllowedForTaxDeduction(Boolean isThisPersonAllowedForTaxDeduction) {
        this.isThisPersonAllowedForTaxDeduction = isThisPersonAllowedForTaxDeduction;
    }

    public String getDependentName() {
        return this.dependentName;
    }

    public void setDependentName(String dependentName) {
        this.dependentName = dependentName;
    }

    public String getEmployer() {
        return this.employer;
    }

    public void setEmployer(String employer) {
        this.employer = employer;
    }

    public String getJob() {
        return this.job;
    }

    public void setJob(String job) {
        this.job = job;
    }

    public PhoneForUpdate getPhone() {
        return this.phone;
    }

    public void setPhone(PhoneForUpdate phone) {
        this.phone = phone;
    }

    public AddressForUpdate getAddress() {
        return this.address;
    }

    public void setAddress(AddressForUpdate address) {
        this.address = address;
    }

    public File[] getBirthCertificateOfChildren() {
        return this.birthCertificateOfChildren;
    }

    public void setBirthCertificateOfChildren(File[] birthCertificateOfChildren) {
        this.birthCertificateOfChildren = birthCertificateOfChildren;
    }

    public static class Builder {
        /**
         * 关系
         * <p> 示例值：parent
         */
        private String relationship;
        /**
         * 性别
         * <p> 示例值：male
         */
        private String gender;
        /**
         * 生日
         * <p> 示例值：2020-01-01
         */
        private String dateOfBirth;
        /**
         * 证件号码
         * <p> 示例值：
         */
        private NationalIdForUpdate[] nationalIds;
        /**
         * 配偶工作状态
         * <p> 示例值：working
         */
        private String spousesWorkingStatus;
        /**
         * 包含家属医疗保险
         * <p> 示例值：true
         */
        private Boolean isThisPersonCoveredByHealthInsurance;
        /**
         * 允许家属抵扣税款
         * <p> 示例值：false
         */
        private Boolean isThisPersonAllowedForTaxDeduction;
        /**
         * 家庭成员姓名
         * <p> 示例值：王冰
         */
        private String dependentName;
        /**
         * 工作单位
         * <p> 示例值：海淀区交警大队
         */
        private String employer;
        /**
         * 岗位
         * <p> 示例值：保安
         */
        private String job;
        /**
         * 电话
         * <p> 示例值：
         */
        private PhoneForUpdate phone;
        /**
         * 联系地址
         * <p> 示例值：
         */
        private AddressForUpdate address;
        /**
         * 出生证明
         * <p> 示例值：
         */
        private File[] birthCertificateOfChildren;

        /**
         * 关系
         * <p> 示例值：parent
         *
         * @param relationship
         * @return
         */
        public Builder relationship(String relationship) {
            this.relationship = relationship;
            return this;
        }


        /**
         * 性别
         * <p> 示例值：male
         *
         * @param gender
         * @return
         */
        public Builder gender(String gender) {
            this.gender = gender;
            return this;
        }


        /**
         * 生日
         * <p> 示例值：2020-01-01
         *
         * @param dateOfBirth
         * @return
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }


        /**
         * 证件号码
         * <p> 示例值：
         *
         * @param nationalIds
         * @return
         */
        public Builder nationalIds(NationalIdForUpdate[] nationalIds) {
            this.nationalIds = nationalIds;
            return this;
        }


        /**
         * 配偶工作状态
         * <p> 示例值：working
         *
         * @param spousesWorkingStatus
         * @return
         */
        public Builder spousesWorkingStatus(String spousesWorkingStatus) {
            this.spousesWorkingStatus = spousesWorkingStatus;
            return this;
        }


        /**
         * 包含家属医疗保险
         * <p> 示例值：true
         *
         * @param isThisPersonCoveredByHealthInsurance
         * @return
         */
        public Builder isThisPersonCoveredByHealthInsurance(Boolean isThisPersonCoveredByHealthInsurance) {
            this.isThisPersonCoveredByHealthInsurance = isThisPersonCoveredByHealthInsurance;
            return this;
        }


        /**
         * 允许家属抵扣税款
         * <p> 示例值：false
         *
         * @param isThisPersonAllowedForTaxDeduction
         * @return
         */
        public Builder isThisPersonAllowedForTaxDeduction(Boolean isThisPersonAllowedForTaxDeduction) {
            this.isThisPersonAllowedForTaxDeduction = isThisPersonAllowedForTaxDeduction;
            return this;
        }


        /**
         * 家庭成员姓名
         * <p> 示例值：王冰
         *
         * @param dependentName
         * @return
         */
        public Builder dependentName(String dependentName) {
            this.dependentName = dependentName;
            return this;
        }


        /**
         * 工作单位
         * <p> 示例值：海淀区交警大队
         *
         * @param employer
         * @return
         */
        public Builder employer(String employer) {
            this.employer = employer;
            return this;
        }


        /**
         * 岗位
         * <p> 示例值：保安
         *
         * @param job
         * @return
         */
        public Builder job(String job) {
            this.job = job;
            return this;
        }


        /**
         * 电话
         * <p> 示例值：
         *
         * @param phone
         * @return
         */
        public Builder phone(PhoneForUpdate phone) {
            this.phone = phone;
            return this;
        }


        /**
         * 联系地址
         * <p> 示例值：
         *
         * @param address
         * @return
         */
        public Builder address(AddressForUpdate address) {
            this.address = address;
            return this;
        }


        /**
         * 出生证明
         * <p> 示例值：
         *
         * @param birthCertificateOfChildren
         * @return
         */
        public Builder birthCertificateOfChildren(File[] birthCertificateOfChildren) {
            this.birthCertificateOfChildren = birthCertificateOfChildren;
            return this;
        }


        public DependentForUpdate build() {
            return new DependentForUpdate(this);
        }
    }
}
