// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.baike.v1.model;

import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

public class GetEntityReq {
    /**
     * 外部系统
     * <p> 示例值：星云
     */
    @Query
    @SerializedName("provider")
    private String provider;
    /**
     * 词条在外部系统中对应的唯一 ID
     * <p> 示例值：12345
     */
    @Query
    @SerializedName("outer_id")
    private String outerId;
    /**
     * 此次调用中使用的用户ID的类型
     * <p> 示例值：
     */
    @Query
    @SerializedName("user_id_type")
    private String userIdType;
    /**
     * 词条 ID
     * <p> 示例值：enterprise_515879
     */
    @Path
    @SerializedName("entity_id")
    private String entityId;

    // builder 开始
    public GetEntityReq() {
    }

    public GetEntityReq(Builder builder) {
        /**
         * 外部系统
         * <p> 示例值：星云
         */
        this.provider = builder.provider;
        /**
         * 词条在外部系统中对应的唯一 ID
         * <p> 示例值：12345
         */
        this.outerId = builder.outerId;
        /**
         * 此次调用中使用的用户ID的类型
         * <p> 示例值：
         */
        this.userIdType = builder.userIdType;
        /**
         * 词条 ID
         * <p> 示例值：enterprise_515879
         */
        this.entityId = builder.entityId;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getProvider() {
        return this.provider;
    }

    public void setProvider(String provider) {
        this.provider = provider;
    }

    public String getOuterId() {
        return this.outerId;
    }

    public void setOuterId(String outerId) {
        this.outerId = outerId;
    }

    public String getUserIdType() {
        return this.userIdType;
    }

    public void setUserIdType(String userIdType) {
        this.userIdType = userIdType;
    }

    public String getEntityId() {
        return this.entityId;
    }

    public void setEntityId(String entityId) {
        this.entityId = entityId;
    }

    public static class Builder {
        private String provider; // 外部系统
        private String outerId; // 词条在外部系统中对应的唯一 ID
        private String userIdType; // 此次调用中使用的用户ID的类型
        private String entityId; // 词条 ID

        /**
         * 外部系统
         * <p> 示例值：星云
         *
         * @param provider
         * @return
         */
        public Builder provider(String provider) {
            this.provider = provider;
            return this;
        }

        /**
         * 词条在外部系统中对应的唯一 ID
         * <p> 示例值：12345
         *
         * @param outerId
         * @return
         */
        public Builder outerId(String outerId) {
            this.outerId = outerId;
            return this;
        }

        /**
         * 此次调用中使用的用户ID的类型
         * <p> 示例值：
         *
         * @param userIdType
         * @return
         */
        public Builder userIdType(String userIdType) {
            this.userIdType = userIdType;
            return this;
        }

        /**
         * 此次调用中使用的用户ID的类型
         * <p> 示例值：
         *
         * @param userIdType {@link com.lark.oapi.service.baike.v1.enums.GetEntityUserIdTypeEnum}
         * @return
         */
        public Builder userIdType(com.lark.oapi.service.baike.v1.enums.GetEntityUserIdTypeEnum userIdType) {
            this.userIdType = userIdType.getValue();
            return this;
        }

        /**
         * 词条 ID
         * <p> 示例值：enterprise_515879
         *
         * @param entityId
         * @return
         */
        public Builder entityId(String entityId) {
            this.entityId = entityId;
            return this;
        }

        public GetEntityReq build() {
            return new GetEntityReq(this);
        }
    }
}
