// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.docx.v1.model;

import com.google.gson.annotations.SerializedName;

public class UpdateTaskRequest {
    /**
     * 任务 ID。该字段仅在首次更新 Task Block 时生效，更新成功后，后续请求中将忽略该字段。
     * <p> 示例值：ba5040f4-8116-4042-ab3c-254e5cfe3ce7
     */
    @SerializedName("task_id")
    private String taskId;
    /**
     * 折叠状态，字段为空时不更新折叠状态
     * <p> 示例值：false
     */
    @SerializedName("folded")
    private Boolean folded;

    // builder 开始
    public UpdateTaskRequest() {
    }

    public UpdateTaskRequest(Builder builder) {
        /**
         * 任务 ID。该字段仅在首次更新 Task Block 时生效，更新成功后，后续请求中将忽略该字段。
         * <p> 示例值：ba5040f4-8116-4042-ab3c-254e5cfe3ce7
         */
        this.taskId = builder.taskId;
        /**
         * 折叠状态，字段为空时不更新折叠状态
         * <p> 示例值：false
         */
        this.folded = builder.folded;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getTaskId() {
        return this.taskId;
    }

    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    public Boolean getFolded() {
        return this.folded;
    }

    public void setFolded(Boolean folded) {
        this.folded = folded;
    }

    public static class Builder {
        /**
         * 任务 ID。该字段仅在首次更新 Task Block 时生效，更新成功后，后续请求中将忽略该字段。
         * <p> 示例值：ba5040f4-8116-4042-ab3c-254e5cfe3ce7
         */
        private String taskId;
        /**
         * 折叠状态，字段为空时不更新折叠状态
         * <p> 示例值：false
         */
        private Boolean folded;

        /**
         * 任务 ID。该字段仅在首次更新 Task Block 时生效，更新成功后，后续请求中将忽略该字段。
         * <p> 示例值：ba5040f4-8116-4042-ab3c-254e5cfe3ce7
         *
         * @param taskId
         * @return
         */
        public Builder taskId(String taskId) {
            this.taskId = taskId;
            return this;
        }


        /**
         * 折叠状态，字段为空时不更新折叠状态
         * <p> 示例值：false
         *
         * @param folded
         * @return
         */
        public Builder folded(Boolean folded) {
            this.folded = folded;
            return this;
        }


        public UpdateTaskRequest build() {
            return new UpdateTaskRequest(this);
        }
    }
}
