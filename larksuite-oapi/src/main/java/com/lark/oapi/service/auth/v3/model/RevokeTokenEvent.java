// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.auth.v3.model;

import com.lark.oapi.core.response.EmptyData;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class RevokeTokenEvent {
    /**
     * 撤销token的类型
     * <p> 示例值：user_access_token refresh_token
     */
    @SerializedName("revoke_token_type")
    private String revokeTokenType;
    /**
     * 撤销token的原因
     * <p> 示例值：Revoked by security and risk control action.
     */
    @SerializedName("revoke_reason")
    private String revokeReason;
    /**
     * 用户open_id
     * <p> 示例值：ou_c99c5f35d542efc7ee492afe11af19ef
     */
    @SerializedName("open_id")
    private String openId;
    /**
     * 用户union_id
     * <p> 示例值：on_cad4860e7af114fb4ff6c5d496d1dd76
     */
    @SerializedName("union_id")
    private String unionId;
    /**
     * 租户内用户的唯一标识
     * <p> 示例值：gg895344
     */
    @SerializedName("user_id")
    private String userId;

    // builder 开始
    public RevokeTokenEvent() {
    }

    public RevokeTokenEvent(Builder builder) {
        /**
         * 撤销token的类型
         * <p> 示例值：user_access_token refresh_token
         */
        this.revokeTokenType = builder.revokeTokenType;
        /**
         * 撤销token的原因
         * <p> 示例值：Revoked by security and risk control action.
         */
        this.revokeReason = builder.revokeReason;
        /**
         * 用户open_id
         * <p> 示例值：ou_c99c5f35d542efc7ee492afe11af19ef
         */
        this.openId = builder.openId;
        /**
         * 用户union_id
         * <p> 示例值：on_cad4860e7af114fb4ff6c5d496d1dd76
         */
        this.unionId = builder.unionId;
        /**
         * 租户内用户的唯一标识
         * <p> 示例值：gg895344
         */
        this.userId = builder.userId;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getRevokeTokenType() {
        return this.revokeTokenType;
    }

    public void setRevokeTokenType(String revokeTokenType) {
        this.revokeTokenType = revokeTokenType;
    }

    public String getRevokeReason() {
        return this.revokeReason;
    }

    public void setRevokeReason(String revokeReason) {
        this.revokeReason = revokeReason;
    }

    public String getOpenId() {
        return this.openId;
    }

    public void setOpenId(String openId) {
        this.openId = openId;
    }

    public String getUnionId() {
        return this.unionId;
    }

    public void setUnionId(String unionId) {
        this.unionId = unionId;
    }

    public String getUserId() {
        return this.userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public static class Builder {
        /**
         * 撤销token的类型
         * <p> 示例值：user_access_token refresh_token
         */
        private String revokeTokenType;
        /**
         * 撤销token的原因
         * <p> 示例值：Revoked by security and risk control action.
         */
        private String revokeReason;
        /**
         * 用户open_id
         * <p> 示例值：ou_c99c5f35d542efc7ee492afe11af19ef
         */
        private String openId;
        /**
         * 用户union_id
         * <p> 示例值：on_cad4860e7af114fb4ff6c5d496d1dd76
         */
        private String unionId;
        /**
         * 租户内用户的唯一标识
         * <p> 示例值：gg895344
         */
        private String userId;

        /**
         * 撤销token的类型
         * <p> 示例值：user_access_token refresh_token
         *
         * @param revokeTokenType
         * @return
         */
        public Builder revokeTokenType(String revokeTokenType) {
            this.revokeTokenType = revokeTokenType;
            return this;
        }


        /**
         * 撤销token的原因
         * <p> 示例值：Revoked by security and risk control action.
         *
         * @param revokeReason
         * @return
         */
        public Builder revokeReason(String revokeReason) {
            this.revokeReason = revokeReason;
            return this;
        }


        /**
         * 用户open_id
         * <p> 示例值：ou_c99c5f35d542efc7ee492afe11af19ef
         *
         * @param openId
         * @return
         */
        public Builder openId(String openId) {
            this.openId = openId;
            return this;
        }


        /**
         * 用户union_id
         * <p> 示例值：on_cad4860e7af114fb4ff6c5d496d1dd76
         *
         * @param unionId
         * @return
         */
        public Builder unionId(String unionId) {
            this.unionId = unionId;
            return this;
        }


        /**
         * 租户内用户的唯一标识
         * <p> 示例值：gg895344
         *
         * @param userId
         * @return
         */
        public Builder userId(String userId) {
            this.userId = userId;
            return this;
        }


        public RevokeTokenEvent build() {
            return new RevokeTokenEvent(this);
        }
    }
}
