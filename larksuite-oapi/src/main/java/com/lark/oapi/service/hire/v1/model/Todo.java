// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.hire.v1.model;

import com.google.gson.annotations.SerializedName;

public class Todo {
    /**
     * 简历评估待办信息，仅当 type=evaluation 时返回
     * <p> 示例值：
     */
    @SerializedName("evaluation")
    private TodoCommon evaluation;
    /**
     * Offer 待办信息，仅当 type=offer 时返回
     * <p> 示例值：
     */
    @SerializedName("offer")
    private TodoCommon offer;
    /**
     * 笔试待办信息，仅当 type=exam 时返回
     * <p> 示例值：
     */
    @SerializedName("exam")
    private TodoCommon exam;
    /**
     * 面试待办信息，仅当 type=interview 时返回
     * <p> 示例值：
     */
    @SerializedName("interview")
    private TodoCommon interview;

    // builder 开始
    public Todo() {
    }

    public Todo(Builder builder) {
        /**
         * 简历评估待办信息，仅当 type=evaluation 时返回
         * <p> 示例值：
         */
        this.evaluation = builder.evaluation;
        /**
         * Offer 待办信息，仅当 type=offer 时返回
         * <p> 示例值：
         */
        this.offer = builder.offer;
        /**
         * 笔试待办信息，仅当 type=exam 时返回
         * <p> 示例值：
         */
        this.exam = builder.exam;
        /**
         * 面试待办信息，仅当 type=interview 时返回
         * <p> 示例值：
         */
        this.interview = builder.interview;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public TodoCommon getEvaluation() {
        return this.evaluation;
    }

    public void setEvaluation(TodoCommon evaluation) {
        this.evaluation = evaluation;
    }

    public TodoCommon getOffer() {
        return this.offer;
    }

    public void setOffer(TodoCommon offer) {
        this.offer = offer;
    }

    public TodoCommon getExam() {
        return this.exam;
    }

    public void setExam(TodoCommon exam) {
        this.exam = exam;
    }

    public TodoCommon getInterview() {
        return this.interview;
    }

    public void setInterview(TodoCommon interview) {
        this.interview = interview;
    }

    public static class Builder {
        /**
         * 简历评估待办信息，仅当 type=evaluation 时返回
         * <p> 示例值：
         */
        private TodoCommon evaluation;
        /**
         * Offer 待办信息，仅当 type=offer 时返回
         * <p> 示例值：
         */
        private TodoCommon offer;
        /**
         * 笔试待办信息，仅当 type=exam 时返回
         * <p> 示例值：
         */
        private TodoCommon exam;
        /**
         * 面试待办信息，仅当 type=interview 时返回
         * <p> 示例值：
         */
        private TodoCommon interview;

        /**
         * 简历评估待办信息，仅当 type=evaluation 时返回
         * <p> 示例值：
         *
         * @param evaluation
         * @return
         */
        public Builder evaluation(TodoCommon evaluation) {
            this.evaluation = evaluation;
            return this;
        }


        /**
         * Offer 待办信息，仅当 type=offer 时返回
         * <p> 示例值：
         *
         * @param offer
         * @return
         */
        public Builder offer(TodoCommon offer) {
            this.offer = offer;
            return this;
        }


        /**
         * 笔试待办信息，仅当 type=exam 时返回
         * <p> 示例值：
         *
         * @param exam
         * @return
         */
        public Builder exam(TodoCommon exam) {
            this.exam = exam;
            return this;
        }


        /**
         * 面试待办信息，仅当 type=interview 时返回
         * <p> 示例值：
         *
         * @param interview
         * @return
         */
        public Builder interview(TodoCommon interview) {
            this.interview = interview;
            return this;
        }


        public Todo build() {
            return new Todo(this);
        }
    }
}
