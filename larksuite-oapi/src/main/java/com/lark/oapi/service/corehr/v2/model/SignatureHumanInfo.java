// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.google.gson.annotations.SerializedName;

public class SignatureHumanInfo {
    /**
     * 在职员工ID
     * <p> 示例值：5ce6cd12
     */
    @SerializedName("employee_id")
    private String employeeId;
    /**
     * 员工待入职id
     * <p> 示例值：7278880340130022956
     */
    @SerializedName("pre_hire_id")
    private String preHireId;
    /**
     * 用户 ID 类型，适用于employee_id
     * <p> 示例值：people_corehr_id
     */
    @SerializedName("user_id_type")
    private String userIdType;
    /**
     * 归属人类型
     * <p> 示例值：
     */
    @SerializedName("human_type")
    private Enum humanType;

    // builder 开始
    public SignatureHumanInfo() {
    }

    public SignatureHumanInfo(Builder builder) {
        /**
         * 在职员工ID
         * <p> 示例值：5ce6cd12
         */
        this.employeeId = builder.employeeId;
        /**
         * 员工待入职id
         * <p> 示例值：7278880340130022956
         */
        this.preHireId = builder.preHireId;
        /**
         * 用户 ID 类型，适用于employee_id
         * <p> 示例值：people_corehr_id
         */
        this.userIdType = builder.userIdType;
        /**
         * 归属人类型
         * <p> 示例值：
         */
        this.humanType = builder.humanType;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getEmployeeId() {
        return this.employeeId;
    }

    public void setEmployeeId(String employeeId) {
        this.employeeId = employeeId;
    }

    public String getPreHireId() {
        return this.preHireId;
    }

    public void setPreHireId(String preHireId) {
        this.preHireId = preHireId;
    }

    public String getUserIdType() {
        return this.userIdType;
    }

    public void setUserIdType(String userIdType) {
        this.userIdType = userIdType;
    }

    public Enum getHumanType() {
        return this.humanType;
    }

    public void setHumanType(Enum humanType) {
        this.humanType = humanType;
    }

    public static class Builder {
        /**
         * 在职员工ID
         * <p> 示例值：5ce6cd12
         */
        private String employeeId;
        /**
         * 员工待入职id
         * <p> 示例值：7278880340130022956
         */
        private String preHireId;
        /**
         * 用户 ID 类型，适用于employee_id
         * <p> 示例值：people_corehr_id
         */
        private String userIdType;
        /**
         * 归属人类型
         * <p> 示例值：
         */
        private Enum humanType;

        /**
         * 在职员工ID
         * <p> 示例值：5ce6cd12
         *
         * @param employeeId
         * @return
         */
        public Builder employeeId(String employeeId) {
            this.employeeId = employeeId;
            return this;
        }


        /**
         * 员工待入职id
         * <p> 示例值：7278880340130022956
         *
         * @param preHireId
         * @return
         */
        public Builder preHireId(String preHireId) {
            this.preHireId = preHireId;
            return this;
        }


        /**
         * 用户 ID 类型，适用于employee_id
         * <p> 示例值：people_corehr_id
         *
         * @param userIdType
         * @return
         */
        public Builder userIdType(String userIdType) {
            this.userIdType = userIdType;
            return this;
        }

        /**
         * 用户 ID 类型，适用于employee_id
         * <p> 示例值：people_corehr_id
         *
         * @param userIdType {@link com.lark.oapi.service.corehr.v2.enums.SignatureHumanInfoUserIdTypeEnum}
         * @return
         */
        public Builder userIdType(com.lark.oapi.service.corehr.v2.enums.SignatureHumanInfoUserIdTypeEnum userIdType) {
            this.userIdType = userIdType.getValue();
            return this;
        }


        /**
         * 归属人类型
         * <p> 示例值：
         *
         * @param humanType
         * @return
         */
        public Builder humanType(Enum humanType) {
            this.humanType = humanType;
            return this;
        }


        public SignatureHumanInfo build() {
            return new SignatureHumanInfo(this);
        }
    }
}
