// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.sheets.v3.model;

import com.google.gson.annotations.SerializedName;

public class UpdateGridProperties {
    /**
     * 冻结行数
     * <p> 示例值：1
     */
    @SerializedName("frozen_row_count")
    private Integer frozenRowCount;
    /**
     * 冻结列数
     * <p> 示例值：1
     */
    @SerializedName("frozen_column_count")
    private Integer frozenColumnCount;

    // builder 开始
    public UpdateGridProperties() {
    }

    public UpdateGridProperties(Builder builder) {
        /**
         * 冻结行数
         * <p> 示例值：1
         */
        this.frozenRowCount = builder.frozenRowCount;
        /**
         * 冻结列数
         * <p> 示例值：1
         */
        this.frozenColumnCount = builder.frozenColumnCount;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Integer getFrozenRowCount() {
        return this.frozenRowCount;
    }

    public void setFrozenRowCount(Integer frozenRowCount) {
        this.frozenRowCount = frozenRowCount;
    }

    public Integer getFrozenColumnCount() {
        return this.frozenColumnCount;
    }

    public void setFrozenColumnCount(Integer frozenColumnCount) {
        this.frozenColumnCount = frozenColumnCount;
    }

    public static class Builder {
        /**
         * 冻结行数
         * <p> 示例值：1
         */
        private Integer frozenRowCount;
        /**
         * 冻结列数
         * <p> 示例值：1
         */
        private Integer frozenColumnCount;

        /**
         * 冻结行数
         * <p> 示例值：1
         *
         * @param frozenRowCount
         * @return
         */
        public Builder frozenRowCount(Integer frozenRowCount) {
            this.frozenRowCount = frozenRowCount;
            return this;
        }


        /**
         * 冻结列数
         * <p> 示例值：1
         *
         * @param frozenColumnCount
         * @return
         */
        public Builder frozenColumnCount(Integer frozenColumnCount) {
            this.frozenColumnCount = frozenColumnCount;
            return this;
        }


        public UpdateGridProperties build() {
            return new UpdateGridProperties(this);
        }
    }
}
