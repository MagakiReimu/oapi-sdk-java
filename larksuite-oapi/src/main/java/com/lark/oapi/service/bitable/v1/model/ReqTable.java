// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.bitable.v1.model;

import com.google.gson.annotations.SerializedName;

public class ReqTable {
    /**
     * 数据表名字，必填字段
     * <p> 示例值：table1
     */
    @SerializedName("name")
    private String name;
    /**
     * 默认表格视图的名称
     * <p> 示例值：表格
     */
    @SerializedName("default_view_name")
    private String defaultViewName;
    /**
     * 允许设置数据表的初始字段,默认第一个字段为索引列
     * <p> 示例值：
     */
    @SerializedName("fields")
    private AppTableCreateHeader[] fields;

    // builder 开始
    public ReqTable() {
    }

    public ReqTable(Builder builder) {
        /**
         * 数据表名字，必填字段
         * <p> 示例值：table1
         */
        this.name = builder.name;
        /**
         * 默认表格视图的名称
         * <p> 示例值：表格
         */
        this.defaultViewName = builder.defaultViewName;
        /**
         * 允许设置数据表的初始字段,默认第一个字段为索引列
         * <p> 示例值：
         */
        this.fields = builder.fields;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getDefaultViewName() {
        return this.defaultViewName;
    }

    public void setDefaultViewName(String defaultViewName) {
        this.defaultViewName = defaultViewName;
    }

    public AppTableCreateHeader[] getFields() {
        return this.fields;
    }

    public void setFields(AppTableCreateHeader[] fields) {
        this.fields = fields;
    }

    public static class Builder {
        /**
         * 数据表名字，必填字段
         * <p> 示例值：table1
         */
        private String name;
        /**
         * 默认表格视图的名称
         * <p> 示例值：表格
         */
        private String defaultViewName;
        /**
         * 允许设置数据表的初始字段,默认第一个字段为索引列
         * <p> 示例值：
         */
        private AppTableCreateHeader[] fields;

        /**
         * 数据表名字，必填字段
         * <p> 示例值：table1
         *
         * @param name
         * @return
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }


        /**
         * 默认表格视图的名称
         * <p> 示例值：表格
         *
         * @param defaultViewName
         * @return
         */
        public Builder defaultViewName(String defaultViewName) {
            this.defaultViewName = defaultViewName;
            return this;
        }


        /**
         * 允许设置数据表的初始字段,默认第一个字段为索引列
         * <p> 示例值：
         *
         * @param fields
         * @return
         */
        public Builder fields(AppTableCreateHeader[] fields) {
            this.fields = fields;
            return this;
        }


        public ReqTable build() {
            return new ReqTable(this);
        }
    }
}
