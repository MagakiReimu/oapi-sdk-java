// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.vc.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.vc.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class MeetingListExportReqBody {
    /**
     * 查询开始时间（unix时间，单位sec）
     * <p> 示例值：1655276858
     */
    @SerializedName("start_time")
    private String startTime;
    /**
     * 查询结束时间（unix时间，单位sec）
     * <p> 示例值：1655276858
     */
    @SerializedName("end_time")
    private String endTime;
    /**
     * 会议状态（不传默认为已结束会议）
     * <p> 示例值：2
     */
    @SerializedName("meeting_status")
    private Integer meetingStatus;
    /**
     * 按9位会议号筛选（最多一个筛选条件）
     * <p> 示例值：123456789
     */
    @SerializedName("meeting_no")
    private String meetingNo;
    /**
     * 按参会Lark用户筛选（最多一个筛选条件）
     * <p> 示例值：ou_3ec3f6a28a0d08c45d895276e8e5e19b
     */
    @SerializedName("user_id")
    private String userId;
    /**
     * 按参会Rooms筛选（最多一个筛选条件）
     * <p> 示例值：omm_eada1d61a550955240c28757e7dec3af
     */
    @SerializedName("room_id")
    private String roomId;
    /**
     * 按会议类型筛选（最多一个筛选条件）
     * <p> 示例值：2
     */
    @SerializedName("meeting_type")
    private Integer meetingType;

    // builder 开始
    public MeetingListExportReqBody() {
    }

    public MeetingListExportReqBody(Builder builder) {
        /**
         * 查询开始时间（unix时间，单位sec）
         * <p> 示例值：1655276858
         */
        this.startTime = builder.startTime;
        /**
         * 查询结束时间（unix时间，单位sec）
         * <p> 示例值：1655276858
         */
        this.endTime = builder.endTime;
        /**
         * 会议状态（不传默认为已结束会议）
         * <p> 示例值：2
         */
        this.meetingStatus = builder.meetingStatus;
        /**
         * 按9位会议号筛选（最多一个筛选条件）
         * <p> 示例值：123456789
         */
        this.meetingNo = builder.meetingNo;
        /**
         * 按参会Lark用户筛选（最多一个筛选条件）
         * <p> 示例值：ou_3ec3f6a28a0d08c45d895276e8e5e19b
         */
        this.userId = builder.userId;
        /**
         * 按参会Rooms筛选（最多一个筛选条件）
         * <p> 示例值：omm_eada1d61a550955240c28757e7dec3af
         */
        this.roomId = builder.roomId;
        /**
         * 按会议类型筛选（最多一个筛选条件）
         * <p> 示例值：2
         */
        this.meetingType = builder.meetingType;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getStartTime() {
        return this.startTime;
    }

    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    public String getEndTime() {
        return this.endTime;
    }

    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    public Integer getMeetingStatus() {
        return this.meetingStatus;
    }

    public void setMeetingStatus(Integer meetingStatus) {
        this.meetingStatus = meetingStatus;
    }

    public String getMeetingNo() {
        return this.meetingNo;
    }

    public void setMeetingNo(String meetingNo) {
        this.meetingNo = meetingNo;
    }

    public String getUserId() {
        return this.userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public String getRoomId() {
        return this.roomId;
    }

    public void setRoomId(String roomId) {
        this.roomId = roomId;
    }

    public Integer getMeetingType() {
        return this.meetingType;
    }

    public void setMeetingType(Integer meetingType) {
        this.meetingType = meetingType;
    }

    public static class Builder {
        /**
         * 查询开始时间（unix时间，单位sec）
         * <p> 示例值：1655276858
         */
        private String startTime;
        /**
         * 查询结束时间（unix时间，单位sec）
         * <p> 示例值：1655276858
         */
        private String endTime;
        /**
         * 会议状态（不传默认为已结束会议）
         * <p> 示例值：2
         */
        private Integer meetingStatus;
        /**
         * 按9位会议号筛选（最多一个筛选条件）
         * <p> 示例值：123456789
         */
        private String meetingNo;
        /**
         * 按参会Lark用户筛选（最多一个筛选条件）
         * <p> 示例值：ou_3ec3f6a28a0d08c45d895276e8e5e19b
         */
        private String userId;
        /**
         * 按参会Rooms筛选（最多一个筛选条件）
         * <p> 示例值：omm_eada1d61a550955240c28757e7dec3af
         */
        private String roomId;
        /**
         * 按会议类型筛选（最多一个筛选条件）
         * <p> 示例值：2
         */
        private Integer meetingType;

        /**
         * 查询开始时间（unix时间，单位sec）
         * <p> 示例值：1655276858
         *
         * @param startTime
         * @return
         */
        public Builder startTime(String startTime) {
            this.startTime = startTime;
            return this;
        }


        /**
         * 查询结束时间（unix时间，单位sec）
         * <p> 示例值：1655276858
         *
         * @param endTime
         * @return
         */
        public Builder endTime(String endTime) {
            this.endTime = endTime;
            return this;
        }


        /**
         * 会议状态（不传默认为已结束会议）
         * <p> 示例值：2
         *
         * @param meetingStatus
         * @return
         */
        public Builder meetingStatus(Integer meetingStatus) {
            this.meetingStatus = meetingStatus;
            return this;
        }

        /**
         * 会议状态（不传默认为已结束会议）
         * <p> 示例值：2
         *
         * @param meetingStatus {@link com.lark.oapi.service.vc.v1.enums.MeetingListExportMeetingStatusTypeEnum}
         * @return
         */
        public Builder meetingStatus(com.lark.oapi.service.vc.v1.enums.MeetingListExportMeetingStatusTypeEnum meetingStatus) {
            this.meetingStatus = meetingStatus.getValue();
            return this;
        }


        /**
         * 按9位会议号筛选（最多一个筛选条件）
         * <p> 示例值：123456789
         *
         * @param meetingNo
         * @return
         */
        public Builder meetingNo(String meetingNo) {
            this.meetingNo = meetingNo;
            return this;
        }


        /**
         * 按参会Lark用户筛选（最多一个筛选条件）
         * <p> 示例值：ou_3ec3f6a28a0d08c45d895276e8e5e19b
         *
         * @param userId
         * @return
         */
        public Builder userId(String userId) {
            this.userId = userId;
            return this;
        }


        /**
         * 按参会Rooms筛选（最多一个筛选条件）
         * <p> 示例值：omm_eada1d61a550955240c28757e7dec3af
         *
         * @param roomId
         * @return
         */
        public Builder roomId(String roomId) {
            this.roomId = roomId;
            return this;
        }


        /**
         * 按会议类型筛选（最多一个筛选条件）
         * <p> 示例值：2
         *
         * @param meetingType
         * @return
         */
        public Builder meetingType(Integer meetingType) {
            this.meetingType = meetingType;
            return this;
        }

        /**
         * 按会议类型筛选（最多一个筛选条件）
         * <p> 示例值：2
         *
         * @param meetingType {@link com.lark.oapi.service.vc.v1.enums.MeetingListExportMeetingTypeEnum}
         * @return
         */
        public Builder meetingType(com.lark.oapi.service.vc.v1.enums.MeetingListExportMeetingTypeEnum meetingType) {
            this.meetingType = meetingType.getValue();
            return this;
        }


        public MeetingListExportReqBody build() {
            return new MeetingListExportReqBody(this);
        }
    }
}
