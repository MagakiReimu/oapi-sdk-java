// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.hire.v1.model;

import com.google.gson.annotations.SerializedName;

public class CommonSchemaChild {
    /**
     * 字段 ID
     * <p> 示例值：6949805467799537964
     */
    @SerializedName("id")
    private String id;
    /**
     * 字段名称
     * <p> 示例值：
     */
    @SerializedName("name")
    private I18n name;
    /**
     * 字段描述
     * <p> 示例值：
     */
    @SerializedName("description")
    private I18n description;
    /**
     * 字段信息
     * <p> 示例值：
     */
    @SerializedName("setting")
    private CommonSchemaSetting setting;
    /**
     * 所属模块 ID
     * <p> 示例值：6949805467799537964
     */
    @SerializedName("parent_id")
    private String parentId;
    /**
     * 是否是自定义字段
     * <p> 示例值：true
     */
    @SerializedName("is_customized")
    private Boolean isCustomized;
    /**
     * 是否必填
     * <p> 示例值：false
     */
    @SerializedName("is_required")
    private Boolean isRequired;
    /**
     * 是否可见
     * <p> 示例值：true
     */
    @SerializedName("is_visible")
    private Boolean isVisible;
    /**
     * 是否启用
     * <p> 示例值：1
     */
    @SerializedName("active_status")
    private Integer activeStatus;

    // builder 开始
    public CommonSchemaChild() {
    }

    public CommonSchemaChild(Builder builder) {
        /**
         * 字段 ID
         * <p> 示例值：6949805467799537964
         */
        this.id = builder.id;
        /**
         * 字段名称
         * <p> 示例值：
         */
        this.name = builder.name;
        /**
         * 字段描述
         * <p> 示例值：
         */
        this.description = builder.description;
        /**
         * 字段信息
         * <p> 示例值：
         */
        this.setting = builder.setting;
        /**
         * 所属模块 ID
         * <p> 示例值：6949805467799537964
         */
        this.parentId = builder.parentId;
        /**
         * 是否是自定义字段
         * <p> 示例值：true
         */
        this.isCustomized = builder.isCustomized;
        /**
         * 是否必填
         * <p> 示例值：false
         */
        this.isRequired = builder.isRequired;
        /**
         * 是否可见
         * <p> 示例值：true
         */
        this.isVisible = builder.isVisible;
        /**
         * 是否启用
         * <p> 示例值：1
         */
        this.activeStatus = builder.activeStatus;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public I18n getName() {
        return this.name;
    }

    public void setName(I18n name) {
        this.name = name;
    }

    public I18n getDescription() {
        return this.description;
    }

    public void setDescription(I18n description) {
        this.description = description;
    }

    public CommonSchemaSetting getSetting() {
        return this.setting;
    }

    public void setSetting(CommonSchemaSetting setting) {
        this.setting = setting;
    }

    public String getParentId() {
        return this.parentId;
    }

    public void setParentId(String parentId) {
        this.parentId = parentId;
    }

    public Boolean getIsCustomized() {
        return this.isCustomized;
    }

    public void setIsCustomized(Boolean isCustomized) {
        this.isCustomized = isCustomized;
    }

    public Boolean getIsRequired() {
        return this.isRequired;
    }

    public void setIsRequired(Boolean isRequired) {
        this.isRequired = isRequired;
    }

    public Boolean getIsVisible() {
        return this.isVisible;
    }

    public void setIsVisible(Boolean isVisible) {
        this.isVisible = isVisible;
    }

    public Integer getActiveStatus() {
        return this.activeStatus;
    }

    public void setActiveStatus(Integer activeStatus) {
        this.activeStatus = activeStatus;
    }

    public static class Builder {
        /**
         * 字段 ID
         * <p> 示例值：6949805467799537964
         */
        private String id;
        /**
         * 字段名称
         * <p> 示例值：
         */
        private I18n name;
        /**
         * 字段描述
         * <p> 示例值：
         */
        private I18n description;
        /**
         * 字段信息
         * <p> 示例值：
         */
        private CommonSchemaSetting setting;
        /**
         * 所属模块 ID
         * <p> 示例值：6949805467799537964
         */
        private String parentId;
        /**
         * 是否是自定义字段
         * <p> 示例值：true
         */
        private Boolean isCustomized;
        /**
         * 是否必填
         * <p> 示例值：false
         */
        private Boolean isRequired;
        /**
         * 是否可见
         * <p> 示例值：true
         */
        private Boolean isVisible;
        /**
         * 是否启用
         * <p> 示例值：1
         */
        private Integer activeStatus;

        /**
         * 字段 ID
         * <p> 示例值：6949805467799537964
         *
         * @param id
         * @return
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }


        /**
         * 字段名称
         * <p> 示例值：
         *
         * @param name
         * @return
         */
        public Builder name(I18n name) {
            this.name = name;
            return this;
        }


        /**
         * 字段描述
         * <p> 示例值：
         *
         * @param description
         * @return
         */
        public Builder description(I18n description) {
            this.description = description;
            return this;
        }


        /**
         * 字段信息
         * <p> 示例值：
         *
         * @param setting
         * @return
         */
        public Builder setting(CommonSchemaSetting setting) {
            this.setting = setting;
            return this;
        }


        /**
         * 所属模块 ID
         * <p> 示例值：6949805467799537964
         *
         * @param parentId
         * @return
         */
        public Builder parentId(String parentId) {
            this.parentId = parentId;
            return this;
        }


        /**
         * 是否是自定义字段
         * <p> 示例值：true
         *
         * @param isCustomized
         * @return
         */
        public Builder isCustomized(Boolean isCustomized) {
            this.isCustomized = isCustomized;
            return this;
        }


        /**
         * 是否必填
         * <p> 示例值：false
         *
         * @param isRequired
         * @return
         */
        public Builder isRequired(Boolean isRequired) {
            this.isRequired = isRequired;
            return this;
        }


        /**
         * 是否可见
         * <p> 示例值：true
         *
         * @param isVisible
         * @return
         */
        public Builder isVisible(Boolean isVisible) {
            this.isVisible = isVisible;
            return this;
        }


        /**
         * 是否启用
         * <p> 示例值：1
         *
         * @param activeStatus
         * @return
         */
        public Builder activeStatus(Integer activeStatus) {
            this.activeStatus = activeStatus;
            return this;
        }


        public CommonSchemaChild build() {
            return new CommonSchemaChild(this);
        }
    }
}
