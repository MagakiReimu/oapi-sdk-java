// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.task.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.task.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class PatchSectionReqBody {
    /**
     * 要更新的自定义分组的数据，仅支持name, insert_after, insert_before
     * <p> 示例值：
     */
    @SerializedName("section")
    private InputSection section;
    /**
     * 要更新的字段名
     * <p> 示例值：
     */
    @SerializedName("update_fields")
    private String[] updateFields;

    // builder 开始
    public PatchSectionReqBody() {
    }

    public PatchSectionReqBody(Builder builder) {
        /**
         * 要更新的自定义分组的数据，仅支持name, insert_after, insert_before
         * <p> 示例值：
         */
        this.section = builder.section;
        /**
         * 要更新的字段名
         * <p> 示例值：
         */
        this.updateFields = builder.updateFields;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public InputSection getSection() {
        return this.section;
    }

    public void setSection(InputSection section) {
        this.section = section;
    }

    public String[] getUpdateFields() {
        return this.updateFields;
    }

    public void setUpdateFields(String[] updateFields) {
        this.updateFields = updateFields;
    }

    public static class Builder {
        /**
         * 要更新的自定义分组的数据，仅支持name, insert_after, insert_before
         * <p> 示例值：
         */
        private InputSection section;
        /**
         * 要更新的字段名
         * <p> 示例值：
         */
        private String[] updateFields;

        /**
         * 要更新的自定义分组的数据，仅支持name, insert_after, insert_before
         * <p> 示例值：
         *
         * @param section
         * @return
         */
        public Builder section(InputSection section) {
            this.section = section;
            return this;
        }


        /**
         * 要更新的字段名
         * <p> 示例值：
         *
         * @param updateFields
         * @return
         */
        public Builder updateFields(String[] updateFields) {
            this.updateFields = updateFields;
            return this;
        }


        public PatchSectionReqBody build() {
            return new PatchSectionReqBody(this);
        }
    }
}
