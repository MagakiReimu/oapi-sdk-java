// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.google.gson.annotations.SerializedName;

public class OvertimeRule {
    /**
     * 加班上班时间
     * <p> 示例值：9：00
     */
    @SerializedName("on_overtime")
    private String onOvertime;
    /**
     * 加班下班时间
     * <p> 示例值：18：00， 第二天凌晨2点， 26：00
     */
    @SerializedName("off_overtime")
    private String offOvertime;

    // builder 开始
    public OvertimeRule() {
    }

    public OvertimeRule(Builder builder) {
        /**
         * 加班上班时间
         * <p> 示例值：9：00
         */
        this.onOvertime = builder.onOvertime;
        /**
         * 加班下班时间
         * <p> 示例值：18：00， 第二天凌晨2点， 26：00
         */
        this.offOvertime = builder.offOvertime;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getOnOvertime() {
        return this.onOvertime;
    }

    public void setOnOvertime(String onOvertime) {
        this.onOvertime = onOvertime;
    }

    public String getOffOvertime() {
        return this.offOvertime;
    }

    public void setOffOvertime(String offOvertime) {
        this.offOvertime = offOvertime;
    }

    public static class Builder {
        /**
         * 加班上班时间
         * <p> 示例值：9：00
         */
        private String onOvertime;
        /**
         * 加班下班时间
         * <p> 示例值：18：00， 第二天凌晨2点， 26：00
         */
        private String offOvertime;

        /**
         * 加班上班时间
         * <p> 示例值：9：00
         *
         * @param onOvertime
         * @return
         */
        public Builder onOvertime(String onOvertime) {
            this.onOvertime = onOvertime;
            return this;
        }


        /**
         * 加班下班时间
         * <p> 示例值：18：00， 第二天凌晨2点， 26：00
         *
         * @param offOvertime
         * @return
         */
        public Builder offOvertime(String offOvertime) {
            this.offOvertime = offOvertime;
            return this;
        }


        public OvertimeRule build() {
            return new OvertimeRule(this);
        }
    }
}
