// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v1.model;

import com.google.gson.annotations.SerializedName;

public class UpdateChatModerationReqBody {
    /**
     * 群发言模式（all_members/only_owner/moderator_list，其中 moderator_list 表示部分用户可发言的模式）
     * <p> 示例值：moderator_list
     */
    @SerializedName("moderation_setting")
    private String moderationSetting;
    /**
     * 选择部分用户可发言模式时，添加的可发言用户列表（自动过滤不在群内的用户）
     * <p> 示例值：["4d7a3c6g"]
     */
    @SerializedName("moderator_added_list")
    private String[] moderatorAddedList;
    /**
     * 选择部分用户可发言模式时，移除的可发言用户列表（自动过滤不在群内的用户）
     * <p> 示例值：["4d7a3ih6"]
     */
    @SerializedName("moderator_removed_list")
    private String[] moderatorRemovedList;

    // builder 开始
    public UpdateChatModerationReqBody() {
    }

    public UpdateChatModerationReqBody(Builder builder) {
        /**
         * 群发言模式（all_members/only_owner/moderator_list，其中 moderator_list 表示部分用户可发言的模式）
         * <p> 示例值：moderator_list
         */
        this.moderationSetting = builder.moderationSetting;
        /**
         * 选择部分用户可发言模式时，添加的可发言用户列表（自动过滤不在群内的用户）
         * <p> 示例值：["4d7a3c6g"]
         */
        this.moderatorAddedList = builder.moderatorAddedList;
        /**
         * 选择部分用户可发言模式时，移除的可发言用户列表（自动过滤不在群内的用户）
         * <p> 示例值：["4d7a3ih6"]
         */
        this.moderatorRemovedList = builder.moderatorRemovedList;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getModerationSetting() {
        return this.moderationSetting;
    }

    public void setModerationSetting(String moderationSetting) {
        this.moderationSetting = moderationSetting;
    }

    public String[] getModeratorAddedList() {
        return this.moderatorAddedList;
    }

    public void setModeratorAddedList(String[] moderatorAddedList) {
        this.moderatorAddedList = moderatorAddedList;
    }

    public String[] getModeratorRemovedList() {
        return this.moderatorRemovedList;
    }

    public void setModeratorRemovedList(String[] moderatorRemovedList) {
        this.moderatorRemovedList = moderatorRemovedList;
    }

    public static class Builder {
        /**
         * 群发言模式（all_members/only_owner/moderator_list，其中 moderator_list 表示部分用户可发言的模式）
         * <p> 示例值：moderator_list
         */
        private String moderationSetting;
        /**
         * 选择部分用户可发言模式时，添加的可发言用户列表（自动过滤不在群内的用户）
         * <p> 示例值：["4d7a3c6g"]
         */
        private String[] moderatorAddedList;
        /**
         * 选择部分用户可发言模式时，移除的可发言用户列表（自动过滤不在群内的用户）
         * <p> 示例值：["4d7a3ih6"]
         */
        private String[] moderatorRemovedList;

        /**
         * 群发言模式（all_members/only_owner/moderator_list，其中 moderator_list 表示部分用户可发言的模式）
         * <p> 示例值：moderator_list
         *
         * @param moderationSetting
         * @return
         */
        public Builder moderationSetting(String moderationSetting) {
            this.moderationSetting = moderationSetting;
            return this;
        }


        /**
         * 选择部分用户可发言模式时，添加的可发言用户列表（自动过滤不在群内的用户）
         * <p> 示例值：["4d7a3c6g"]
         *
         * @param moderatorAddedList
         * @return
         */
        public Builder moderatorAddedList(String[] moderatorAddedList) {
            this.moderatorAddedList = moderatorAddedList;
            return this;
        }


        /**
         * 选择部分用户可发言模式时，移除的可发言用户列表（自动过滤不在群内的用户）
         * <p> 示例值：["4d7a3ih6"]
         *
         * @param moderatorRemovedList
         * @return
         */
        public Builder moderatorRemovedList(String[] moderatorRemovedList) {
            this.moderatorRemovedList = moderatorRemovedList;
            return this;
        }


        public UpdateChatModerationReqBody build() {
            return new UpdateChatModerationReqBody(this);
        }
    }
}
