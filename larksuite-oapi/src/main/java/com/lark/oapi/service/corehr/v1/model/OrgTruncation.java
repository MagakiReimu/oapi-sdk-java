// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.corehr.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class OrgTruncation {
    /**
     * 组织名称
     * <p> 示例值：department
     */
    @SerializedName("org_key")
    private String orgKey;
    /**
     * 下钻类型
     * <p> 示例值：0
     */
    @SerializedName("type")
    private Integer type;
    /**
     * 下钻深度
     * <p> 示例值：0
     */
    @SerializedName("depth")
    private Integer depth;

    // builder 开始
    public OrgTruncation() {
    }

    public OrgTruncation(Builder builder) {
        /**
         * 组织名称
         * <p> 示例值：department
         */
        this.orgKey = builder.orgKey;
        /**
         * 下钻类型
         * <p> 示例值：0
         */
        this.type = builder.type;
        /**
         * 下钻深度
         * <p> 示例值：0
         */
        this.depth = builder.depth;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getOrgKey() {
        return this.orgKey;
    }

    public void setOrgKey(String orgKey) {
        this.orgKey = orgKey;
    }

    public Integer getType() {
        return this.type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public Integer getDepth() {
        return this.depth;
    }

    public void setDepth(Integer depth) {
        this.depth = depth;
    }

    public static class Builder {
        /**
         * 组织名称
         * <p> 示例值：department
         */
        private String orgKey;
        /**
         * 下钻类型
         * <p> 示例值：0
         */
        private Integer type;
        /**
         * 下钻深度
         * <p> 示例值：0
         */
        private Integer depth;

        /**
         * 组织名称
         * <p> 示例值：department
         *
         * @param orgKey
         * @return
         */
        public Builder orgKey(String orgKey) {
            this.orgKey = orgKey;
            return this;
        }


        /**
         * 下钻类型
         * <p> 示例值：0
         *
         * @param type
         * @return
         */
        public Builder type(Integer type) {
            this.type = type;
            return this;
        }


        /**
         * 下钻深度
         * <p> 示例值：0
         *
         * @param depth
         * @return
         */
        public Builder depth(Integer depth) {
            this.depth = depth;
            return this;
        }


        public OrgTruncation build() {
            return new OrgTruncation(this);
        }
    }
}
