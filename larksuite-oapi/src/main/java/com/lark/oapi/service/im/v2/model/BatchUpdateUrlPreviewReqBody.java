// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v2.model;

import com.google.gson.annotations.SerializedName;

public class BatchUpdateUrlPreviewReqBody {
    /**
     * URL预览的token列表
     * <p> 示例值：
     */
    @SerializedName("preview_tokens")
    private String[] previewTokens;
    /**
     * 需要更新URL预览的用户open_id。若不传，则默认更新URL所在会话成员；若用户不在URL所在会话，则无法更新该用户
     * <p> 示例值：
     */
    @SerializedName("open_ids")
    private String[] openIds;

    // builder 开始
    public BatchUpdateUrlPreviewReqBody() {
    }

    public BatchUpdateUrlPreviewReqBody(Builder builder) {
        /**
         * URL预览的token列表
         * <p> 示例值：
         */
        this.previewTokens = builder.previewTokens;
        /**
         * 需要更新URL预览的用户open_id。若不传，则默认更新URL所在会话成员；若用户不在URL所在会话，则无法更新该用户
         * <p> 示例值：
         */
        this.openIds = builder.openIds;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String[] getPreviewTokens() {
        return this.previewTokens;
    }

    public void setPreviewTokens(String[] previewTokens) {
        this.previewTokens = previewTokens;
    }

    public String[] getOpenIds() {
        return this.openIds;
    }

    public void setOpenIds(String[] openIds) {
        this.openIds = openIds;
    }

    public static class Builder {
        /**
         * URL预览的token列表
         * <p> 示例值：
         */
        private String[] previewTokens;
        /**
         * 需要更新URL预览的用户open_id。若不传，则默认更新URL所在会话成员；若用户不在URL所在会话，则无法更新该用户
         * <p> 示例值：
         */
        private String[] openIds;

        /**
         * URL预览的token列表
         * <p> 示例值：
         *
         * @param previewTokens
         * @return
         */
        public Builder previewTokens(String[] previewTokens) {
            this.previewTokens = previewTokens;
            return this;
        }


        /**
         * 需要更新URL预览的用户open_id。若不传，则默认更新URL所在会话成员；若用户不在URL所在会话，则无法更新该用户
         * <p> 示例值：
         *
         * @param openIds
         * @return
         */
        public Builder openIds(String[] openIds) {
            this.openIds = openIds;
            return this;
        }


        public BatchUpdateUrlPreviewReqBody build() {
            return new BatchUpdateUrlPreviewReqBody(this);
        }
    }
}
