// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.corehr.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class BasicInfoUpdate {
    /**
     * 姓名,该值是一个list，会全量更新
     * <p> 示例值：
     */
    @SerializedName("names")
    private NameForUpdate[] names;
    /**
     * 电话,该值是一个list，会全量更新
     * <p> 示例值：
     */
    @SerializedName("phones")
    private PhoneForUpdate[] phones;
    /**
     * 邮箱,该值是一个list，会全量更新
     * <p> 示例值：
     */
    @SerializedName("emails")
    private EmailForUpdate[] emails;

    // builder 开始
    public BasicInfoUpdate() {
    }

    public BasicInfoUpdate(Builder builder) {
        /**
         * 姓名,该值是一个list，会全量更新
         * <p> 示例值：
         */
        this.names = builder.names;
        /**
         * 电话,该值是一个list，会全量更新
         * <p> 示例值：
         */
        this.phones = builder.phones;
        /**
         * 邮箱,该值是一个list，会全量更新
         * <p> 示例值：
         */
        this.emails = builder.emails;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public NameForUpdate[] getNames() {
        return this.names;
    }

    public void setNames(NameForUpdate[] names) {
        this.names = names;
    }

    public PhoneForUpdate[] getPhones() {
        return this.phones;
    }

    public void setPhones(PhoneForUpdate[] phones) {
        this.phones = phones;
    }

    public EmailForUpdate[] getEmails() {
        return this.emails;
    }

    public void setEmails(EmailForUpdate[] emails) {
        this.emails = emails;
    }

    public static class Builder {
        /**
         * 姓名,该值是一个list，会全量更新
         * <p> 示例值：
         */
        private NameForUpdate[] names;
        /**
         * 电话,该值是一个list，会全量更新
         * <p> 示例值：
         */
        private PhoneForUpdate[] phones;
        /**
         * 邮箱,该值是一个list，会全量更新
         * <p> 示例值：
         */
        private EmailForUpdate[] emails;

        /**
         * 姓名,该值是一个list，会全量更新
         * <p> 示例值：
         *
         * @param names
         * @return
         */
        public Builder names(NameForUpdate[] names) {
            this.names = names;
            return this;
        }


        /**
         * 电话,该值是一个list，会全量更新
         * <p> 示例值：
         *
         * @param phones
         * @return
         */
        public Builder phones(PhoneForUpdate[] phones) {
            this.phones = phones;
            return this;
        }


        /**
         * 邮箱,该值是一个list，会全量更新
         * <p> 示例值：
         *
         * @param emails
         * @return
         */
        public Builder emails(EmailForUpdate[] emails) {
            this.emails = emails;
            return this;
        }


        public BasicInfoUpdate build() {
            return new BasicInfoUpdate(this);
        }
    }
}
