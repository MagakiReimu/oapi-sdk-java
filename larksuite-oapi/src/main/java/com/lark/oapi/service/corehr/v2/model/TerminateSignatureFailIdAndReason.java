// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.corehr.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class TerminateSignatureFailIdAndReason {
    /**
     * 终止操作失败的文件ID
     * <p> 示例值：7345403447803379731
     */
    @SerializedName("signature_file_id")
    private String signatureFileId;
    /**
     * 终止失败的原因
     * <p> 示例值：文件状态不允许终止
     */
    @SerializedName("fail_reason")
    private String failReason;

    // builder 开始
    public TerminateSignatureFailIdAndReason() {
    }

    public TerminateSignatureFailIdAndReason(Builder builder) {
        /**
         * 终止操作失败的文件ID
         * <p> 示例值：7345403447803379731
         */
        this.signatureFileId = builder.signatureFileId;
        /**
         * 终止失败的原因
         * <p> 示例值：文件状态不允许终止
         */
        this.failReason = builder.failReason;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getSignatureFileId() {
        return this.signatureFileId;
    }

    public void setSignatureFileId(String signatureFileId) {
        this.signatureFileId = signatureFileId;
    }

    public String getFailReason() {
        return this.failReason;
    }

    public void setFailReason(String failReason) {
        this.failReason = failReason;
    }

    public static class Builder {
        /**
         * 终止操作失败的文件ID
         * <p> 示例值：7345403447803379731
         */
        private String signatureFileId;
        /**
         * 终止失败的原因
         * <p> 示例值：文件状态不允许终止
         */
        private String failReason;

        /**
         * 终止操作失败的文件ID
         * <p> 示例值：7345403447803379731
         *
         * @param signatureFileId
         * @return
         */
        public Builder signatureFileId(String signatureFileId) {
            this.signatureFileId = signatureFileId;
            return this;
        }


        /**
         * 终止失败的原因
         * <p> 示例值：文件状态不允许终止
         *
         * @param failReason
         * @return
         */
        public Builder failReason(String failReason) {
            this.failReason = failReason;
            return this;
        }


        public TerminateSignatureFailIdAndReason build() {
            return new TerminateSignatureFailIdAndReason(this);
        }
    }
}
