// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.hire.v1.model;

import com.google.gson.annotations.SerializedName;

public class OnboardStatusTalentReqBody {
    /**
     * 操作类型 1:入职 2:离职
     * <p> 示例值：1
     */
    @SerializedName("operation")
    private Integer operation;
    /**
     * 毫秒时间戳
     * <p> 示例值：1676548784889
     */
    @SerializedName("onboard_time")
    private String onboardTime;
    /**
     * 毫秒时间戳
     * <p> 示例值：1676548784890
     */
    @SerializedName("overboard_time")
    private String overboardTime;

    // builder 开始
    public OnboardStatusTalentReqBody() {
    }

    public OnboardStatusTalentReqBody(Builder builder) {
        /**
         * 操作类型 1:入职 2:离职
         * <p> 示例值：1
         */
        this.operation = builder.operation;
        /**
         * 毫秒时间戳
         * <p> 示例值：1676548784889
         */
        this.onboardTime = builder.onboardTime;
        /**
         * 毫秒时间戳
         * <p> 示例值：1676548784890
         */
        this.overboardTime = builder.overboardTime;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Integer getOperation() {
        return this.operation;
    }

    public void setOperation(Integer operation) {
        this.operation = operation;
    }

    public String getOnboardTime() {
        return this.onboardTime;
    }

    public void setOnboardTime(String onboardTime) {
        this.onboardTime = onboardTime;
    }

    public String getOverboardTime() {
        return this.overboardTime;
    }

    public void setOverboardTime(String overboardTime) {
        this.overboardTime = overboardTime;
    }

    public static class Builder {
        /**
         * 操作类型 1:入职 2:离职
         * <p> 示例值：1
         */
        private Integer operation;
        /**
         * 毫秒时间戳
         * <p> 示例值：1676548784889
         */
        private String onboardTime;
        /**
         * 毫秒时间戳
         * <p> 示例值：1676548784890
         */
        private String overboardTime;

        /**
         * 操作类型 1:入职 2:离职
         * <p> 示例值：1
         *
         * @param operation
         * @return
         */
        public Builder operation(Integer operation) {
            this.operation = operation;
            return this;
        }


        /**
         * 毫秒时间戳
         * <p> 示例值：1676548784889
         *
         * @param onboardTime
         * @return
         */
        public Builder onboardTime(String onboardTime) {
            this.onboardTime = onboardTime;
            return this;
        }


        /**
         * 毫秒时间戳
         * <p> 示例值：1676548784890
         *
         * @param overboardTime
         * @return
         */
        public Builder overboardTime(String overboardTime) {
            this.overboardTime = overboardTime;
            return this;
        }


        public OnboardStatusTalentReqBody build() {
            return new OnboardStatusTalentReqBody(this);
        }
    }
}
