// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.google.gson.annotations.SerializedName;

public class BackgroundCheck {
    /**
     * 背调ID
     * <p> 示例值：
     */
    @SerializedName("id")
    private String id;
    /**
     * 套餐
     * <p> 示例值：
     */
    @SerializedName("package")
    private Integer package_;
    /**
     * 状态
     * <p> 示例值：
     */
    @SerializedName("status")
    private Integer status;
    /**
     * 创建时间
     * <p> 示例值：
     */
    @SerializedName("created_time")
    private String createdTime;
    /**
     * 修改时间
     * <p> 示例值：
     */
    @SerializedName("modified_time")
    private String modifiedTime;
    /**
     * 背调对象ID
     * <p> 示例值：
     */
    @SerializedName("target_id")
    private String targetId;
    /**
     * 结果
     * <p> 示例值：
     */
    @SerializedName("outcome")
    private Integer outcome;
    /**
     * 报告
     * <p> 示例值：
     */
    @SerializedName("report")
    private BackgroundCheckReportObject report;

    // builder 开始
    public BackgroundCheck() {
    }

    public BackgroundCheck(Builder builder) {
        /**
         * 背调ID
         * <p> 示例值：
         */
        this.id = builder.id;
        /**
         * 套餐
         * <p> 示例值：
         */
        this.package_ = builder.package_;
        /**
         * 状态
         * <p> 示例值：
         */
        this.status = builder.status;
        /**
         * 创建时间
         * <p> 示例值：
         */
        this.createdTime = builder.createdTime;
        /**
         * 修改时间
         * <p> 示例值：
         */
        this.modifiedTime = builder.modifiedTime;
        /**
         * 背调对象ID
         * <p> 示例值：
         */
        this.targetId = builder.targetId;
        /**
         * 结果
         * <p> 示例值：
         */
        this.outcome = builder.outcome;
        /**
         * 报告
         * <p> 示例值：
         */
        this.report = builder.report;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public Integer getPackage() {
        return this.package_;
    }

    public void setPackage(Integer package_) {
        this.package_ = package_;
    }

    public Integer getStatus() {
        return this.status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public String getCreatedTime() {
        return this.createdTime;
    }

    public void setCreatedTime(String createdTime) {
        this.createdTime = createdTime;
    }

    public String getModifiedTime() {
        return this.modifiedTime;
    }

    public void setModifiedTime(String modifiedTime) {
        this.modifiedTime = modifiedTime;
    }

    public String getTargetId() {
        return this.targetId;
    }

    public void setTargetId(String targetId) {
        this.targetId = targetId;
    }

    public Integer getOutcome() {
        return this.outcome;
    }

    public void setOutcome(Integer outcome) {
        this.outcome = outcome;
    }

    public BackgroundCheckReportObject getReport() {
        return this.report;
    }

    public void setReport(BackgroundCheckReportObject report) {
        this.report = report;
    }

    public static class Builder {
        /**
         * 背调ID
         * <p> 示例值：
         */
        private String id;
        /**
         * 套餐
         * <p> 示例值：
         */
        private Integer package_;
        /**
         * 状态
         * <p> 示例值：
         */
        private Integer status;
        /**
         * 创建时间
         * <p> 示例值：
         */
        private String createdTime;
        /**
         * 修改时间
         * <p> 示例值：
         */
        private String modifiedTime;
        /**
         * 背调对象ID
         * <p> 示例值：
         */
        private String targetId;
        /**
         * 结果
         * <p> 示例值：
         */
        private Integer outcome;
        /**
         * 报告
         * <p> 示例值：
         */
        private BackgroundCheckReportObject report;

        /**
         * 背调ID
         * <p> 示例值：
         *
         * @param id
         * @return
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }


        /**
         * 套餐
         * <p> 示例值：
         *
         * @param package_
         * @return
         */
        public Builder package_(Integer package_) {
            this.package_ = package_;
            return this;
        }

        /**
         * 套餐
         * <p> 示例值：
         *
         * @param package_ {@link com.lark.oapi.service.corehr.v1.enums.BackgroundCheckPackageEnum}
         * @return
         */
        public Builder package_(com.lark.oapi.service.corehr.v1.enums.BackgroundCheckPackageEnum package_) {
            this.package_ = package_.getValue();
            return this;
        }


        /**
         * 状态
         * <p> 示例值：
         *
         * @param status
         * @return
         */
        public Builder status(Integer status) {
            this.status = status;
            return this;
        }

        /**
         * 状态
         * <p> 示例值：
         *
         * @param status {@link com.lark.oapi.service.corehr.v1.enums.BackgroundCheckStatusEnum}
         * @return
         */
        public Builder status(com.lark.oapi.service.corehr.v1.enums.BackgroundCheckStatusEnum status) {
            this.status = status.getValue();
            return this;
        }


        /**
         * 创建时间
         * <p> 示例值：
         *
         * @param createdTime
         * @return
         */
        public Builder createdTime(String createdTime) {
            this.createdTime = createdTime;
            return this;
        }


        /**
         * 修改时间
         * <p> 示例值：
         *
         * @param modifiedTime
         * @return
         */
        public Builder modifiedTime(String modifiedTime) {
            this.modifiedTime = modifiedTime;
            return this;
        }


        /**
         * 背调对象ID
         * <p> 示例值：
         *
         * @param targetId
         * @return
         */
        public Builder targetId(String targetId) {
            this.targetId = targetId;
            return this;
        }


        /**
         * 结果
         * <p> 示例值：
         *
         * @param outcome
         * @return
         */
        public Builder outcome(Integer outcome) {
            this.outcome = outcome;
            return this;
        }

        /**
         * 结果
         * <p> 示例值：
         *
         * @param outcome {@link com.lark.oapi.service.corehr.v1.enums.BackgroundCheckOutcomeEnum}
         * @return
         */
        public Builder outcome(com.lark.oapi.service.corehr.v1.enums.BackgroundCheckOutcomeEnum outcome) {
            this.outcome = outcome.getValue();
            return this;
        }


        /**
         * 报告
         * <p> 示例值：
         *
         * @param report
         * @return
         */
        public Builder report(BackgroundCheckReportObject report) {
            this.report = report;
            return this;
        }


        public BackgroundCheck build() {
            return new BackgroundCheck(this);
        }
    }
}
