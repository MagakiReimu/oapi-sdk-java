// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.google.gson.annotations.SerializedName;

public class SignatureTemplateCombinationFieldInfo {
    /**
     * total_apiname
     * <p> 示例值：status
     */
    @SerializedName("total_apiname")
    private String totalApiname;
    /**
     * apiname
     * <p> 示例值：status
     */
    @SerializedName("apiname")
    private String apiname;
    /**
     * 中英文描述
     * <p> 示例值：
     */
    @SerializedName("title")
    private I18n[] title;
    /**
     * 适用区域名称
     * <p> 示例值：
     */
    @SerializedName("contents")
    private SignatureTemplateCombinationSubFieldInfo[][] contents;
    /**
     * 电子签模板字段源类型
     * <p> 示例值：
     */
    @SerializedName("source")
    private Enum source;

    // builder 开始
    public SignatureTemplateCombinationFieldInfo() {
    }

    public SignatureTemplateCombinationFieldInfo(Builder builder) {
        /**
         * total_apiname
         * <p> 示例值：status
         */
        this.totalApiname = builder.totalApiname;
        /**
         * apiname
         * <p> 示例值：status
         */
        this.apiname = builder.apiname;
        /**
         * 中英文描述
         * <p> 示例值：
         */
        this.title = builder.title;
        /**
         * 适用区域名称
         * <p> 示例值：
         */
        this.contents = builder.contents;
        /**
         * 电子签模板字段源类型
         * <p> 示例值：
         */
        this.source = builder.source;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getTotalApiname() {
        return this.totalApiname;
    }

    public void setTotalApiname(String totalApiname) {
        this.totalApiname = totalApiname;
    }

    public String getApiname() {
        return this.apiname;
    }

    public void setApiname(String apiname) {
        this.apiname = apiname;
    }

    public I18n[] getTitle() {
        return this.title;
    }

    public void setTitle(I18n[] title) {
        this.title = title;
    }

    public SignatureTemplateCombinationSubFieldInfo[][] getContents() {
        return this.contents;
    }

    public void setContents(SignatureTemplateCombinationSubFieldInfo[][] contents) {
        this.contents = contents;
    }

    public Enum getSource() {
        return this.source;
    }

    public void setSource(Enum source) {
        this.source = source;
    }

    public static class Builder {
        /**
         * total_apiname
         * <p> 示例值：status
         */
        private String totalApiname;
        /**
         * apiname
         * <p> 示例值：status
         */
        private String apiname;
        /**
         * 中英文描述
         * <p> 示例值：
         */
        private I18n[] title;
        /**
         * 适用区域名称
         * <p> 示例值：
         */
        private SignatureTemplateCombinationSubFieldInfo[][] contents;
        /**
         * 电子签模板字段源类型
         * <p> 示例值：
         */
        private Enum source;

        /**
         * total_apiname
         * <p> 示例值：status
         *
         * @param totalApiname
         * @return
         */
        public Builder totalApiname(String totalApiname) {
            this.totalApiname = totalApiname;
            return this;
        }


        /**
         * apiname
         * <p> 示例值：status
         *
         * @param apiname
         * @return
         */
        public Builder apiname(String apiname) {
            this.apiname = apiname;
            return this;
        }


        /**
         * 中英文描述
         * <p> 示例值：
         *
         * @param title
         * @return
         */
        public Builder title(I18n[] title) {
            this.title = title;
            return this;
        }


        /**
         * 适用区域名称
         * <p> 示例值：
         *
         * @param contents
         * @return
         */
        public Builder contents(SignatureTemplateCombinationSubFieldInfo[][] contents) {
            this.contents = contents;
            return this;
        }


        /**
         * 电子签模板字段源类型
         * <p> 示例值：
         *
         * @param source
         * @return
         */
        public Builder source(Enum source) {
            this.source = source;
            return this;
        }


        public SignatureTemplateCombinationFieldInfo build() {
            return new SignatureTemplateCombinationFieldInfo(this);
        }
    }
}
