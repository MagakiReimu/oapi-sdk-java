// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.google.gson.annotations.SerializedName;

public class Offboarding {
    /**
     * 离职发起类型，包括：
     * <p> 示例值：offboarding_directly
     */
    @SerializedName("initiating_type")
    private String initiatingType;
    /**
     * 离职状态
     * <p> 示例值：Approving
     */
    @SerializedName("status")
    private String status;
    /**
     * 离职审批信息
     * <p> 示例值：
     */
    @SerializedName("application_info")
    private ApplicationInfo applicationInfo;
    /**
     * 员工离职信息
     * <p> 示例值：
     */
    @SerializedName("offboarding_info")
    private OffboardingInfo offboardingInfo;
    /**
     * 离职办理流程信息
     * <p> 示例值：
     */
    @SerializedName("offboarding_checklist")
    private OffboardingChecklist offboardingChecklist;
    /**
     * 离职单据ID
     * <p> 示例值：7298499290417251879
     */
    @SerializedName("offboarding_id")
    private String offboardingId;

    // builder 开始
    public Offboarding() {
    }

    public Offboarding(Builder builder) {
        /**
         * 离职发起类型，包括：
         * <p> 示例值：offboarding_directly
         */
        this.initiatingType = builder.initiatingType;
        /**
         * 离职状态
         * <p> 示例值：Approving
         */
        this.status = builder.status;
        /**
         * 离职审批信息
         * <p> 示例值：
         */
        this.applicationInfo = builder.applicationInfo;
        /**
         * 员工离职信息
         * <p> 示例值：
         */
        this.offboardingInfo = builder.offboardingInfo;
        /**
         * 离职办理流程信息
         * <p> 示例值：
         */
        this.offboardingChecklist = builder.offboardingChecklist;
        /**
         * 离职单据ID
         * <p> 示例值：7298499290417251879
         */
        this.offboardingId = builder.offboardingId;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getInitiatingType() {
        return this.initiatingType;
    }

    public void setInitiatingType(String initiatingType) {
        this.initiatingType = initiatingType;
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public ApplicationInfo getApplicationInfo() {
        return this.applicationInfo;
    }

    public void setApplicationInfo(ApplicationInfo applicationInfo) {
        this.applicationInfo = applicationInfo;
    }

    public OffboardingInfo getOffboardingInfo() {
        return this.offboardingInfo;
    }

    public void setOffboardingInfo(OffboardingInfo offboardingInfo) {
        this.offboardingInfo = offboardingInfo;
    }

    public OffboardingChecklist getOffboardingChecklist() {
        return this.offboardingChecklist;
    }

    public void setOffboardingChecklist(OffboardingChecklist offboardingChecklist) {
        this.offboardingChecklist = offboardingChecklist;
    }

    public String getOffboardingId() {
        return this.offboardingId;
    }

    public void setOffboardingId(String offboardingId) {
        this.offboardingId = offboardingId;
    }

    public static class Builder {
        /**
         * 离职发起类型，包括：
         * <p> 示例值：offboarding_directly
         */
        private String initiatingType;
        /**
         * 离职状态
         * <p> 示例值：Approving
         */
        private String status;
        /**
         * 离职审批信息
         * <p> 示例值：
         */
        private ApplicationInfo applicationInfo;
        /**
         * 员工离职信息
         * <p> 示例值：
         */
        private OffboardingInfo offboardingInfo;
        /**
         * 离职办理流程信息
         * <p> 示例值：
         */
        private OffboardingChecklist offboardingChecklist;
        /**
         * 离职单据ID
         * <p> 示例值：7298499290417251879
         */
        private String offboardingId;

        /**
         * 离职发起类型，包括：
         * <p> 示例值：offboarding_directly
         *
         * @param initiatingType
         * @return
         */
        public Builder initiatingType(String initiatingType) {
            this.initiatingType = initiatingType;
            return this;
        }


        /**
         * 离职状态
         * <p> 示例值：Approving
         *
         * @param status
         * @return
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * 离职状态
         * <p> 示例值：Approving
         *
         * @param status {@link com.lark.oapi.service.corehr.v1.enums.OffboardingOffboardingStatusEnum}
         * @return
         */
        public Builder status(com.lark.oapi.service.corehr.v1.enums.OffboardingOffboardingStatusEnum status) {
            this.status = status.getValue();
            return this;
        }


        /**
         * 离职审批信息
         * <p> 示例值：
         *
         * @param applicationInfo
         * @return
         */
        public Builder applicationInfo(ApplicationInfo applicationInfo) {
            this.applicationInfo = applicationInfo;
            return this;
        }


        /**
         * 员工离职信息
         * <p> 示例值：
         *
         * @param offboardingInfo
         * @return
         */
        public Builder offboardingInfo(OffboardingInfo offboardingInfo) {
            this.offboardingInfo = offboardingInfo;
            return this;
        }


        /**
         * 离职办理流程信息
         * <p> 示例值：
         *
         * @param offboardingChecklist
         * @return
         */
        public Builder offboardingChecklist(OffboardingChecklist offboardingChecklist) {
            this.offboardingChecklist = offboardingChecklist;
            return this;
        }


        /**
         * 离职单据ID
         * <p> 示例值：7298499290417251879
         *
         * @param offboardingId
         * @return
         */
        public Builder offboardingId(String offboardingId) {
            this.offboardingId = offboardingId;
            return this;
        }


        public Offboarding build() {
            return new Offboarding(this);
        }
    }
}
