// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.google.gson.annotations.SerializedName;

public class FilterExpression {
    /**
     * 规则
     * <p> 示例值：
     */
    @SerializedName("conditions")
    private FilterCondition[] conditions;
    /**
     * 表达式
     * <p> 示例值：1 and 2
     */
    @SerializedName("expression")
    private String expression;

    // builder 开始
    public FilterExpression() {
    }

    public FilterExpression(Builder builder) {
        /**
         * 规则
         * <p> 示例值：
         */
        this.conditions = builder.conditions;
        /**
         * 表达式
         * <p> 示例值：1 and 2
         */
        this.expression = builder.expression;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public FilterCondition[] getConditions() {
        return this.conditions;
    }

    public void setConditions(FilterCondition[] conditions) {
        this.conditions = conditions;
    }

    public String getExpression() {
        return this.expression;
    }

    public void setExpression(String expression) {
        this.expression = expression;
    }

    public static class Builder {
        /**
         * 规则
         * <p> 示例值：
         */
        private FilterCondition[] conditions;
        /**
         * 表达式
         * <p> 示例值：1 and 2
         */
        private String expression;

        /**
         * 规则
         * <p> 示例值：
         *
         * @param conditions
         * @return
         */
        public Builder conditions(FilterCondition[] conditions) {
            this.conditions = conditions;
            return this;
        }


        /**
         * 表达式
         * <p> 示例值：1 and 2
         *
         * @param expression
         * @return
         */
        public Builder expression(String expression) {
            this.expression = expression;
            return this;
        }


        public FilterExpression build() {
            return new FilterExpression(this);
        }
    }
}
