// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.google.gson.annotations.SerializedName;

public class ScopeGroup {
    /**
     * 类型： 1: 部门 2：人员 3:国家地区 4:员工类型 5:性别 6:工作城市
     * <p> 示例值：1
     */
    @SerializedName("scope_value_type")
    private Integer scopeValueType;
    /**
     * 范围类型（是否包含）
     * <p> 示例值：1
     */
    @SerializedName("operation_type")
    private Integer operationType;
    /**
     * 如果是人员/部门类型 不需要使用该字段
     * <p> 示例值：
     */
    @SerializedName("right")
    private ScopeValue[] right;
    /**
     * 部门/人员id列表
     * <p> 示例值：
     */
    @SerializedName("member_ids")
    private String[] memberIds;

    // builder 开始
    public ScopeGroup() {
    }

    public ScopeGroup(Builder builder) {
        /**
         * 类型： 1: 部门 2：人员 3:国家地区 4:员工类型 5:性别 6:工作城市
         * <p> 示例值：1
         */
        this.scopeValueType = builder.scopeValueType;
        /**
         * 范围类型（是否包含）
         * <p> 示例值：1
         */
        this.operationType = builder.operationType;
        /**
         * 如果是人员/部门类型 不需要使用该字段
         * <p> 示例值：
         */
        this.right = builder.right;
        /**
         * 部门/人员id列表
         * <p> 示例值：
         */
        this.memberIds = builder.memberIds;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Integer getScopeValueType() {
        return this.scopeValueType;
    }

    public void setScopeValueType(Integer scopeValueType) {
        this.scopeValueType = scopeValueType;
    }

    public Integer getOperationType() {
        return this.operationType;
    }

    public void setOperationType(Integer operationType) {
        this.operationType = operationType;
    }

    public ScopeValue[] getRight() {
        return this.right;
    }

    public void setRight(ScopeValue[] right) {
        this.right = right;
    }

    public String[] getMemberIds() {
        return this.memberIds;
    }

    public void setMemberIds(String[] memberIds) {
        this.memberIds = memberIds;
    }

    public static class Builder {
        /**
         * 类型： 1: 部门 2：人员 3:国家地区 4:员工类型 5:性别 6:工作城市
         * <p> 示例值：1
         */
        private Integer scopeValueType;
        /**
         * 范围类型（是否包含）
         * <p> 示例值：1
         */
        private Integer operationType;
        /**
         * 如果是人员/部门类型 不需要使用该字段
         * <p> 示例值：
         */
        private ScopeValue[] right;
        /**
         * 部门/人员id列表
         * <p> 示例值：
         */
        private String[] memberIds;

        /**
         * 类型： 1: 部门 2：人员 3:国家地区 4:员工类型 5:性别 6:工作城市
         * <p> 示例值：1
         *
         * @param scopeValueType
         * @return
         */
        public Builder scopeValueType(Integer scopeValueType) {
            this.scopeValueType = scopeValueType;
            return this;
        }


        /**
         * 范围类型（是否包含）
         * <p> 示例值：1
         *
         * @param operationType
         * @return
         */
        public Builder operationType(Integer operationType) {
            this.operationType = operationType;
            return this;
        }


        /**
         * 如果是人员/部门类型 不需要使用该字段
         * <p> 示例值：
         *
         * @param right
         * @return
         */
        public Builder right(ScopeValue[] right) {
            this.right = right;
            return this;
        }


        /**
         * 部门/人员id列表
         * <p> 示例值：
         *
         * @param memberIds
         * @return
         */
        public Builder memberIds(String[] memberIds) {
            this.memberIds = memberIds;
            return this;
        }


        public ScopeGroup build() {
            return new ScopeGroup(this);
        }
    }
}
