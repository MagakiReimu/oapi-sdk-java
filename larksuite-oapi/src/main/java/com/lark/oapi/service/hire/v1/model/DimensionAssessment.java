// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.hire.v1.model;

import com.google.gson.annotations.SerializedName;

public class DimensionAssessment {
    /**
     * 对应模版中维度ID
     * <p> 示例值：7171693733661327361
     */
    @SerializedName("interview_feedback_form_dimension_id")
    private String interviewFeedbackFormDimensionId;
    /**
     * 维度名称
     * <p> 示例值：
     */
    @SerializedName("dimension_name")
    private I18n dimensionName;
    /**
     * 维度类型
     * <p> 示例值：1
     */
    @SerializedName("dimension_type")
    private Integer dimensionType;
    /**
     * 维度权重
     * <p> 示例值：1
     */
    @SerializedName("weight")
    private Double weight;
    /**
     * 当维度类型为描述题时，从此取值
     * <p> 示例值：描述题作答
     */
    @SerializedName("dimension_content")
    private String dimensionContent;
    /**
     * 当维度类型为单选题时，从此取值
     * <p> 示例值：
     */
    @SerializedName("dimension_option")
    private DimensionOption dimensionOption;
    /**
     * 当维度类型为多选题时，从此取值
     * <p> 示例值：
     */
    @SerializedName("dimension_options")
    private DimensionOption[] dimensionOptions;
    /**
     * 当维度评价方式为「打分题(填空)时」，从此取值
     * <p> 示例值：10
     */
    @SerializedName("dimension_score")
    private Integer dimensionScore;
    /**
     * 当维度为「职级建议」时，从此取值
     * <p> 示例值：
     */
    @SerializedName("recommended_job_level")
    private RecommendedJobLevel recommendedJobLevel;
    /**
     * 维度关联面试题
     * <p> 示例值：
     */
    @SerializedName("question_assessments")
    private QuestionAssessment[] questionAssessments;

    // builder 开始
    public DimensionAssessment() {
    }

    public DimensionAssessment(Builder builder) {
        /**
         * 对应模版中维度ID
         * <p> 示例值：7171693733661327361
         */
        this.interviewFeedbackFormDimensionId = builder.interviewFeedbackFormDimensionId;
        /**
         * 维度名称
         * <p> 示例值：
         */
        this.dimensionName = builder.dimensionName;
        /**
         * 维度类型
         * <p> 示例值：1
         */
        this.dimensionType = builder.dimensionType;
        /**
         * 维度权重
         * <p> 示例值：1
         */
        this.weight = builder.weight;
        /**
         * 当维度类型为描述题时，从此取值
         * <p> 示例值：描述题作答
         */
        this.dimensionContent = builder.dimensionContent;
        /**
         * 当维度类型为单选题时，从此取值
         * <p> 示例值：
         */
        this.dimensionOption = builder.dimensionOption;
        /**
         * 当维度类型为多选题时，从此取值
         * <p> 示例值：
         */
        this.dimensionOptions = builder.dimensionOptions;
        /**
         * 当维度评价方式为「打分题(填空)时」，从此取值
         * <p> 示例值：10
         */
        this.dimensionScore = builder.dimensionScore;
        /**
         * 当维度为「职级建议」时，从此取值
         * <p> 示例值：
         */
        this.recommendedJobLevel = builder.recommendedJobLevel;
        /**
         * 维度关联面试题
         * <p> 示例值：
         */
        this.questionAssessments = builder.questionAssessments;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getInterviewFeedbackFormDimensionId() {
        return this.interviewFeedbackFormDimensionId;
    }

    public void setInterviewFeedbackFormDimensionId(String interviewFeedbackFormDimensionId) {
        this.interviewFeedbackFormDimensionId = interviewFeedbackFormDimensionId;
    }

    public I18n getDimensionName() {
        return this.dimensionName;
    }

    public void setDimensionName(I18n dimensionName) {
        this.dimensionName = dimensionName;
    }

    public Integer getDimensionType() {
        return this.dimensionType;
    }

    public void setDimensionType(Integer dimensionType) {
        this.dimensionType = dimensionType;
    }

    public Double getWeight() {
        return this.weight;
    }

    public void setWeight(Double weight) {
        this.weight = weight;
    }

    public String getDimensionContent() {
        return this.dimensionContent;
    }

    public void setDimensionContent(String dimensionContent) {
        this.dimensionContent = dimensionContent;
    }

    public DimensionOption getDimensionOption() {
        return this.dimensionOption;
    }

    public void setDimensionOption(DimensionOption dimensionOption) {
        this.dimensionOption = dimensionOption;
    }

    public DimensionOption[] getDimensionOptions() {
        return this.dimensionOptions;
    }

    public void setDimensionOptions(DimensionOption[] dimensionOptions) {
        this.dimensionOptions = dimensionOptions;
    }

    public Integer getDimensionScore() {
        return this.dimensionScore;
    }

    public void setDimensionScore(Integer dimensionScore) {
        this.dimensionScore = dimensionScore;
    }

    public RecommendedJobLevel getRecommendedJobLevel() {
        return this.recommendedJobLevel;
    }

    public void setRecommendedJobLevel(RecommendedJobLevel recommendedJobLevel) {
        this.recommendedJobLevel = recommendedJobLevel;
    }

    public QuestionAssessment[] getQuestionAssessments() {
        return this.questionAssessments;
    }

    public void setQuestionAssessments(QuestionAssessment[] questionAssessments) {
        this.questionAssessments = questionAssessments;
    }

    public static class Builder {
        /**
         * 对应模版中维度ID
         * <p> 示例值：7171693733661327361
         */
        private String interviewFeedbackFormDimensionId;
        /**
         * 维度名称
         * <p> 示例值：
         */
        private I18n dimensionName;
        /**
         * 维度类型
         * <p> 示例值：1
         */
        private Integer dimensionType;
        /**
         * 维度权重
         * <p> 示例值：1
         */
        private Double weight;
        /**
         * 当维度类型为描述题时，从此取值
         * <p> 示例值：描述题作答
         */
        private String dimensionContent;
        /**
         * 当维度类型为单选题时，从此取值
         * <p> 示例值：
         */
        private DimensionOption dimensionOption;
        /**
         * 当维度类型为多选题时，从此取值
         * <p> 示例值：
         */
        private DimensionOption[] dimensionOptions;
        /**
         * 当维度评价方式为「打分题(填空)时」，从此取值
         * <p> 示例值：10
         */
        private Integer dimensionScore;
        /**
         * 当维度为「职级建议」时，从此取值
         * <p> 示例值：
         */
        private RecommendedJobLevel recommendedJobLevel;
        /**
         * 维度关联面试题
         * <p> 示例值：
         */
        private QuestionAssessment[] questionAssessments;

        /**
         * 对应模版中维度ID
         * <p> 示例值：7171693733661327361
         *
         * @param interviewFeedbackFormDimensionId
         * @return
         */
        public Builder interviewFeedbackFormDimensionId(String interviewFeedbackFormDimensionId) {
            this.interviewFeedbackFormDimensionId = interviewFeedbackFormDimensionId;
            return this;
        }


        /**
         * 维度名称
         * <p> 示例值：
         *
         * @param dimensionName
         * @return
         */
        public Builder dimensionName(I18n dimensionName) {
            this.dimensionName = dimensionName;
            return this;
        }


        /**
         * 维度类型
         * <p> 示例值：1
         *
         * @param dimensionType
         * @return
         */
        public Builder dimensionType(Integer dimensionType) {
            this.dimensionType = dimensionType;
            return this;
        }


        /**
         * 维度权重
         * <p> 示例值：1
         *
         * @param weight
         * @return
         */
        public Builder weight(Double weight) {
            this.weight = weight;
            return this;
        }


        /**
         * 当维度类型为描述题时，从此取值
         * <p> 示例值：描述题作答
         *
         * @param dimensionContent
         * @return
         */
        public Builder dimensionContent(String dimensionContent) {
            this.dimensionContent = dimensionContent;
            return this;
        }


        /**
         * 当维度类型为单选题时，从此取值
         * <p> 示例值：
         *
         * @param dimensionOption
         * @return
         */
        public Builder dimensionOption(DimensionOption dimensionOption) {
            this.dimensionOption = dimensionOption;
            return this;
        }


        /**
         * 当维度类型为多选题时，从此取值
         * <p> 示例值：
         *
         * @param dimensionOptions
         * @return
         */
        public Builder dimensionOptions(DimensionOption[] dimensionOptions) {
            this.dimensionOptions = dimensionOptions;
            return this;
        }


        /**
         * 当维度评价方式为「打分题(填空)时」，从此取值
         * <p> 示例值：10
         *
         * @param dimensionScore
         * @return
         */
        public Builder dimensionScore(Integer dimensionScore) {
            this.dimensionScore = dimensionScore;
            return this;
        }


        /**
         * 当维度为「职级建议」时，从此取值
         * <p> 示例值：
         *
         * @param recommendedJobLevel
         * @return
         */
        public Builder recommendedJobLevel(RecommendedJobLevel recommendedJobLevel) {
            this.recommendedJobLevel = recommendedJobLevel;
            return this;
        }


        /**
         * 维度关联面试题
         * <p> 示例值：
         *
         * @param questionAssessments
         * @return
         */
        public Builder questionAssessments(QuestionAssessment[] questionAssessments) {
            this.questionAssessments = questionAssessments;
            return this;
        }


        public DimensionAssessment build() {
            return new DimensionAssessment(this);
        }
    }
}
