// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.google.gson.annotations.SerializedName;

public class Field {
    /**
     * 字段编号
     * <p> 示例值：50121
     */
    @SerializedName("code")
    private String code;
    /**
     * 字段名称
     * <p> 示例值：工号
     */
    @SerializedName("title")
    private String title;
    /**
     * 子字段列表
     * <p> 示例值：
     */
    @SerializedName("child_fields")
    private ChildField[] childFields;

    // builder 开始
    public Field() {
    }

    public Field(Builder builder) {
        /**
         * 字段编号
         * <p> 示例值：50121
         */
        this.code = builder.code;
        /**
         * 字段名称
         * <p> 示例值：工号
         */
        this.title = builder.title;
        /**
         * 子字段列表
         * <p> 示例值：
         */
        this.childFields = builder.childFields;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getCode() {
        return this.code;
    }

    public void setCode(String code) {
        this.code = code;
    }

    public String getTitle() {
        return this.title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public ChildField[] getChildFields() {
        return this.childFields;
    }

    public void setChildFields(ChildField[] childFields) {
        this.childFields = childFields;
    }

    public static class Builder {
        /**
         * 字段编号
         * <p> 示例值：50121
         */
        private String code;
        /**
         * 字段名称
         * <p> 示例值：工号
         */
        private String title;
        /**
         * 子字段列表
         * <p> 示例值：
         */
        private ChildField[] childFields;

        /**
         * 字段编号
         * <p> 示例值：50121
         *
         * @param code
         * @return
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }


        /**
         * 字段名称
         * <p> 示例值：工号
         *
         * @param title
         * @return
         */
        public Builder title(String title) {
            this.title = title;
            return this;
        }


        /**
         * 子字段列表
         * <p> 示例值：
         *
         * @param childFields
         * @return
         */
        public Builder childFields(ChildField[] childFields) {
            this.childFields = childFields;
            return this;
        }


        public Field build() {
            return new Field(this);
        }
    }
}
