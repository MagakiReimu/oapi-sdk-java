// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v1.model;

import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Query;

public class UnreadSpecialFocusReq {
    /**
     * 指定请求体中 ==id_list== 的ID类型
     * <p> 示例值：open_id
     */
    @Query
    @SerializedName("member_id_type")
    private String memberIdType;
    @Body
    private UnreadSpecialFocusReqBody body;

    // builder 开始
    public UnreadSpecialFocusReq() {
    }

    public UnreadSpecialFocusReq(Builder builder) {
        /**
         * 指定请求体中 ==id_list== 的ID类型
         * <p> 示例值：open_id
         */
        this.memberIdType = builder.memberIdType;
        this.body = builder.body;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getMemberIdType() {
        return this.memberIdType;
    }

    public void setMemberIdType(String memberIdType) {
        this.memberIdType = memberIdType;
    }

    public UnreadSpecialFocusReqBody getUnreadSpecialFocusReqBody() {
        return this.body;
    }

    public void setUnreadSpecialFocusReqBody(UnreadSpecialFocusReqBody body) {
        this.body = body;
    }

    public static class Builder {
        private String memberIdType; // 指定请求体中 ==id_list== 的ID类型
        private UnreadSpecialFocusReqBody body;

        /**
         * 指定请求体中 ==id_list== 的ID类型
         * <p> 示例值：open_id
         *
         * @param memberIdType
         * @return
         */
        public Builder memberIdType(String memberIdType) {
            this.memberIdType = memberIdType;
            return this;
        }

        /**
         * 指定请求体中 ==id_list== 的ID类型
         * <p> 示例值：open_id
         *
         * @param memberIdType {@link com.lark.oapi.service.im.v1.enums.UnreadSpecialFocusMemberIdTypeEnum}
         * @return
         */
        public Builder memberIdType(com.lark.oapi.service.im.v1.enums.UnreadSpecialFocusMemberIdTypeEnum memberIdType) {
            this.memberIdType = memberIdType.getValue();
            return this;
        }

        public UnreadSpecialFocusReqBody getUnreadSpecialFocusReqBody() {
            return this.body;
        }

        /**
         * body
         *
         * @param body
         * @return
         */
        public Builder unreadSpecialFocusReqBody(UnreadSpecialFocusReqBody body) {
            this.body = body;
            return this;
        }

        public UnreadSpecialFocusReq build() {
            return new UnreadSpecialFocusReq(this);
        }
    }
}
