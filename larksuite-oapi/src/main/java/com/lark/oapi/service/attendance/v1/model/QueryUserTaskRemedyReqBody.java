// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.google.gson.annotations.SerializedName;

public class QueryUserTaskRemedyReqBody {
    /**
     * employee_no 或 employee_id 列表
     * <p> 示例值：["abd754f7"]
     */
    @SerializedName("user_ids")
    private String[] userIds;
    /**
     * 查询的起始时间，精确到秒的时间戳
     * <p> 示例值：1566641088
     */
    @SerializedName("check_time_from")
    private String checkTimeFrom;
    /**
     * 查询的结束时间，精确到秒的时间戳
     * <p> 示例值：1592561088
     */
    @SerializedName("check_time_to")
    private String checkTimeTo;
    /**
     * 查询依据的时间类型（默认依据PeriodTime，如果使用非默认的，非特定租户不支持）
     * <p> 示例值：PeriodTime
     */
    @SerializedName("check_date_type")
    private String checkDateType;
    /**
     * 查询状态（不填默认查询已通过状态）
     * <p> 示例值：2
     */
    @SerializedName("status")
    private Integer status;

    // builder 开始
    public QueryUserTaskRemedyReqBody() {
    }

    public QueryUserTaskRemedyReqBody(Builder builder) {
        /**
         * employee_no 或 employee_id 列表
         * <p> 示例值：["abd754f7"]
         */
        this.userIds = builder.userIds;
        /**
         * 查询的起始时间，精确到秒的时间戳
         * <p> 示例值：1566641088
         */
        this.checkTimeFrom = builder.checkTimeFrom;
        /**
         * 查询的结束时间，精确到秒的时间戳
         * <p> 示例值：1592561088
         */
        this.checkTimeTo = builder.checkTimeTo;
        /**
         * 查询依据的时间类型（默认依据PeriodTime，如果使用非默认的，非特定租户不支持）
         * <p> 示例值：PeriodTime
         */
        this.checkDateType = builder.checkDateType;
        /**
         * 查询状态（不填默认查询已通过状态）
         * <p> 示例值：2
         */
        this.status = builder.status;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String[] getUserIds() {
        return this.userIds;
    }

    public void setUserIds(String[] userIds) {
        this.userIds = userIds;
    }

    public String getCheckTimeFrom() {
        return this.checkTimeFrom;
    }

    public void setCheckTimeFrom(String checkTimeFrom) {
        this.checkTimeFrom = checkTimeFrom;
    }

    public String getCheckTimeTo() {
        return this.checkTimeTo;
    }

    public void setCheckTimeTo(String checkTimeTo) {
        this.checkTimeTo = checkTimeTo;
    }

    public String getCheckDateType() {
        return this.checkDateType;
    }

    public void setCheckDateType(String checkDateType) {
        this.checkDateType = checkDateType;
    }

    public Integer getStatus() {
        return this.status;
    }

    public void setStatus(Integer status) {
        this.status = status;
    }

    public static class Builder {
        /**
         * employee_no 或 employee_id 列表
         * <p> 示例值：["abd754f7"]
         */
        private String[] userIds;
        /**
         * 查询的起始时间，精确到秒的时间戳
         * <p> 示例值：1566641088
         */
        private String checkTimeFrom;
        /**
         * 查询的结束时间，精确到秒的时间戳
         * <p> 示例值：1592561088
         */
        private String checkTimeTo;
        /**
         * 查询依据的时间类型（默认依据PeriodTime，如果使用非默认的，非特定租户不支持）
         * <p> 示例值：PeriodTime
         */
        private String checkDateType;
        /**
         * 查询状态（不填默认查询已通过状态）
         * <p> 示例值：2
         */
        private Integer status;

        /**
         * employee_no 或 employee_id 列表
         * <p> 示例值：["abd754f7"]
         *
         * @param userIds
         * @return
         */
        public Builder userIds(String[] userIds) {
            this.userIds = userIds;
            return this;
        }


        /**
         * 查询的起始时间，精确到秒的时间戳
         * <p> 示例值：1566641088
         *
         * @param checkTimeFrom
         * @return
         */
        public Builder checkTimeFrom(String checkTimeFrom) {
            this.checkTimeFrom = checkTimeFrom;
            return this;
        }


        /**
         * 查询的结束时间，精确到秒的时间戳
         * <p> 示例值：1592561088
         *
         * @param checkTimeTo
         * @return
         */
        public Builder checkTimeTo(String checkTimeTo) {
            this.checkTimeTo = checkTimeTo;
            return this;
        }


        /**
         * 查询依据的时间类型（默认依据PeriodTime，如果使用非默认的，非特定租户不支持）
         * <p> 示例值：PeriodTime
         *
         * @param checkDateType
         * @return
         */
        public Builder checkDateType(String checkDateType) {
            this.checkDateType = checkDateType;
            return this;
        }

        /**
         * 查询依据的时间类型（默认依据PeriodTime，如果使用非默认的，非特定租户不支持）
         * <p> 示例值：PeriodTime
         *
         * @param checkDateType {@link com.lark.oapi.service.attendance.v1.enums.QueryUserTaskRemedyCheckDateTypeEnum}
         * @return
         */
        public Builder checkDateType(com.lark.oapi.service.attendance.v1.enums.QueryUserTaskRemedyCheckDateTypeEnum checkDateType) {
            this.checkDateType = checkDateType.getValue();
            return this;
        }


        /**
         * 查询状态（不填默认查询已通过状态）
         * <p> 示例值：2
         *
         * @param status
         * @return
         */
        public Builder status(Integer status) {
            this.status = status;
            return this;
        }

        /**
         * 查询状态（不填默认查询已通过状态）
         * <p> 示例值：2
         *
         * @param status {@link com.lark.oapi.service.attendance.v1.enums.QueryUserTaskRemedyRemedyStatusEnum}
         * @return
         */
        public Builder status(com.lark.oapi.service.attendance.v1.enums.QueryUserTaskRemedyRemedyStatusEnum status) {
            this.status = status.getValue();
            return this;
        }


        public QueryUserTaskRemedyReqBody build() {
            return new QueryUserTaskRemedyReqBody(this);
        }
    }
}
