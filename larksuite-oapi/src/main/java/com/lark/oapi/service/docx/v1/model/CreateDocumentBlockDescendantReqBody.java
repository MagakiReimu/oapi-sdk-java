// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.docx.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.docx.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class CreateDocumentBlockDescendantReqBody {
    /**
     * 添加的孩子 BlockID 列表
     * <p> 示例值：
     */
    @SerializedName("children_id")
    private String[] childrenId;
    /**
     * 当前 Block 在 Children 中的插入位置，起始值为 0，最大值为原 Children 长度
     * <p> 示例值：0
     */
    @SerializedName("index")
    private Integer index;
    /**
     * 添加的子孙列表，包括孩子
     * <p> 示例值：
     */
    @SerializedName("descendants")
    private Block[] descendants;

    // builder 开始
    public CreateDocumentBlockDescendantReqBody() {
    }

    public CreateDocumentBlockDescendantReqBody(Builder builder) {
        /**
         * 添加的孩子 BlockID 列表
         * <p> 示例值：
         */
        this.childrenId = builder.childrenId;
        /**
         * 当前 Block 在 Children 中的插入位置，起始值为 0，最大值为原 Children 长度
         * <p> 示例值：0
         */
        this.index = builder.index;
        /**
         * 添加的子孙列表，包括孩子
         * <p> 示例值：
         */
        this.descendants = builder.descendants;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String[] getChildrenId() {
        return this.childrenId;
    }

    public void setChildrenId(String[] childrenId) {
        this.childrenId = childrenId;
    }

    public Integer getIndex() {
        return this.index;
    }

    public void setIndex(Integer index) {
        this.index = index;
    }

    public Block[] getDescendants() {
        return this.descendants;
    }

    public void setDescendants(Block[] descendants) {
        this.descendants = descendants;
    }

    public static class Builder {
        /**
         * 添加的孩子 BlockID 列表
         * <p> 示例值：
         */
        private String[] childrenId;
        /**
         * 当前 Block 在 Children 中的插入位置，起始值为 0，最大值为原 Children 长度
         * <p> 示例值：0
         */
        private Integer index;
        /**
         * 添加的子孙列表，包括孩子
         * <p> 示例值：
         */
        private Block[] descendants;

        /**
         * 添加的孩子 BlockID 列表
         * <p> 示例值：
         *
         * @param childrenId
         * @return
         */
        public Builder childrenId(String[] childrenId) {
            this.childrenId = childrenId;
            return this;
        }


        /**
         * 当前 Block 在 Children 中的插入位置，起始值为 0，最大值为原 Children 长度
         * <p> 示例值：0
         *
         * @param index
         * @return
         */
        public Builder index(Integer index) {
            this.index = index;
            return this;
        }


        /**
         * 添加的子孙列表，包括孩子
         * <p> 示例值：
         *
         * @param descendants
         * @return
         */
        public Builder descendants(Block[] descendants) {
            this.descendants = descendants;
            return this;
        }


        public CreateDocumentBlockDescendantReqBody build() {
            return new CreateDocumentBlockDescendantReqBody(this);
        }
    }
}
