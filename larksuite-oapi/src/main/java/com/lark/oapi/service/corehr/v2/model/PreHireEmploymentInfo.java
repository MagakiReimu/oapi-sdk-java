// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.google.gson.annotations.SerializedName;

public class PreHireEmploymentInfo {
    /**
     * 部门 ID ，可以通过【搜索部门信息】接口获取
     * <p> 示例值：7147562782945478177
     */
    @SerializedName("department_id")
    private String departmentId;
    /**
     * 成本中心分摊信息
     * <p> 示例值：
     */
    @SerializedName("cost_center_rates")
    private JobDataCostCenter[] costCenterRates;
    /**
     * 办公地点id ，详细信息可通过【批量查询地点】接口获得
     * <p> 示例值：6977976687350924832
     */
    @SerializedName("office_location_id")
    private String officeLocationId;
    /**
     * 工作地点id ，详细信息可通过【批量查询地点】接口获得
     * <p> 示例值：6977976687350924832
     */
    @SerializedName("work_location_id")
    private String workLocationId;
    /**
     * 工位
     * <p> 示例值：ABC123
     */
    @SerializedName("work_station")
    private String workStation;
    /**
     * 工号
     * <p> 示例值：1234567
     */
    @SerializedName("worker_id")
    private String workerId;
    /**
     * -| 薪资类型，枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - custom_api_name：compensation_type - object_api_name：pre_hire
     * <p> 示例值：
     */
    @SerializedName("compensation_type")
    private Enum compensationType;
    /**
     * 直属上级雇佣 ID ， 可以通过【搜索员工信息】接口获取
     * <p> 示例值：7032210902531327521
     */
    @SerializedName("direct_leader_id")
    private String directLeaderId;
    /**
     * 职务 ID ,可以通过【批量查询职务】接口获取
     * <p> 示例值：6977976735715378724
     */
    @SerializedName("job_id")
    private String jobId;
    /**
     * 序列 ID，可以通过【批量查询职务序列】接口获取
     * <p> 示例值：6977972856625939999
     */
    @SerializedName("job_family_id")
    private String jobFamilyId;
    /**
     * 职级 ID，可以通过【批量查询职务级别】接口获取
     * <p> 示例值：6977971894960145950
     */
    @SerializedName("job_level_id")
    private String jobLevelId;
    /**
     * 职等 ID
     * <p> 示例值：6977971894960145950
     */
    @SerializedName("job_grade_id")
    private String jobGradeId;
    /**
     * 职务头衔
     * <p> 示例值：java
     */
    @SerializedName("job_title")
    private String jobTitle;
    /**
     * 人员类型 ID ，可以通过招聘【批量查询人员类型】接口获取
     * <p> 示例值：6977973225846343171
     */
    @SerializedName("employee_type_id")
    private String employeeTypeId;
    /**
     * -| 雇佣类型， 枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - object_api_name = "pre_hire" - custom_api_name = "employment_type"
     * <p> 示例值：employee
     */
    @SerializedName("employment_type")
    private String employmentType;
    /**
     * 工作邮箱
     * <p> 示例值：joshua@bytedance.com
     */
    @SerializedName("work_email")
    private String workEmail;
    /**
     * 公司 ID , 详细信息可通过【批量查询公司】接口获得
     * <p> 示例值：6738317738688661772
     */
    @SerializedName("company_id")
    private String companyId;
    /**
     * 社保城市 ID ，详细信息可通过【批量查询地点】接口获得
     * <p> 示例值：6977973225846343171
     */
    @SerializedName("social_security_city_id")
    private String socialSecurityCityId;
    /**
     * 是否包含竞业条款
     * <p> 示例值：true
     */
    @SerializedName("non_compete_covenant")
    private Boolean nonCompeteCovenant;
    /**
     * 周工作时长（单位：小时）
     * <p> 示例值：8
     */
    @SerializedName("weekly_working_hours")
    private Integer weeklyWorkingHours;
    /**
     * 是否离职重聘
     * <p> 示例值：
     */
    @SerializedName("rehire")
    private String rehire;
    /**
     * -| 历史雇佣信息 ID ，雇佣信息详细信息可以通过「查询单个雇佣信息」API 获得，系统会检验当前雇佣信息的合法性，要求： - 雇佣信息为该人员最后一次雇佣记录 - 雇佣信息的雇员状态 = "terminated" - 该人员不存在其他待入职记录
     * <p> 示例值：6977973225846343172
     */
    @SerializedName("rehire_employment_id")
    private String rehireEmploymentId;
    /**
     * -| 工时制度 ID ，可通过【查询单个工时制度】接口获取
     * <p> 示例值：6977973225846343171
     */
    @SerializedName("working_hours_type")
    private String workingHoursType;
    /**
     * 周工作时长v2（单位：小时）
     * <p> 示例值：8.5
     */
    @SerializedName("weekly_working_hours_v2")
    private Double weeklyWorkingHoursV2;

    // builder 开始
    public PreHireEmploymentInfo() {
    }

    public PreHireEmploymentInfo(Builder builder) {
        /**
         * 部门 ID ，可以通过【搜索部门信息】接口获取
         * <p> 示例值：7147562782945478177
         */
        this.departmentId = builder.departmentId;
        /**
         * 成本中心分摊信息
         * <p> 示例值：
         */
        this.costCenterRates = builder.costCenterRates;
        /**
         * 办公地点id ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977976687350924832
         */
        this.officeLocationId = builder.officeLocationId;
        /**
         * 工作地点id ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977976687350924832
         */
        this.workLocationId = builder.workLocationId;
        /**
         * 工位
         * <p> 示例值：ABC123
         */
        this.workStation = builder.workStation;
        /**
         * 工号
         * <p> 示例值：1234567
         */
        this.workerId = builder.workerId;
        /**
         * -| 薪资类型，枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - custom_api_name：compensation_type - object_api_name：pre_hire
         * <p> 示例值：
         */
        this.compensationType = builder.compensationType;
        /**
         * 直属上级雇佣 ID ， 可以通过【搜索员工信息】接口获取
         * <p> 示例值：7032210902531327521
         */
        this.directLeaderId = builder.directLeaderId;
        /**
         * 职务 ID ,可以通过【批量查询职务】接口获取
         * <p> 示例值：6977976735715378724
         */
        this.jobId = builder.jobId;
        /**
         * 序列 ID，可以通过【批量查询职务序列】接口获取
         * <p> 示例值：6977972856625939999
         */
        this.jobFamilyId = builder.jobFamilyId;
        /**
         * 职级 ID，可以通过【批量查询职务级别】接口获取
         * <p> 示例值：6977971894960145950
         */
        this.jobLevelId = builder.jobLevelId;
        /**
         * 职等 ID
         * <p> 示例值：6977971894960145950
         */
        this.jobGradeId = builder.jobGradeId;
        /**
         * 职务头衔
         * <p> 示例值：java
         */
        this.jobTitle = builder.jobTitle;
        /**
         * 人员类型 ID ，可以通过招聘【批量查询人员类型】接口获取
         * <p> 示例值：6977973225846343171
         */
        this.employeeTypeId = builder.employeeTypeId;
        /**
         * -| 雇佣类型， 枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - object_api_name = "pre_hire" - custom_api_name = "employment_type"
         * <p> 示例值：employee
         */
        this.employmentType = builder.employmentType;
        /**
         * 工作邮箱
         * <p> 示例值：joshua@bytedance.com
         */
        this.workEmail = builder.workEmail;
        /**
         * 公司 ID , 详细信息可通过【批量查询公司】接口获得
         * <p> 示例值：6738317738688661772
         */
        this.companyId = builder.companyId;
        /**
         * 社保城市 ID ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977973225846343171
         */
        this.socialSecurityCityId = builder.socialSecurityCityId;
        /**
         * 是否包含竞业条款
         * <p> 示例值：true
         */
        this.nonCompeteCovenant = builder.nonCompeteCovenant;
        /**
         * 周工作时长（单位：小时）
         * <p> 示例值：8
         */
        this.weeklyWorkingHours = builder.weeklyWorkingHours;
        /**
         * 是否离职重聘
         * <p> 示例值：
         */
        this.rehire = builder.rehire;
        /**
         * -| 历史雇佣信息 ID ，雇佣信息详细信息可以通过「查询单个雇佣信息」API 获得，系统会检验当前雇佣信息的合法性，要求： - 雇佣信息为该人员最后一次雇佣记录 - 雇佣信息的雇员状态 = "terminated" - 该人员不存在其他待入职记录
         * <p> 示例值：6977973225846343172
         */
        this.rehireEmploymentId = builder.rehireEmploymentId;
        /**
         * -| 工时制度 ID ，可通过【查询单个工时制度】接口获取
         * <p> 示例值：6977973225846343171
         */
        this.workingHoursType = builder.workingHoursType;
        /**
         * 周工作时长v2（单位：小时）
         * <p> 示例值：8.5
         */
        this.weeklyWorkingHoursV2 = builder.weeklyWorkingHoursV2;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getDepartmentId() {
        return this.departmentId;
    }

    public void setDepartmentId(String departmentId) {
        this.departmentId = departmentId;
    }

    public JobDataCostCenter[] getCostCenterRates() {
        return this.costCenterRates;
    }

    public void setCostCenterRates(JobDataCostCenter[] costCenterRates) {
        this.costCenterRates = costCenterRates;
    }

    public String getOfficeLocationId() {
        return this.officeLocationId;
    }

    public void setOfficeLocationId(String officeLocationId) {
        this.officeLocationId = officeLocationId;
    }

    public String getWorkLocationId() {
        return this.workLocationId;
    }

    public void setWorkLocationId(String workLocationId) {
        this.workLocationId = workLocationId;
    }

    public String getWorkStation() {
        return this.workStation;
    }

    public void setWorkStation(String workStation) {
        this.workStation = workStation;
    }

    public String getWorkerId() {
        return this.workerId;
    }

    public void setWorkerId(String workerId) {
        this.workerId = workerId;
    }

    public Enum getCompensationType() {
        return this.compensationType;
    }

    public void setCompensationType(Enum compensationType) {
        this.compensationType = compensationType;
    }

    public String getDirectLeaderId() {
        return this.directLeaderId;
    }

    public void setDirectLeaderId(String directLeaderId) {
        this.directLeaderId = directLeaderId;
    }

    public String getJobId() {
        return this.jobId;
    }

    public void setJobId(String jobId) {
        this.jobId = jobId;
    }

    public String getJobFamilyId() {
        return this.jobFamilyId;
    }

    public void setJobFamilyId(String jobFamilyId) {
        this.jobFamilyId = jobFamilyId;
    }

    public String getJobLevelId() {
        return this.jobLevelId;
    }

    public void setJobLevelId(String jobLevelId) {
        this.jobLevelId = jobLevelId;
    }

    public String getJobGradeId() {
        return this.jobGradeId;
    }

    public void setJobGradeId(String jobGradeId) {
        this.jobGradeId = jobGradeId;
    }

    public String getJobTitle() {
        return this.jobTitle;
    }

    public void setJobTitle(String jobTitle) {
        this.jobTitle = jobTitle;
    }

    public String getEmployeeTypeId() {
        return this.employeeTypeId;
    }

    public void setEmployeeTypeId(String employeeTypeId) {
        this.employeeTypeId = employeeTypeId;
    }

    public String getEmploymentType() {
        return this.employmentType;
    }

    public void setEmploymentType(String employmentType) {
        this.employmentType = employmentType;
    }

    public String getWorkEmail() {
        return this.workEmail;
    }

    public void setWorkEmail(String workEmail) {
        this.workEmail = workEmail;
    }

    public String getCompanyId() {
        return this.companyId;
    }

    public void setCompanyId(String companyId) {
        this.companyId = companyId;
    }

    public String getSocialSecurityCityId() {
        return this.socialSecurityCityId;
    }

    public void setSocialSecurityCityId(String socialSecurityCityId) {
        this.socialSecurityCityId = socialSecurityCityId;
    }

    public Boolean getNonCompeteCovenant() {
        return this.nonCompeteCovenant;
    }

    public void setNonCompeteCovenant(Boolean nonCompeteCovenant) {
        this.nonCompeteCovenant = nonCompeteCovenant;
    }

    public Integer getWeeklyWorkingHours() {
        return this.weeklyWorkingHours;
    }

    public void setWeeklyWorkingHours(Integer weeklyWorkingHours) {
        this.weeklyWorkingHours = weeklyWorkingHours;
    }

    public String getRehire() {
        return this.rehire;
    }

    public void setRehire(String rehire) {
        this.rehire = rehire;
    }

    public String getRehireEmploymentId() {
        return this.rehireEmploymentId;
    }

    public void setRehireEmploymentId(String rehireEmploymentId) {
        this.rehireEmploymentId = rehireEmploymentId;
    }

    public String getWorkingHoursType() {
        return this.workingHoursType;
    }

    public void setWorkingHoursType(String workingHoursType) {
        this.workingHoursType = workingHoursType;
    }

    public Double getWeeklyWorkingHoursV2() {
        return this.weeklyWorkingHoursV2;
    }

    public void setWeeklyWorkingHoursV2(Double weeklyWorkingHoursV2) {
        this.weeklyWorkingHoursV2 = weeklyWorkingHoursV2;
    }

    public static class Builder {
        /**
         * 部门 ID ，可以通过【搜索部门信息】接口获取
         * <p> 示例值：7147562782945478177
         */
        private String departmentId;
        /**
         * 成本中心分摊信息
         * <p> 示例值：
         */
        private JobDataCostCenter[] costCenterRates;
        /**
         * 办公地点id ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977976687350924832
         */
        private String officeLocationId;
        /**
         * 工作地点id ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977976687350924832
         */
        private String workLocationId;
        /**
         * 工位
         * <p> 示例值：ABC123
         */
        private String workStation;
        /**
         * 工号
         * <p> 示例值：1234567
         */
        private String workerId;
        /**
         * -| 薪资类型，枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - custom_api_name：compensation_type - object_api_name：pre_hire
         * <p> 示例值：
         */
        private Enum compensationType;
        /**
         * 直属上级雇佣 ID ， 可以通过【搜索员工信息】接口获取
         * <p> 示例值：7032210902531327521
         */
        private String directLeaderId;
        /**
         * 职务 ID ,可以通过【批量查询职务】接口获取
         * <p> 示例值：6977976735715378724
         */
        private String jobId;
        /**
         * 序列 ID，可以通过【批量查询职务序列】接口获取
         * <p> 示例值：6977972856625939999
         */
        private String jobFamilyId;
        /**
         * 职级 ID，可以通过【批量查询职务级别】接口获取
         * <p> 示例值：6977971894960145950
         */
        private String jobLevelId;
        /**
         * 职等 ID
         * <p> 示例值：6977971894960145950
         */
        private String jobGradeId;
        /**
         * 职务头衔
         * <p> 示例值：java
         */
        private String jobTitle;
        /**
         * 人员类型 ID ，可以通过招聘【批量查询人员类型】接口获取
         * <p> 示例值：6977973225846343171
         */
        private String employeeTypeId;
        /**
         * -| 雇佣类型， 枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - object_api_name = "pre_hire" - custom_api_name = "employment_type"
         * <p> 示例值：employee
         */
        private String employmentType;
        /**
         * 工作邮箱
         * <p> 示例值：joshua@bytedance.com
         */
        private String workEmail;
        /**
         * 公司 ID , 详细信息可通过【批量查询公司】接口获得
         * <p> 示例值：6738317738688661772
         */
        private String companyId;
        /**
         * 社保城市 ID ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977973225846343171
         */
        private String socialSecurityCityId;
        /**
         * 是否包含竞业条款
         * <p> 示例值：true
         */
        private Boolean nonCompeteCovenant;
        /**
         * 周工作时长（单位：小时）
         * <p> 示例值：8
         */
        private Integer weeklyWorkingHours;
        /**
         * 是否离职重聘
         * <p> 示例值：
         */
        private String rehire;
        /**
         * -| 历史雇佣信息 ID ，雇佣信息详细信息可以通过「查询单个雇佣信息」API 获得，系统会检验当前雇佣信息的合法性，要求： - 雇佣信息为该人员最后一次雇佣记录 - 雇佣信息的雇员状态 = "terminated" - 该人员不存在其他待入职记录
         * <p> 示例值：6977973225846343172
         */
        private String rehireEmploymentId;
        /**
         * -| 工时制度 ID ，可通过【查询单个工时制度】接口获取
         * <p> 示例值：6977973225846343171
         */
        private String workingHoursType;
        /**
         * 周工作时长v2（单位：小时）
         * <p> 示例值：8.5
         */
        private Double weeklyWorkingHoursV2;

        /**
         * 部门 ID ，可以通过【搜索部门信息】接口获取
         * <p> 示例值：7147562782945478177
         *
         * @param departmentId
         * @return
         */
        public Builder departmentId(String departmentId) {
            this.departmentId = departmentId;
            return this;
        }


        /**
         * 成本中心分摊信息
         * <p> 示例值：
         *
         * @param costCenterRates
         * @return
         */
        public Builder costCenterRates(JobDataCostCenter[] costCenterRates) {
            this.costCenterRates = costCenterRates;
            return this;
        }


        /**
         * 办公地点id ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977976687350924832
         *
         * @param officeLocationId
         * @return
         */
        public Builder officeLocationId(String officeLocationId) {
            this.officeLocationId = officeLocationId;
            return this;
        }


        /**
         * 工作地点id ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977976687350924832
         *
         * @param workLocationId
         * @return
         */
        public Builder workLocationId(String workLocationId) {
            this.workLocationId = workLocationId;
            return this;
        }


        /**
         * 工位
         * <p> 示例值：ABC123
         *
         * @param workStation
         * @return
         */
        public Builder workStation(String workStation) {
            this.workStation = workStation;
            return this;
        }


        /**
         * 工号
         * <p> 示例值：1234567
         *
         * @param workerId
         * @return
         */
        public Builder workerId(String workerId) {
            this.workerId = workerId;
            return this;
        }


        /**
         * -| 薪资类型，枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - custom_api_name：compensation_type - object_api_name：pre_hire
         * <p> 示例值：
         *
         * @param compensationType
         * @return
         */
        public Builder compensationType(Enum compensationType) {
            this.compensationType = compensationType;
            return this;
        }


        /**
         * 直属上级雇佣 ID ， 可以通过【搜索员工信息】接口获取
         * <p> 示例值：7032210902531327521
         *
         * @param directLeaderId
         * @return
         */
        public Builder directLeaderId(String directLeaderId) {
            this.directLeaderId = directLeaderId;
            return this;
        }


        /**
         * 职务 ID ,可以通过【批量查询职务】接口获取
         * <p> 示例值：6977976735715378724
         *
         * @param jobId
         * @return
         */
        public Builder jobId(String jobId) {
            this.jobId = jobId;
            return this;
        }


        /**
         * 序列 ID，可以通过【批量查询职务序列】接口获取
         * <p> 示例值：6977972856625939999
         *
         * @param jobFamilyId
         * @return
         */
        public Builder jobFamilyId(String jobFamilyId) {
            this.jobFamilyId = jobFamilyId;
            return this;
        }


        /**
         * 职级 ID，可以通过【批量查询职务级别】接口获取
         * <p> 示例值：6977971894960145950
         *
         * @param jobLevelId
         * @return
         */
        public Builder jobLevelId(String jobLevelId) {
            this.jobLevelId = jobLevelId;
            return this;
        }


        /**
         * 职等 ID
         * <p> 示例值：6977971894960145950
         *
         * @param jobGradeId
         * @return
         */
        public Builder jobGradeId(String jobGradeId) {
            this.jobGradeId = jobGradeId;
            return this;
        }


        /**
         * 职务头衔
         * <p> 示例值：java
         *
         * @param jobTitle
         * @return
         */
        public Builder jobTitle(String jobTitle) {
            this.jobTitle = jobTitle;
            return this;
        }


        /**
         * 人员类型 ID ，可以通过招聘【批量查询人员类型】接口获取
         * <p> 示例值：6977973225846343171
         *
         * @param employeeTypeId
         * @return
         */
        public Builder employeeTypeId(String employeeTypeId) {
            this.employeeTypeId = employeeTypeId;
            return this;
        }


        /**
         * -| 雇佣类型， 枚举值可查询【获取字段详情】接口获取，按如下参数查询即可： - object_api_name = "pre_hire" - custom_api_name = "employment_type"
         * <p> 示例值：employee
         *
         * @param employmentType
         * @return
         */
        public Builder employmentType(String employmentType) {
            this.employmentType = employmentType;
            return this;
        }


        /**
         * 工作邮箱
         * <p> 示例值：joshua@bytedance.com
         *
         * @param workEmail
         * @return
         */
        public Builder workEmail(String workEmail) {
            this.workEmail = workEmail;
            return this;
        }


        /**
         * 公司 ID , 详细信息可通过【批量查询公司】接口获得
         * <p> 示例值：6738317738688661772
         *
         * @param companyId
         * @return
         */
        public Builder companyId(String companyId) {
            this.companyId = companyId;
            return this;
        }


        /**
         * 社保城市 ID ，详细信息可通过【批量查询地点】接口获得
         * <p> 示例值：6977973225846343171
         *
         * @param socialSecurityCityId
         * @return
         */
        public Builder socialSecurityCityId(String socialSecurityCityId) {
            this.socialSecurityCityId = socialSecurityCityId;
            return this;
        }


        /**
         * 是否包含竞业条款
         * <p> 示例值：true
         *
         * @param nonCompeteCovenant
         * @return
         */
        public Builder nonCompeteCovenant(Boolean nonCompeteCovenant) {
            this.nonCompeteCovenant = nonCompeteCovenant;
            return this;
        }


        /**
         * 周工作时长（单位：小时）
         * <p> 示例值：8
         *
         * @param weeklyWorkingHours
         * @return
         */
        public Builder weeklyWorkingHours(Integer weeklyWorkingHours) {
            this.weeklyWorkingHours = weeklyWorkingHours;
            return this;
        }


        /**
         * 是否离职重聘
         * <p> 示例值：
         *
         * @param rehire
         * @return
         */
        public Builder rehire(String rehire) {
            this.rehire = rehire;
            return this;
        }

        /**
         * 是否离职重聘
         * <p> 示例值：
         *
         * @param rehire {@link com.lark.oapi.service.corehr.v2.enums.PreHireEmploymentInfoRehireEnum}
         * @return
         */
        public Builder rehire(com.lark.oapi.service.corehr.v2.enums.PreHireEmploymentInfoRehireEnum rehire) {
            this.rehire = rehire.getValue();
            return this;
        }


        /**
         * -| 历史雇佣信息 ID ，雇佣信息详细信息可以通过「查询单个雇佣信息」API 获得，系统会检验当前雇佣信息的合法性，要求： - 雇佣信息为该人员最后一次雇佣记录 - 雇佣信息的雇员状态 = "terminated" - 该人员不存在其他待入职记录
         * <p> 示例值：6977973225846343172
         *
         * @param rehireEmploymentId
         * @return
         */
        public Builder rehireEmploymentId(String rehireEmploymentId) {
            this.rehireEmploymentId = rehireEmploymentId;
            return this;
        }


        /**
         * -| 工时制度 ID ，可通过【查询单个工时制度】接口获取
         * <p> 示例值：6977973225846343171
         *
         * @param workingHoursType
         * @return
         */
        public Builder workingHoursType(String workingHoursType) {
            this.workingHoursType = workingHoursType;
            return this;
        }


        /**
         * 周工作时长v2（单位：小时）
         * <p> 示例值：8.5
         *
         * @param weeklyWorkingHoursV2
         * @return
         */
        public Builder weeklyWorkingHoursV2(Double weeklyWorkingHoursV2) {
            this.weeklyWorkingHoursV2 = weeklyWorkingHoursV2;
            return this;
        }


        public PreHireEmploymentInfo build() {
            return new PreHireEmploymentInfo(this);
        }
    }
}
