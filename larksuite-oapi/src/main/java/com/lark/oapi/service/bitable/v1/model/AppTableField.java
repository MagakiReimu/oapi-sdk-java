// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.bitable.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.bitable.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class AppTableField {
    /**
     * 多维表格字段名
     * <p> 示例值：多行文本
     */
    @SerializedName("field_name")
    private String fieldName;
    /**
     * 多维表格字段类型
     * <p> 示例值：1
     */
    @SerializedName("type")
    private Integer type;
    /**
     * 字段属性，具体参考：[字段编辑指南](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/guide)
     * <p> 示例值：
     */
    @SerializedName("property")
    private AppTableFieldProperty property;
    /**
     * 字段的描述
     * <p> 示例值：
     */
    @SerializedName("description")
    private AppTableFieldDescription description;
    /**
     * 是否是索引列
     * <p> 示例值：true
     */
    @SerializedName("is_primary")
    private Boolean isPrimary;
    /**
     * 多维表格字段 id
     * <p> 示例值：fldWJyCkFQ
     */
    @SerializedName("field_id")
    private String fieldId;
    /**
     * 字段在界面上的展示类型，例如进度字段是数字的一种展示形态
     * <p> 示例值：Progress
     */
    @SerializedName("ui_type")
    private String uiType;
    /**
     * 是否是隐藏字段
     * <p> 示例值：false
     */
    @SerializedName("is_hidden")
    private Boolean isHidden;

    // builder 开始
    public AppTableField() {
    }

    public AppTableField(Builder builder) {
        /**
         * 多维表格字段名
         * <p> 示例值：多行文本
         */
        this.fieldName = builder.fieldName;
        /**
         * 多维表格字段类型
         * <p> 示例值：1
         */
        this.type = builder.type;
        /**
         * 字段属性，具体参考：[字段编辑指南](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/guide)
         * <p> 示例值：
         */
        this.property = builder.property;
        /**
         * 字段的描述
         * <p> 示例值：
         */
        this.description = builder.description;
        /**
         * 是否是索引列
         * <p> 示例值：true
         */
        this.isPrimary = builder.isPrimary;
        /**
         * 多维表格字段 id
         * <p> 示例值：fldWJyCkFQ
         */
        this.fieldId = builder.fieldId;
        /**
         * 字段在界面上的展示类型，例如进度字段是数字的一种展示形态
         * <p> 示例值：Progress
         */
        this.uiType = builder.uiType;
        /**
         * 是否是隐藏字段
         * <p> 示例值：false
         */
        this.isHidden = builder.isHidden;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getFieldName() {
        return this.fieldName;
    }

    public void setFieldName(String fieldName) {
        this.fieldName = fieldName;
    }

    public Integer getType() {
        return this.type;
    }

    public void setType(Integer type) {
        this.type = type;
    }

    public AppTableFieldProperty getProperty() {
        return this.property;
    }

    public void setProperty(AppTableFieldProperty property) {
        this.property = property;
    }

    public AppTableFieldDescription getDescription() {
        return this.description;
    }

    public void setDescription(AppTableFieldDescription description) {
        this.description = description;
    }

    public Boolean getIsPrimary() {
        return this.isPrimary;
    }

    public void setIsPrimary(Boolean isPrimary) {
        this.isPrimary = isPrimary;
    }

    public String getFieldId() {
        return this.fieldId;
    }

    public void setFieldId(String fieldId) {
        this.fieldId = fieldId;
    }

    public String getUiType() {
        return this.uiType;
    }

    public void setUiType(String uiType) {
        this.uiType = uiType;
    }

    public Boolean getIsHidden() {
        return this.isHidden;
    }

    public void setIsHidden(Boolean isHidden) {
        this.isHidden = isHidden;
    }

    public static class Builder {
        /**
         * 多维表格字段名
         * <p> 示例值：多行文本
         */
        private String fieldName;
        /**
         * 多维表格字段类型
         * <p> 示例值：1
         */
        private Integer type;
        /**
         * 字段属性，具体参考：[字段编辑指南](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/guide)
         * <p> 示例值：
         */
        private AppTableFieldProperty property;
        /**
         * 字段的描述
         * <p> 示例值：
         */
        private AppTableFieldDescription description;
        /**
         * 是否是索引列
         * <p> 示例值：true
         */
        private Boolean isPrimary;
        /**
         * 多维表格字段 id
         * <p> 示例值：fldWJyCkFQ
         */
        private String fieldId;
        /**
         * 字段在界面上的展示类型，例如进度字段是数字的一种展示形态
         * <p> 示例值：Progress
         */
        private String uiType;
        /**
         * 是否是隐藏字段
         * <p> 示例值：false
         */
        private Boolean isHidden;

        /**
         * 多维表格字段名
         * <p> 示例值：多行文本
         *
         * @param fieldName
         * @return
         */
        public Builder fieldName(String fieldName) {
            this.fieldName = fieldName;
            return this;
        }


        /**
         * 多维表格字段类型
         * <p> 示例值：1
         *
         * @param type
         * @return
         */
        public Builder type(Integer type) {
            this.type = type;
            return this;
        }

        /**
         * 多维表格字段类型
         * <p> 示例值：1
         *
         * @param type {@link com.lark.oapi.service.bitable.v1.enums.AppTableFieldTypeEnum}
         * @return
         */
        public Builder type(com.lark.oapi.service.bitable.v1.enums.AppTableFieldTypeEnum type) {
            this.type = type.getValue();
            return this;
        }


        /**
         * 字段属性，具体参考：[字段编辑指南](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/bitable-v1/app-table-field/guide)
         * <p> 示例值：
         *
         * @param property
         * @return
         */
        public Builder property(AppTableFieldProperty property) {
            this.property = property;
            return this;
        }


        /**
         * 字段的描述
         * <p> 示例值：
         *
         * @param description
         * @return
         */
        public Builder description(AppTableFieldDescription description) {
            this.description = description;
            return this;
        }


        /**
         * 是否是索引列
         * <p> 示例值：true
         *
         * @param isPrimary
         * @return
         */
        public Builder isPrimary(Boolean isPrimary) {
            this.isPrimary = isPrimary;
            return this;
        }


        /**
         * 多维表格字段 id
         * <p> 示例值：fldWJyCkFQ
         *
         * @param fieldId
         * @return
         */
        public Builder fieldId(String fieldId) {
            this.fieldId = fieldId;
            return this;
        }


        /**
         * 字段在界面上的展示类型，例如进度字段是数字的一种展示形态
         * <p> 示例值：Progress
         *
         * @param uiType
         * @return
         */
        public Builder uiType(String uiType) {
            this.uiType = uiType;
            return this;
        }

        /**
         * 字段在界面上的展示类型，例如进度字段是数字的一种展示形态
         * <p> 示例值：Progress
         *
         * @param uiType {@link com.lark.oapi.service.bitable.v1.enums.AppTableFieldUiTypeEnum}
         * @return
         */
        public Builder uiType(com.lark.oapi.service.bitable.v1.enums.AppTableFieldUiTypeEnum uiType) {
            this.uiType = uiType.getValue();
            return this;
        }


        /**
         * 是否是隐藏字段
         * <p> 示例值：false
         *
         * @param isHidden
         * @return
         */
        public Builder isHidden(Boolean isHidden) {
            this.isHidden = isHidden;
            return this;
        }


        public AppTableField build() {
            return new AppTableField(this);
        }
    }
}
