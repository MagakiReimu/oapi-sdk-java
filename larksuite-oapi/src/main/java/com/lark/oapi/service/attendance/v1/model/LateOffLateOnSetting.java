// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.attendance.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class LateOffLateOnSetting {
    /**
     * 当日晚走时间计算规则
     * <p> 示例值：0
     */
    @SerializedName("late_off_base_on_time_type")
    private Integer lateOffBaseOnTimeType;
    /**
     * 次日晚到时间计算规则
     * <p> 示例值：0
     */
    @SerializedName("late_on_base_on_time_type")
    private Integer lateOnBaseOnTimeType;

    // builder 开始
    public LateOffLateOnSetting() {
    }

    public LateOffLateOnSetting(Builder builder) {
        /**
         * 当日晚走时间计算规则
         * <p> 示例值：0
         */
        this.lateOffBaseOnTimeType = builder.lateOffBaseOnTimeType;
        /**
         * 次日晚到时间计算规则
         * <p> 示例值：0
         */
        this.lateOnBaseOnTimeType = builder.lateOnBaseOnTimeType;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Integer getLateOffBaseOnTimeType() {
        return this.lateOffBaseOnTimeType;
    }

    public void setLateOffBaseOnTimeType(Integer lateOffBaseOnTimeType) {
        this.lateOffBaseOnTimeType = lateOffBaseOnTimeType;
    }

    public Integer getLateOnBaseOnTimeType() {
        return this.lateOnBaseOnTimeType;
    }

    public void setLateOnBaseOnTimeType(Integer lateOnBaseOnTimeType) {
        this.lateOnBaseOnTimeType = lateOnBaseOnTimeType;
    }

    public static class Builder {
        /**
         * 当日晚走时间计算规则
         * <p> 示例值：0
         */
        private Integer lateOffBaseOnTimeType;
        /**
         * 次日晚到时间计算规则
         * <p> 示例值：0
         */
        private Integer lateOnBaseOnTimeType;

        /**
         * 当日晚走时间计算规则
         * <p> 示例值：0
         *
         * @param lateOffBaseOnTimeType
         * @return
         */
        public Builder lateOffBaseOnTimeType(Integer lateOffBaseOnTimeType) {
            this.lateOffBaseOnTimeType = lateOffBaseOnTimeType;
            return this;
        }

        /**
         * 当日晚走时间计算规则
         * <p> 示例值：0
         *
         * @param lateOffBaseOnTimeType {@link com.lark.oapi.service.attendance.v1.enums.LateOffLateOnSettingLateOffBaseOnTimeTypeEnum}
         * @return
         */
        public Builder lateOffBaseOnTimeType(com.lark.oapi.service.attendance.v1.enums.LateOffLateOnSettingLateOffBaseOnTimeTypeEnum lateOffBaseOnTimeType) {
            this.lateOffBaseOnTimeType = lateOffBaseOnTimeType.getValue();
            return this;
        }


        /**
         * 次日晚到时间计算规则
         * <p> 示例值：0
         *
         * @param lateOnBaseOnTimeType
         * @return
         */
        public Builder lateOnBaseOnTimeType(Integer lateOnBaseOnTimeType) {
            this.lateOnBaseOnTimeType = lateOnBaseOnTimeType;
            return this;
        }

        /**
         * 次日晚到时间计算规则
         * <p> 示例值：0
         *
         * @param lateOnBaseOnTimeType {@link com.lark.oapi.service.attendance.v1.enums.LateOffLateOnSettingLateOnBaseOnTimeTypeEnum}
         * @return
         */
        public Builder lateOnBaseOnTimeType(com.lark.oapi.service.attendance.v1.enums.LateOffLateOnSettingLateOnBaseOnTimeTypeEnum lateOnBaseOnTimeType) {
            this.lateOnBaseOnTimeType = lateOnBaseOnTimeType.getValue();
            return this;
        }


        public LateOffLateOnSetting build() {
            return new LateOffLateOnSetting(this);
        }
    }
}
