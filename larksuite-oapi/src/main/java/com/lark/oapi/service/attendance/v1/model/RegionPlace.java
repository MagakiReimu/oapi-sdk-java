// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.attendance.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class RegionPlace {
    /**
     * 地理位置的等级 国家｜省｜市｜区 一共四个级别
     * <p> 示例值：l1
     */
    @SerializedName("region_level")
    private String regionLevel;
    /**
     * 地理位置的id，从标准地理库获取
     * <p> 示例值：6863333418483058189
     */
    @SerializedName("region_id")
    private String regionId;

    // builder 开始
    public RegionPlace() {
    }

    public RegionPlace(Builder builder) {
        /**
         * 地理位置的等级 国家｜省｜市｜区 一共四个级别
         * <p> 示例值：l1
         */
        this.regionLevel = builder.regionLevel;
        /**
         * 地理位置的id，从标准地理库获取
         * <p> 示例值：6863333418483058189
         */
        this.regionId = builder.regionId;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getRegionLevel() {
        return this.regionLevel;
    }

    public void setRegionLevel(String regionLevel) {
        this.regionLevel = regionLevel;
    }

    public String getRegionId() {
        return this.regionId;
    }

    public void setRegionId(String regionId) {
        this.regionId = regionId;
    }

    public static class Builder {
        /**
         * 地理位置的等级 国家｜省｜市｜区 一共四个级别
         * <p> 示例值：l1
         */
        private String regionLevel;
        /**
         * 地理位置的id，从标准地理库获取
         * <p> 示例值：6863333418483058189
         */
        private String regionId;

        /**
         * 地理位置的等级 国家｜省｜市｜区 一共四个级别
         * <p> 示例值：l1
         *
         * @param regionLevel
         * @return
         */
        public Builder regionLevel(String regionLevel) {
            this.regionLevel = regionLevel;
            return this;
        }


        /**
         * 地理位置的id，从标准地理库获取
         * <p> 示例值：6863333418483058189
         *
         * @param regionId
         * @return
         */
        public Builder regionId(String regionId) {
            this.regionId = regionId;
            return this;
        }


        public RegionPlace build() {
            return new RegionPlace(this);
        }
    }
}
