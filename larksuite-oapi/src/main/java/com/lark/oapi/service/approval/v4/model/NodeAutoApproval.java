// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.approval.v4.model;

import com.google.gson.annotations.SerializedName;

public class NodeAutoApproval {
    /**
     * 节点id的类型
     * <p> 示例值：NON_CUSTOM
     */
    @SerializedName("node_id_type")
    private String nodeIdType;
    /**
     * 节点id
     * <p> 示例值：manager_node_id
     */
    @SerializedName("node_id")
    private String nodeId;

    // builder 开始
    public NodeAutoApproval() {
    }

    public NodeAutoApproval(Builder builder) {
        /**
         * 节点id的类型
         * <p> 示例值：NON_CUSTOM
         */
        this.nodeIdType = builder.nodeIdType;
        /**
         * 节点id
         * <p> 示例值：manager_node_id
         */
        this.nodeId = builder.nodeId;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getNodeIdType() {
        return this.nodeIdType;
    }

    public void setNodeIdType(String nodeIdType) {
        this.nodeIdType = nodeIdType;
    }

    public String getNodeId() {
        return this.nodeId;
    }

    public void setNodeId(String nodeId) {
        this.nodeId = nodeId;
    }

    public static class Builder {
        /**
         * 节点id的类型
         * <p> 示例值：NON_CUSTOM
         */
        private String nodeIdType;
        /**
         * 节点id
         * <p> 示例值：manager_node_id
         */
        private String nodeId;

        /**
         * 节点id的类型
         * <p> 示例值：NON_CUSTOM
         *
         * @param nodeIdType
         * @return
         */
        public Builder nodeIdType(String nodeIdType) {
            this.nodeIdType = nodeIdType;
            return this;
        }

        /**
         * 节点id的类型
         * <p> 示例值：NON_CUSTOM
         *
         * @param nodeIdType {@link com.lark.oapi.service.approval.v4.enums.NodeAutoApprovalNodeIdTypeEnum}
         * @return
         */
        public Builder nodeIdType(com.lark.oapi.service.approval.v4.enums.NodeAutoApprovalNodeIdTypeEnum nodeIdType) {
            this.nodeIdType = nodeIdType.getValue();
            return this;
        }


        /**
         * 节点id
         * <p> 示例值：manager_node_id
         *
         * @param nodeId
         * @return
         */
        public Builder nodeId(String nodeId) {
            this.nodeId = nodeId;
            return this;
        }


        public NodeAutoApproval build() {
            return new NodeAutoApproval(this);
        }
    }
}
