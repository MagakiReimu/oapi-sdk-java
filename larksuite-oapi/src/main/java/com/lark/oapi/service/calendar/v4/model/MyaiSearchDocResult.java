// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.calendar.v4.model;

import com.google.gson.annotations.SerializedName;

public class MyaiSearchDocResult {
    /**
     * 返回的文档列表
     * <p> 示例值：
     */
    @SerializedName("doc_items")
    private MyaiDocDetail[] docItems;
    /**
     * 返回给AI的信息
     * <p> 示例值：以下是返回的文档内容
     */
    @SerializedName("message")
    private String message;

    // builder 开始
    public MyaiSearchDocResult() {
    }

    public MyaiSearchDocResult(Builder builder) {
        /**
         * 返回的文档列表
         * <p> 示例值：
         */
        this.docItems = builder.docItems;
        /**
         * 返回给AI的信息
         * <p> 示例值：以下是返回的文档内容
         */
        this.message = builder.message;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public MyaiDocDetail[] getDocItems() {
        return this.docItems;
    }

    public void setDocItems(MyaiDocDetail[] docItems) {
        this.docItems = docItems;
    }

    public String getMessage() {
        return this.message;
    }

    public void setMessage(String message) {
        this.message = message;
    }

    public static class Builder {
        /**
         * 返回的文档列表
         * <p> 示例值：
         */
        private MyaiDocDetail[] docItems;
        /**
         * 返回给AI的信息
         * <p> 示例值：以下是返回的文档内容
         */
        private String message;

        /**
         * 返回的文档列表
         * <p> 示例值：
         *
         * @param docItems
         * @return
         */
        public Builder docItems(MyaiDocDetail[] docItems) {
            this.docItems = docItems;
            return this;
        }


        /**
         * 返回给AI的信息
         * <p> 示例值：以下是返回的文档内容
         *
         * @param message
         * @return
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }


        public MyaiSearchDocResult build() {
            return new MyaiSearchDocResult(this);
        }
    }
}
