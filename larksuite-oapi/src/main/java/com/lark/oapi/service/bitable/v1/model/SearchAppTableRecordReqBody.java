// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.bitable.v1.model;

import com.google.gson.annotations.SerializedName;

public class SearchAppTableRecordReqBody {
    /**
     * 视图Id,指定视图id则按照视图的筛选排序结果返回数据
     * <p> 示例值：viex
     */
    @SerializedName("view_id")
    private String viewId;
    /**
     * 指定要返回的字段
     * <p> 示例值：
     */
    @SerializedName("field_names")
    private String[] fieldNames;
    /**
     * 排序条件
     * <p> 示例值：
     */
    @SerializedName("sort")
    private Sort[] sort;
    /**
     * 筛选条件
     * <p> 示例值：
     */
    @SerializedName("filter")
    private FilterInfo filter;
    /**
     * 控制是否返回自动计算的字段, true 表示返回
     * <p> 示例值：
     */
    @SerializedName("automatic_fields")
    private Boolean automaticFields;

    // builder 开始
    public SearchAppTableRecordReqBody() {
    }

    public SearchAppTableRecordReqBody(Builder builder) {
        /**
         * 视图Id,指定视图id则按照视图的筛选排序结果返回数据
         * <p> 示例值：viex
         */
        this.viewId = builder.viewId;
        /**
         * 指定要返回的字段
         * <p> 示例值：
         */
        this.fieldNames = builder.fieldNames;
        /**
         * 排序条件
         * <p> 示例值：
         */
        this.sort = builder.sort;
        /**
         * 筛选条件
         * <p> 示例值：
         */
        this.filter = builder.filter;
        /**
         * 控制是否返回自动计算的字段, true 表示返回
         * <p> 示例值：
         */
        this.automaticFields = builder.automaticFields;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getViewId() {
        return this.viewId;
    }

    public void setViewId(String viewId) {
        this.viewId = viewId;
    }

    public String[] getFieldNames() {
        return this.fieldNames;
    }

    public void setFieldNames(String[] fieldNames) {
        this.fieldNames = fieldNames;
    }

    public Sort[] getSort() {
        return this.sort;
    }

    public void setSort(Sort[] sort) {
        this.sort = sort;
    }

    public FilterInfo getFilter() {
        return this.filter;
    }

    public void setFilter(FilterInfo filter) {
        this.filter = filter;
    }

    public Boolean getAutomaticFields() {
        return this.automaticFields;
    }

    public void setAutomaticFields(Boolean automaticFields) {
        this.automaticFields = automaticFields;
    }

    public static class Builder {
        /**
         * 视图Id,指定视图id则按照视图的筛选排序结果返回数据
         * <p> 示例值：viex
         */
        private String viewId;
        /**
         * 指定要返回的字段
         * <p> 示例值：
         */
        private String[] fieldNames;
        /**
         * 排序条件
         * <p> 示例值：
         */
        private Sort[] sort;
        /**
         * 筛选条件
         * <p> 示例值：
         */
        private FilterInfo filter;
        /**
         * 控制是否返回自动计算的字段, true 表示返回
         * <p> 示例值：
         */
        private Boolean automaticFields;

        /**
         * 视图Id,指定视图id则按照视图的筛选排序结果返回数据
         * <p> 示例值：viex
         *
         * @param viewId
         * @return
         */
        public Builder viewId(String viewId) {
            this.viewId = viewId;
            return this;
        }


        /**
         * 指定要返回的字段
         * <p> 示例值：
         *
         * @param fieldNames
         * @return
         */
        public Builder fieldNames(String[] fieldNames) {
            this.fieldNames = fieldNames;
            return this;
        }


        /**
         * 排序条件
         * <p> 示例值：
         *
         * @param sort
         * @return
         */
        public Builder sort(Sort[] sort) {
            this.sort = sort;
            return this;
        }


        /**
         * 筛选条件
         * <p> 示例值：
         *
         * @param filter
         * @return
         */
        public Builder filter(FilterInfo filter) {
            this.filter = filter;
            return this;
        }


        /**
         * 控制是否返回自动计算的字段, true 表示返回
         * <p> 示例值：
         *
         * @param automaticFields
         * @return
         */
        public Builder automaticFields(Boolean automaticFields) {
            this.automaticFields = automaticFields;
            return this;
        }


        public SearchAppTableRecordReqBody build() {
            return new SearchAppTableRecordReqBody(this);
        }
    }
}
