// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.security_and_compliance.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.security_and_compliance.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class VaultTask {
    /**
     * 任务id
     * <p> 示例值：
     */
    @SerializedName("task_id")
    private String taskId;
    /**
     * 任务名
     * <p> 示例值：
     */
    @SerializedName("name")
    private String name;
    /**
     * 任务文件总大小
     * <p> 示例值：
     */
    @SerializedName("size")
    private String size;
    /**
     * 任务有效天数
     * <p> 示例值：
     */
    @SerializedName("valid_days")
    private Integer validDays;
    /**
     * 任务创建时间戳
     * <p> 示例值：
     */
    @SerializedName("create_time")
    private String createTime;
    /**
     * 文件包解压密码
     * <p> 示例值：
     */
    @SerializedName("extract_key")
    private String extractKey;
    /**
     * 任务创建者
     * <p> 示例值：
     */
    @SerializedName("creator")
    private SimpleUser creator;
    /**
     * 导出任务文件列表
     * <p> 示例值：
     */
    @SerializedName("files")
    private VaultExportFile[] files;
    /**
     * 导出任务状态信息
     * <p> 示例值：
     */
    @SerializedName("status")
    private TaskStatus status;

    // builder 开始
    public VaultTask() {
    }

    public VaultTask(Builder builder) {
        /**
         * 任务id
         * <p> 示例值：
         */
        this.taskId = builder.taskId;
        /**
         * 任务名
         * <p> 示例值：
         */
        this.name = builder.name;
        /**
         * 任务文件总大小
         * <p> 示例值：
         */
        this.size = builder.size;
        /**
         * 任务有效天数
         * <p> 示例值：
         */
        this.validDays = builder.validDays;
        /**
         * 任务创建时间戳
         * <p> 示例值：
         */
        this.createTime = builder.createTime;
        /**
         * 文件包解压密码
         * <p> 示例值：
         */
        this.extractKey = builder.extractKey;
        /**
         * 任务创建者
         * <p> 示例值：
         */
        this.creator = builder.creator;
        /**
         * 导出任务文件列表
         * <p> 示例值：
         */
        this.files = builder.files;
        /**
         * 导出任务状态信息
         * <p> 示例值：
         */
        this.status = builder.status;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getTaskId() {
        return this.taskId;
    }

    public void setTaskId(String taskId) {
        this.taskId = taskId;
    }

    public String getName() {
        return this.name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getSize() {
        return this.size;
    }

    public void setSize(String size) {
        this.size = size;
    }

    public Integer getValidDays() {
        return this.validDays;
    }

    public void setValidDays(Integer validDays) {
        this.validDays = validDays;
    }

    public String getCreateTime() {
        return this.createTime;
    }

    public void setCreateTime(String createTime) {
        this.createTime = createTime;
    }

    public String getExtractKey() {
        return this.extractKey;
    }

    public void setExtractKey(String extractKey) {
        this.extractKey = extractKey;
    }

    public SimpleUser getCreator() {
        return this.creator;
    }

    public void setCreator(SimpleUser creator) {
        this.creator = creator;
    }

    public VaultExportFile[] getFiles() {
        return this.files;
    }

    public void setFiles(VaultExportFile[] files) {
        this.files = files;
    }

    public TaskStatus getStatus() {
        return this.status;
    }

    public void setStatus(TaskStatus status) {
        this.status = status;
    }

    public static class Builder {
        /**
         * 任务id
         * <p> 示例值：
         */
        private String taskId;
        /**
         * 任务名
         * <p> 示例值：
         */
        private String name;
        /**
         * 任务文件总大小
         * <p> 示例值：
         */
        private String size;
        /**
         * 任务有效天数
         * <p> 示例值：
         */
        private Integer validDays;
        /**
         * 任务创建时间戳
         * <p> 示例值：
         */
        private String createTime;
        /**
         * 文件包解压密码
         * <p> 示例值：
         */
        private String extractKey;
        /**
         * 任务创建者
         * <p> 示例值：
         */
        private SimpleUser creator;
        /**
         * 导出任务文件列表
         * <p> 示例值：
         */
        private VaultExportFile[] files;
        /**
         * 导出任务状态信息
         * <p> 示例值：
         */
        private TaskStatus status;

        /**
         * 任务id
         * <p> 示例值：
         *
         * @param taskId
         * @return
         */
        public Builder taskId(String taskId) {
            this.taskId = taskId;
            return this;
        }


        /**
         * 任务名
         * <p> 示例值：
         *
         * @param name
         * @return
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }


        /**
         * 任务文件总大小
         * <p> 示例值：
         *
         * @param size
         * @return
         */
        public Builder size(String size) {
            this.size = size;
            return this;
        }


        /**
         * 任务有效天数
         * <p> 示例值：
         *
         * @param validDays
         * @return
         */
        public Builder validDays(Integer validDays) {
            this.validDays = validDays;
            return this;
        }


        /**
         * 任务创建时间戳
         * <p> 示例值：
         *
         * @param createTime
         * @return
         */
        public Builder createTime(String createTime) {
            this.createTime = createTime;
            return this;
        }


        /**
         * 文件包解压密码
         * <p> 示例值：
         *
         * @param extractKey
         * @return
         */
        public Builder extractKey(String extractKey) {
            this.extractKey = extractKey;
            return this;
        }


        /**
         * 任务创建者
         * <p> 示例值：
         *
         * @param creator
         * @return
         */
        public Builder creator(SimpleUser creator) {
            this.creator = creator;
            return this;
        }


        /**
         * 导出任务文件列表
         * <p> 示例值：
         *
         * @param files
         * @return
         */
        public Builder files(VaultExportFile[] files) {
            this.files = files;
            return this;
        }


        /**
         * 导出任务状态信息
         * <p> 示例值：
         *
         * @param status
         * @return
         */
        public Builder status(TaskStatus status) {
            this.status = status;
            return this;
        }


        public VaultTask build() {
            return new VaultTask(this);
        }
    }
}
