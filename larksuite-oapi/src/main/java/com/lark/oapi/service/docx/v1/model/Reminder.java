// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.docx.v1.model;

import com.google.gson.annotations.SerializedName;

public class Reminder {
    /**
     * 创建者用户 ID
     * <p> 示例值：0e2633a3-aa1a-4171-af9e-0768ff863566
     */
    @SerializedName("create_user_id")
    private String createUserId;
    /**
     * 是否通知
     * <p> 示例值：true
     */
    @SerializedName("is_notify")
    private Boolean isNotify;
    /**
     * 是日期还是整点小时
     * <p> 示例值：true
     */
    @SerializedName("is_whole_day")
    private Boolean isWholeDay;
    /**
     * 事件发生的时间（毫秒级事件戳）
     * <p> 示例值：1641967200000
     */
    @SerializedName("expire_time")
    private String expireTime;
    /**
     * 触发通知的时间（毫秒级时间戳）
     * <p> 示例值：1643166000000
     */
    @SerializedName("notify_time")
    private String notifyTime;
    /**
     * 文本局部样式
     * <p> 示例值：
     */
    @SerializedName("text_element_style")
    private TextElementStyle textElementStyle;

    // builder 开始
    public Reminder() {
    }

    public Reminder(Builder builder) {
        /**
         * 创建者用户 ID
         * <p> 示例值：0e2633a3-aa1a-4171-af9e-0768ff863566
         */
        this.createUserId = builder.createUserId;
        /**
         * 是否通知
         * <p> 示例值：true
         */
        this.isNotify = builder.isNotify;
        /**
         * 是日期还是整点小时
         * <p> 示例值：true
         */
        this.isWholeDay = builder.isWholeDay;
        /**
         * 事件发生的时间（毫秒级事件戳）
         * <p> 示例值：1641967200000
         */
        this.expireTime = builder.expireTime;
        /**
         * 触发通知的时间（毫秒级时间戳）
         * <p> 示例值：1643166000000
         */
        this.notifyTime = builder.notifyTime;
        /**
         * 文本局部样式
         * <p> 示例值：
         */
        this.textElementStyle = builder.textElementStyle;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getCreateUserId() {
        return this.createUserId;
    }

    public void setCreateUserId(String createUserId) {
        this.createUserId = createUserId;
    }

    public Boolean getIsNotify() {
        return this.isNotify;
    }

    public void setIsNotify(Boolean isNotify) {
        this.isNotify = isNotify;
    }

    public Boolean getIsWholeDay() {
        return this.isWholeDay;
    }

    public void setIsWholeDay(Boolean isWholeDay) {
        this.isWholeDay = isWholeDay;
    }

    public String getExpireTime() {
        return this.expireTime;
    }

    public void setExpireTime(String expireTime) {
        this.expireTime = expireTime;
    }

    public String getNotifyTime() {
        return this.notifyTime;
    }

    public void setNotifyTime(String notifyTime) {
        this.notifyTime = notifyTime;
    }

    public TextElementStyle getTextElementStyle() {
        return this.textElementStyle;
    }

    public void setTextElementStyle(TextElementStyle textElementStyle) {
        this.textElementStyle = textElementStyle;
    }

    public static class Builder {
        /**
         * 创建者用户 ID
         * <p> 示例值：0e2633a3-aa1a-4171-af9e-0768ff863566
         */
        private String createUserId;
        /**
         * 是否通知
         * <p> 示例值：true
         */
        private Boolean isNotify;
        /**
         * 是日期还是整点小时
         * <p> 示例值：true
         */
        private Boolean isWholeDay;
        /**
         * 事件发生的时间（毫秒级事件戳）
         * <p> 示例值：1641967200000
         */
        private String expireTime;
        /**
         * 触发通知的时间（毫秒级时间戳）
         * <p> 示例值：1643166000000
         */
        private String notifyTime;
        /**
         * 文本局部样式
         * <p> 示例值：
         */
        private TextElementStyle textElementStyle;

        /**
         * 创建者用户 ID
         * <p> 示例值：0e2633a3-aa1a-4171-af9e-0768ff863566
         *
         * @param createUserId
         * @return
         */
        public Builder createUserId(String createUserId) {
            this.createUserId = createUserId;
            return this;
        }


        /**
         * 是否通知
         * <p> 示例值：true
         *
         * @param isNotify
         * @return
         */
        public Builder isNotify(Boolean isNotify) {
            this.isNotify = isNotify;
            return this;
        }


        /**
         * 是日期还是整点小时
         * <p> 示例值：true
         *
         * @param isWholeDay
         * @return
         */
        public Builder isWholeDay(Boolean isWholeDay) {
            this.isWholeDay = isWholeDay;
            return this;
        }


        /**
         * 事件发生的时间（毫秒级事件戳）
         * <p> 示例值：1641967200000
         *
         * @param expireTime
         * @return
         */
        public Builder expireTime(String expireTime) {
            this.expireTime = expireTime;
            return this;
        }


        /**
         * 触发通知的时间（毫秒级时间戳）
         * <p> 示例值：1643166000000
         *
         * @param notifyTime
         * @return
         */
        public Builder notifyTime(String notifyTime) {
            this.notifyTime = notifyTime;
            return this;
        }


        /**
         * 文本局部样式
         * <p> 示例值：
         *
         * @param textElementStyle
         * @return
         */
        public Builder textElementStyle(TextElementStyle textElementStyle) {
            this.textElementStyle = textElementStyle;
            return this;
        }


        public Reminder build() {
            return new Reminder(this);
        }
    }
}
