// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.search.v2.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.search.v2.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class RagAnswerResponse {
    /**
     * 模型总结的结果
     * <p> 示例值：总结
     */
    @SerializedName("answer")
    private String answer;
    /**
     * 召回的passage列表
     * <p> 示例值：
     */
    @SerializedName("passages")
    private Passage[] passages;
    /**
     * 返回结果提示
     * <p> 示例值：
     */
    @SerializedName("probe")
    private RagProbe probe;

    // builder 开始
    public RagAnswerResponse() {
    }

    public RagAnswerResponse(Builder builder) {
        /**
         * 模型总结的结果
         * <p> 示例值：总结
         */
        this.answer = builder.answer;
        /**
         * 召回的passage列表
         * <p> 示例值：
         */
        this.passages = builder.passages;
        /**
         * 返回结果提示
         * <p> 示例值：
         */
        this.probe = builder.probe;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getAnswer() {
        return this.answer;
    }

    public void setAnswer(String answer) {
        this.answer = answer;
    }

    public Passage[] getPassages() {
        return this.passages;
    }

    public void setPassages(Passage[] passages) {
        this.passages = passages;
    }

    public RagProbe getProbe() {
        return this.probe;
    }

    public void setProbe(RagProbe probe) {
        this.probe = probe;
    }

    public static class Builder {
        /**
         * 模型总结的结果
         * <p> 示例值：总结
         */
        private String answer;
        /**
         * 召回的passage列表
         * <p> 示例值：
         */
        private Passage[] passages;
        /**
         * 返回结果提示
         * <p> 示例值：
         */
        private RagProbe probe;

        /**
         * 模型总结的结果
         * <p> 示例值：总结
         *
         * @param answer
         * @return
         */
        public Builder answer(String answer) {
            this.answer = answer;
            return this;
        }


        /**
         * 召回的passage列表
         * <p> 示例值：
         *
         * @param passages
         * @return
         */
        public Builder passages(Passage[] passages) {
            this.passages = passages;
            return this;
        }


        /**
         * 返回结果提示
         * <p> 示例值：
         *
         * @param probe
         * @return
         */
        public Builder probe(RagProbe probe) {
            this.probe = probe;
            return this;
        }


        public RagAnswerResponse build() {
            return new RagAnswerResponse(this);
        }
    }
}
