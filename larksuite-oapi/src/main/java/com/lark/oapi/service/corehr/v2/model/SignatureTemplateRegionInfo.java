// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v2.model;

import com.google.gson.annotations.SerializedName;

public class SignatureTemplateRegionInfo {
    /**
     * 是否全球适用
     * <p> 示例值：global
     */
    @SerializedName("is_global_scope")
    private String isGlobalScope;
    /**
     * 适用区域名称
     * <p> 示例值：
     */
    @SerializedName("meta_infos")
    private SignatureMetaInfo[] metaInfos;

    // builder 开始
    public SignatureTemplateRegionInfo() {
    }

    public SignatureTemplateRegionInfo(Builder builder) {
        /**
         * 是否全球适用
         * <p> 示例值：global
         */
        this.isGlobalScope = builder.isGlobalScope;
        /**
         * 适用区域名称
         * <p> 示例值：
         */
        this.metaInfos = builder.metaInfos;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getIsGlobalScope() {
        return this.isGlobalScope;
    }

    public void setIsGlobalScope(String isGlobalScope) {
        this.isGlobalScope = isGlobalScope;
    }

    public SignatureMetaInfo[] getMetaInfos() {
        return this.metaInfos;
    }

    public void setMetaInfos(SignatureMetaInfo[] metaInfos) {
        this.metaInfos = metaInfos;
    }

    public static class Builder {
        /**
         * 是否全球适用
         * <p> 示例值：global
         */
        private String isGlobalScope;
        /**
         * 适用区域名称
         * <p> 示例值：
         */
        private SignatureMetaInfo[] metaInfos;

        /**
         * 是否全球适用
         * <p> 示例值：global
         *
         * @param isGlobalScope
         * @return
         */
        public Builder isGlobalScope(String isGlobalScope) {
            this.isGlobalScope = isGlobalScope;
            return this;
        }


        /**
         * 适用区域名称
         * <p> 示例值：
         *
         * @param metaInfos
         * @return
         */
        public Builder metaInfos(SignatureMetaInfo[] metaInfos) {
            this.metaInfos = metaInfos;
            return this;
        }


        public SignatureTemplateRegionInfo build() {
            return new SignatureTemplateRegionInfo(this);
        }
    }
}
