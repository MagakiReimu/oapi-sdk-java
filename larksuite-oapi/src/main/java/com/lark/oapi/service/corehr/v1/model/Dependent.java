// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.google.gson.annotations.SerializedName;

public class Dependent {
    /**
     * 亲属姓名
     * <p> 示例值：
     */
    @SerializedName("name")
    private PersonName name;
    /**
     * 亲属关系，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获得
     * <p> 示例值：
     */
    @SerializedName("relationship")
    private Enum relationship;
    /**
     * 亲属性别，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)性别（gender）枚举定义部分获得
     * <p> 示例值：
     */
    @SerializedName("gender")
    private Enum gender;
    /**
     * 生日
     * <p> 示例值：2020-01-01
     */
    @SerializedName("date_of_birth")
    private String dateOfBirth;
    /**
     * 国籍
     * <p> 示例值：123456
     */
    @SerializedName("nationality_id")
    private String nationalityId;
    /**
     * 国籍 ID，可通过【查询国籍信息】接口查询
     * <p> 示例值：7075702734054164012
     */
    @SerializedName("nationality_id_v2")
    private String nationalityIdV2;
    /**
     * 证件号码
     * <p> 示例值：
     */
    @SerializedName("national_id_list")
    private NationalId[] nationalIdList;
    /**
     * 配偶工作状态，比如working（在岗）、not_working（不在岗）
     * <p> 示例值：
     */
    @SerializedName("spouses_working_status")
    private Enum spousesWorkingStatus;
    /**
     * 包含家属医疗保险
     * <p> 示例值：true
     */
    @SerializedName("is_this_person_covered_by_health_insurance")
    private Boolean isThisPersonCoveredByHealthInsurance;
    /**
     * 允许家属抵扣税款
     * <p> 示例值：false
     */
    @SerializedName("is_this_person_allowed_for_tax_deduction")
    private Boolean isThisPersonAllowedForTaxDeduction;
    /**
     * 自定义字段
     * <p> 示例值：
     */
    @SerializedName("custom_fields")
    private ObjectFieldData[] customFields;
    /**
     * 家庭成员姓名
     * <p> 示例值：张三
     */
    @SerializedName("dependent_name")
    private String dependentName;
    /**
     * 工作单位
     * <p> 示例值：海淀区交警大队
     */
    @SerializedName("employer")
    private String employer;
    /**
     * 岗位
     * <p> 示例值：保安
     */
    @SerializedName("job")
    private String job;
    /**
     * 电话
     * <p> 示例值：
     */
    @SerializedName("phone")
    private Phone phone;
    /**
     * 联系地址
     * <p> 示例值：
     */
    @SerializedName("address")
    private Address address;
    /**
     * 出生证明
     * <p> 示例值：
     */
    @SerializedName("birth_certificate_of_child")
    private File[] birthCertificateOfChild;

    // builder 开始
    public Dependent() {
    }

    public Dependent(Builder builder) {
        /**
         * 亲属姓名
         * <p> 示例值：
         */
        this.name = builder.name;
        /**
         * 亲属关系，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获得
         * <p> 示例值：
         */
        this.relationship = builder.relationship;
        /**
         * 亲属性别，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)性别（gender）枚举定义部分获得
         * <p> 示例值：
         */
        this.gender = builder.gender;
        /**
         * 生日
         * <p> 示例值：2020-01-01
         */
        this.dateOfBirth = builder.dateOfBirth;
        /**
         * 国籍
         * <p> 示例值：123456
         */
        this.nationalityId = builder.nationalityId;
        /**
         * 国籍 ID，可通过【查询国籍信息】接口查询
         * <p> 示例值：7075702734054164012
         */
        this.nationalityIdV2 = builder.nationalityIdV2;
        /**
         * 证件号码
         * <p> 示例值：
         */
        this.nationalIdList = builder.nationalIdList;
        /**
         * 配偶工作状态，比如working（在岗）、not_working（不在岗）
         * <p> 示例值：
         */
        this.spousesWorkingStatus = builder.spousesWorkingStatus;
        /**
         * 包含家属医疗保险
         * <p> 示例值：true
         */
        this.isThisPersonCoveredByHealthInsurance = builder.isThisPersonCoveredByHealthInsurance;
        /**
         * 允许家属抵扣税款
         * <p> 示例值：false
         */
        this.isThisPersonAllowedForTaxDeduction = builder.isThisPersonAllowedForTaxDeduction;
        /**
         * 自定义字段
         * <p> 示例值：
         */
        this.customFields = builder.customFields;
        /**
         * 家庭成员姓名
         * <p> 示例值：张三
         */
        this.dependentName = builder.dependentName;
        /**
         * 工作单位
         * <p> 示例值：海淀区交警大队
         */
        this.employer = builder.employer;
        /**
         * 岗位
         * <p> 示例值：保安
         */
        this.job = builder.job;
        /**
         * 电话
         * <p> 示例值：
         */
        this.phone = builder.phone;
        /**
         * 联系地址
         * <p> 示例值：
         */
        this.address = builder.address;
        /**
         * 出生证明
         * <p> 示例值：
         */
        this.birthCertificateOfChild = builder.birthCertificateOfChild;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public PersonName getName() {
        return this.name;
    }

    public void setName(PersonName name) {
        this.name = name;
    }

    public Enum getRelationship() {
        return this.relationship;
    }

    public void setRelationship(Enum relationship) {
        this.relationship = relationship;
    }

    public Enum getGender() {
        return this.gender;
    }

    public void setGender(Enum gender) {
        this.gender = gender;
    }

    public String getDateOfBirth() {
        return this.dateOfBirth;
    }

    public void setDateOfBirth(String dateOfBirth) {
        this.dateOfBirth = dateOfBirth;
    }

    public String getNationalityId() {
        return this.nationalityId;
    }

    public void setNationalityId(String nationalityId) {
        this.nationalityId = nationalityId;
    }

    public String getNationalityIdV2() {
        return this.nationalityIdV2;
    }

    public void setNationalityIdV2(String nationalityIdV2) {
        this.nationalityIdV2 = nationalityIdV2;
    }

    public NationalId[] getNationalIdList() {
        return this.nationalIdList;
    }

    public void setNationalIdList(NationalId[] nationalIdList) {
        this.nationalIdList = nationalIdList;
    }

    public Enum getSpousesWorkingStatus() {
        return this.spousesWorkingStatus;
    }

    public void setSpousesWorkingStatus(Enum spousesWorkingStatus) {
        this.spousesWorkingStatus = spousesWorkingStatus;
    }

    public Boolean getIsThisPersonCoveredByHealthInsurance() {
        return this.isThisPersonCoveredByHealthInsurance;
    }

    public void setIsThisPersonCoveredByHealthInsurance(Boolean isThisPersonCoveredByHealthInsurance) {
        this.isThisPersonCoveredByHealthInsurance = isThisPersonCoveredByHealthInsurance;
    }

    public Boolean getIsThisPersonAllowedForTaxDeduction() {
        return this.isThisPersonAllowedForTaxDeduction;
    }

    public void setIsThisPersonAllowedForTaxDeduction(Boolean isThisPersonAllowedForTaxDeduction) {
        this.isThisPersonAllowedForTaxDeduction = isThisPersonAllowedForTaxDeduction;
    }

    public ObjectFieldData[] getCustomFields() {
        return this.customFields;
    }

    public void setCustomFields(ObjectFieldData[] customFields) {
        this.customFields = customFields;
    }

    public String getDependentName() {
        return this.dependentName;
    }

    public void setDependentName(String dependentName) {
        this.dependentName = dependentName;
    }

    public String getEmployer() {
        return this.employer;
    }

    public void setEmployer(String employer) {
        this.employer = employer;
    }

    public String getJob() {
        return this.job;
    }

    public void setJob(String job) {
        this.job = job;
    }

    public Phone getPhone() {
        return this.phone;
    }

    public void setPhone(Phone phone) {
        this.phone = phone;
    }

    public Address getAddress() {
        return this.address;
    }

    public void setAddress(Address address) {
        this.address = address;
    }

    public File[] getBirthCertificateOfChild() {
        return this.birthCertificateOfChild;
    }

    public void setBirthCertificateOfChild(File[] birthCertificateOfChild) {
        this.birthCertificateOfChild = birthCertificateOfChild;
    }

    public static class Builder {
        /**
         * 亲属姓名
         * <p> 示例值：
         */
        private PersonName name;
        /**
         * 亲属关系，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获得
         * <p> 示例值：
         */
        private Enum relationship;
        /**
         * 亲属性别，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)性别（gender）枚举定义部分获得
         * <p> 示例值：
         */
        private Enum gender;
        /**
         * 生日
         * <p> 示例值：2020-01-01
         */
        private String dateOfBirth;
        /**
         * 国籍
         * <p> 示例值：123456
         */
        private String nationalityId;
        /**
         * 国籍 ID，可通过【查询国籍信息】接口查询
         * <p> 示例值：7075702734054164012
         */
        private String nationalityIdV2;
        /**
         * 证件号码
         * <p> 示例值：
         */
        private NationalId[] nationalIdList;
        /**
         * 配偶工作状态，比如working（在岗）、not_working（不在岗）
         * <p> 示例值：
         */
        private Enum spousesWorkingStatus;
        /**
         * 包含家属医疗保险
         * <p> 示例值：true
         */
        private Boolean isThisPersonCoveredByHealthInsurance;
        /**
         * 允许家属抵扣税款
         * <p> 示例值：false
         */
        private Boolean isThisPersonAllowedForTaxDeduction;
        /**
         * 自定义字段
         * <p> 示例值：
         */
        private ObjectFieldData[] customFields;
        /**
         * 家庭成员姓名
         * <p> 示例值：张三
         */
        private String dependentName;
        /**
         * 工作单位
         * <p> 示例值：海淀区交警大队
         */
        private String employer;
        /**
         * 岗位
         * <p> 示例值：保安
         */
        private String job;
        /**
         * 电话
         * <p> 示例值：
         */
        private Phone phone;
        /**
         * 联系地址
         * <p> 示例值：
         */
        private Address address;
        /**
         * 出生证明
         * <p> 示例值：
         */
        private File[] birthCertificateOfChild;

        /**
         * 亲属姓名
         * <p> 示例值：
         *
         * @param name
         * @return
         */
        public Builder name(PersonName name) {
            this.name = name;
            return this;
        }


        /**
         * 亲属关系，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)亲属关系（relationship）枚举定义获得
         * <p> 示例值：
         *
         * @param relationship
         * @return
         */
        public Builder relationship(Enum relationship) {
            this.relationship = relationship;
            return this;
        }


        /**
         * 亲属性别，枚举值可通过文档[【飞书人事枚举常量】](https://open.feishu.cn/document/uAjLw4CM/ukTMukTMukTM/reference/corehr-v1/feishu-people-enum-constant)性别（gender）枚举定义部分获得
         * <p> 示例值：
         *
         * @param gender
         * @return
         */
        public Builder gender(Enum gender) {
            this.gender = gender;
            return this;
        }


        /**
         * 生日
         * <p> 示例值：2020-01-01
         *
         * @param dateOfBirth
         * @return
         */
        public Builder dateOfBirth(String dateOfBirth) {
            this.dateOfBirth = dateOfBirth;
            return this;
        }


        /**
         * 国籍
         * <p> 示例值：123456
         *
         * @param nationalityId
         * @return
         */
        public Builder nationalityId(String nationalityId) {
            this.nationalityId = nationalityId;
            return this;
        }


        /**
         * 国籍 ID，可通过【查询国籍信息】接口查询
         * <p> 示例值：7075702734054164012
         *
         * @param nationalityIdV2
         * @return
         */
        public Builder nationalityIdV2(String nationalityIdV2) {
            this.nationalityIdV2 = nationalityIdV2;
            return this;
        }


        /**
         * 证件号码
         * <p> 示例值：
         *
         * @param nationalIdList
         * @return
         */
        public Builder nationalIdList(NationalId[] nationalIdList) {
            this.nationalIdList = nationalIdList;
            return this;
        }


        /**
         * 配偶工作状态，比如working（在岗）、not_working（不在岗）
         * <p> 示例值：
         *
         * @param spousesWorkingStatus
         * @return
         */
        public Builder spousesWorkingStatus(Enum spousesWorkingStatus) {
            this.spousesWorkingStatus = spousesWorkingStatus;
            return this;
        }


        /**
         * 包含家属医疗保险
         * <p> 示例值：true
         *
         * @param isThisPersonCoveredByHealthInsurance
         * @return
         */
        public Builder isThisPersonCoveredByHealthInsurance(Boolean isThisPersonCoveredByHealthInsurance) {
            this.isThisPersonCoveredByHealthInsurance = isThisPersonCoveredByHealthInsurance;
            return this;
        }


        /**
         * 允许家属抵扣税款
         * <p> 示例值：false
         *
         * @param isThisPersonAllowedForTaxDeduction
         * @return
         */
        public Builder isThisPersonAllowedForTaxDeduction(Boolean isThisPersonAllowedForTaxDeduction) {
            this.isThisPersonAllowedForTaxDeduction = isThisPersonAllowedForTaxDeduction;
            return this;
        }


        /**
         * 自定义字段
         * <p> 示例值：
         *
         * @param customFields
         * @return
         */
        public Builder customFields(ObjectFieldData[] customFields) {
            this.customFields = customFields;
            return this;
        }


        /**
         * 家庭成员姓名
         * <p> 示例值：张三
         *
         * @param dependentName
         * @return
         */
        public Builder dependentName(String dependentName) {
            this.dependentName = dependentName;
            return this;
        }


        /**
         * 工作单位
         * <p> 示例值：海淀区交警大队
         *
         * @param employer
         * @return
         */
        public Builder employer(String employer) {
            this.employer = employer;
            return this;
        }


        /**
         * 岗位
         * <p> 示例值：保安
         *
         * @param job
         * @return
         */
        public Builder job(String job) {
            this.job = job;
            return this;
        }


        /**
         * 电话
         * <p> 示例值：
         *
         * @param phone
         * @return
         */
        public Builder phone(Phone phone) {
            this.phone = phone;
            return this;
        }


        /**
         * 联系地址
         * <p> 示例值：
         *
         * @param address
         * @return
         */
        public Builder address(Address address) {
            this.address = address;
            return this;
        }


        /**
         * 出生证明
         * <p> 示例值：
         *
         * @param birthCertificateOfChild
         * @return
         */
        public Builder birthCertificateOfChild(File[] birthCertificateOfChild) {
            this.birthCertificateOfChild = birthCertificateOfChild;
            return this;
        }


        public Dependent build() {
            return new Dependent(this);
        }
    }
}
