// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.attendance.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.attendance.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class PunchMember {
    /**
     * 圈人方式：0 无 1全部 2自定义
     * <p> 示例值：0
     */
    @SerializedName("rule_scope_type")
    private Integer ruleScopeType;
    /**
     * 圈人规则列表
     * <p> 示例值：
     */
    @SerializedName("scope_group_list")
    private ScopeGroup scopeGroupList;

    // builder 开始
    public PunchMember() {
    }

    public PunchMember(Builder builder) {
        /**
         * 圈人方式：0 无 1全部 2自定义
         * <p> 示例值：0
         */
        this.ruleScopeType = builder.ruleScopeType;
        /**
         * 圈人规则列表
         * <p> 示例值：
         */
        this.scopeGroupList = builder.scopeGroupList;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Integer getRuleScopeType() {
        return this.ruleScopeType;
    }

    public void setRuleScopeType(Integer ruleScopeType) {
        this.ruleScopeType = ruleScopeType;
    }

    public ScopeGroup getScopeGroupList() {
        return this.scopeGroupList;
    }

    public void setScopeGroupList(ScopeGroup scopeGroupList) {
        this.scopeGroupList = scopeGroupList;
    }

    public static class Builder {
        /**
         * 圈人方式：0 无 1全部 2自定义
         * <p> 示例值：0
         */
        private Integer ruleScopeType;
        /**
         * 圈人规则列表
         * <p> 示例值：
         */
        private ScopeGroup scopeGroupList;

        /**
         * 圈人方式：0 无 1全部 2自定义
         * <p> 示例值：0
         *
         * @param ruleScopeType
         * @return
         */
        public Builder ruleScopeType(Integer ruleScopeType) {
            this.ruleScopeType = ruleScopeType;
            return this;
        }


        /**
         * 圈人规则列表
         * <p> 示例值：
         *
         * @param scopeGroupList
         * @return
         */
        public Builder scopeGroupList(ScopeGroup scopeGroupList) {
            this.scopeGroupList = scopeGroupList;
            return this;
        }


        public PunchMember build() {
            return new PunchMember(this);
        }
    }
}
