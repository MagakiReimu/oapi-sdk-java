// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.contact.v3.model;

import com.google.gson.annotations.SerializedName;

public class Memberlist {
    /**
     * 成员ID
     * <p> 示例值：u287xj12
     */
    @SerializedName("member_id")
    private String memberId;
    /**
     * 用户组成员的类型，取值为 user或department。
     * <p> 示例值：user
     */
    @SerializedName("member_type")
    private String memberType;
    /**
     * 当member_type为user时，member_id_type表示user_id_type，可选值为open_id, union_id, user_id。仅在请求参数中有效，响应体中不会返回此参数。
     * <p> 示例值：user_id
     */
    @SerializedName("member_id_type")
    private String memberIdType;

    // builder 开始
    public Memberlist() {
    }

    public Memberlist(Builder builder) {
        /**
         * 成员ID
         * <p> 示例值：u287xj12
         */
        this.memberId = builder.memberId;
        /**
         * 用户组成员的类型，取值为 user或department。
         * <p> 示例值：user
         */
        this.memberType = builder.memberType;
        /**
         * 当member_type为user时，member_id_type表示user_id_type，可选值为open_id, union_id, user_id。仅在请求参数中有效，响应体中不会返回此参数。
         * <p> 示例值：user_id
         */
        this.memberIdType = builder.memberIdType;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getMemberId() {
        return this.memberId;
    }

    public void setMemberId(String memberId) {
        this.memberId = memberId;
    }

    public String getMemberType() {
        return this.memberType;
    }

    public void setMemberType(String memberType) {
        this.memberType = memberType;
    }

    public String getMemberIdType() {
        return this.memberIdType;
    }

    public void setMemberIdType(String memberIdType) {
        this.memberIdType = memberIdType;
    }

    public static class Builder {
        /**
         * 成员ID
         * <p> 示例值：u287xj12
         */
        private String memberId;
        /**
         * 用户组成员的类型，取值为 user或department。
         * <p> 示例值：user
         */
        private String memberType;
        /**
         * 当member_type为user时，member_id_type表示user_id_type，可选值为open_id, union_id, user_id。仅在请求参数中有效，响应体中不会返回此参数。
         * <p> 示例值：user_id
         */
        private String memberIdType;

        /**
         * 成员ID
         * <p> 示例值：u287xj12
         *
         * @param memberId
         * @return
         */
        public Builder memberId(String memberId) {
            this.memberId = memberId;
            return this;
        }


        /**
         * 用户组成员的类型，取值为 user或department。
         * <p> 示例值：user
         *
         * @param memberType
         * @return
         */
        public Builder memberType(String memberType) {
            this.memberType = memberType;
            return this;
        }


        /**
         * 当member_type为user时，member_id_type表示user_id_type，可选值为open_id, union_id, user_id。仅在请求参数中有效，响应体中不会返回此参数。
         * <p> 示例值：user_id
         *
         * @param memberIdType
         * @return
         */
        public Builder memberIdType(String memberIdType) {
            this.memberIdType = memberIdType;
            return this;
        }


        public Memberlist build() {
            return new Memberlist(this);
        }
    }
}
