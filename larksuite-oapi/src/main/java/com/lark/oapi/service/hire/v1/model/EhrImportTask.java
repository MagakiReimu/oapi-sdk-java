// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.hire.v1.model;

import com.google.gson.annotations.SerializedName;

public class EhrImportTask {
    /**
     * 失败原因，仅在导入结果为失败时可用
     * <p> 示例值：当前 HC 不可用
     */
    @SerializedName("fail_reason")
    private String failReason;
    /**
     * 跳转链接，若需返回跳转链接，请前往飞书招聘「设置 - 生态对接 - e-HR / OA 办公系统 - 『导入 e-HR』功能设置」中开启「支持对接的 e-HR / OA 系统返回外部链接」开关
     * <p> 示例值：https://example.com
     */
    @SerializedName("redirect_url")
    private String redirectUrl;
    /**
     * 导入结果
     * <p> 示例值：2
     */
    @SerializedName("state")
    private Integer state;

    // builder 开始
    public EhrImportTask() {
    }

    public EhrImportTask(Builder builder) {
        /**
         * 失败原因，仅在导入结果为失败时可用
         * <p> 示例值：当前 HC 不可用
         */
        this.failReason = builder.failReason;
        /**
         * 跳转链接，若需返回跳转链接，请前往飞书招聘「设置 - 生态对接 - e-HR / OA 办公系统 - 『导入 e-HR』功能设置」中开启「支持对接的 e-HR / OA 系统返回外部链接」开关
         * <p> 示例值：https://example.com
         */
        this.redirectUrl = builder.redirectUrl;
        /**
         * 导入结果
         * <p> 示例值：2
         */
        this.state = builder.state;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getFailReason() {
        return this.failReason;
    }

    public void setFailReason(String failReason) {
        this.failReason = failReason;
    }

    public String getRedirectUrl() {
        return this.redirectUrl;
    }

    public void setRedirectUrl(String redirectUrl) {
        this.redirectUrl = redirectUrl;
    }

    public Integer getState() {
        return this.state;
    }

    public void setState(Integer state) {
        this.state = state;
    }

    public static class Builder {
        /**
         * 失败原因，仅在导入结果为失败时可用
         * <p> 示例值：当前 HC 不可用
         */
        private String failReason;
        /**
         * 跳转链接，若需返回跳转链接，请前往飞书招聘「设置 - 生态对接 - e-HR / OA 办公系统 - 『导入 e-HR』功能设置」中开启「支持对接的 e-HR / OA 系统返回外部链接」开关
         * <p> 示例值：https://example.com
         */
        private String redirectUrl;
        /**
         * 导入结果
         * <p> 示例值：2
         */
        private Integer state;

        /**
         * 失败原因，仅在导入结果为失败时可用
         * <p> 示例值：当前 HC 不可用
         *
         * @param failReason
         * @return
         */
        public Builder failReason(String failReason) {
            this.failReason = failReason;
            return this;
        }


        /**
         * 跳转链接，若需返回跳转链接，请前往飞书招聘「设置 - 生态对接 - e-HR / OA 办公系统 - 『导入 e-HR』功能设置」中开启「支持对接的 e-HR / OA 系统返回外部链接」开关
         * <p> 示例值：https://example.com
         *
         * @param redirectUrl
         * @return
         */
        public Builder redirectUrl(String redirectUrl) {
            this.redirectUrl = redirectUrl;
            return this;
        }


        /**
         * 导入结果
         * <p> 示例值：2
         *
         * @param state
         * @return
         */
        public Builder state(Integer state) {
            this.state = state;
            return this;
        }


        public EhrImportTask build() {
            return new EhrImportTask(this);
        }
    }
}
