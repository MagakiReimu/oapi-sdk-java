// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v1.model;

import com.google.gson.annotations.SerializedName;

public class UpdateMessageReqBody {
    /**
     * 消息的类型，仅支持文本(text)和富文本(post)类型
     * <p> 示例值：text
     */
    @SerializedName("msg_type")
    private String msgType;
    /**
     * 消息内容，JSON 格式
     * <p> 示例值：{"text":"test content"}
     */
    @SerializedName("content")
    private String content;

    // builder 开始
    public UpdateMessageReqBody() {
    }

    public UpdateMessageReqBody(Builder builder) {
        /**
         * 消息的类型，仅支持文本(text)和富文本(post)类型
         * <p> 示例值：text
         */
        this.msgType = builder.msgType;
        /**
         * 消息内容，JSON 格式
         * <p> 示例值：{"text":"test content"}
         */
        this.content = builder.content;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getMsgType() {
        return this.msgType;
    }

    public void setMsgType(String msgType) {
        this.msgType = msgType;
    }

    public String getContent() {
        return this.content;
    }

    public void setContent(String content) {
        this.content = content;
    }

    public static class Builder {
        /**
         * 消息的类型，仅支持文本(text)和富文本(post)类型
         * <p> 示例值：text
         */
        private String msgType;
        /**
         * 消息内容，JSON 格式
         * <p> 示例值：{"text":"test content"}
         */
        private String content;

        /**
         * 消息的类型，仅支持文本(text)和富文本(post)类型
         * <p> 示例值：text
         *
         * @param msgType
         * @return
         */
        public Builder msgType(String msgType) {
            this.msgType = msgType;
            return this;
        }


        /**
         * 消息内容，JSON 格式
         * <p> 示例值：{"text":"test content"}
         *
         * @param content
         * @return
         */
        public Builder content(String content) {
            this.content = content;
            return this;
        }


        public UpdateMessageReqBody build() {
            return new UpdateMessageReqBody(this);
        }
    }
}
