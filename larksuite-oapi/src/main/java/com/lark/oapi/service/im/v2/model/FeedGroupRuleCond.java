// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v2.model;

import com.google.gson.annotations.SerializedName;

public class FeedGroupRuleCond {
    /**
     * 匹配类型
     * <p> 示例值：match_all
     */
    @SerializedName("match_type")
    private String matchType;
    /**
     * 条件项列表
     * <p> 示例值：
     */
    @SerializedName("condition_items")
    private FeedGroupRuleCondItem[] conditionItems;

    // builder 开始
    public FeedGroupRuleCond() {
    }

    public FeedGroupRuleCond(Builder builder) {
        /**
         * 匹配类型
         * <p> 示例值：match_all
         */
        this.matchType = builder.matchType;
        /**
         * 条件项列表
         * <p> 示例值：
         */
        this.conditionItems = builder.conditionItems;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getMatchType() {
        return this.matchType;
    }

    public void setMatchType(String matchType) {
        this.matchType = matchType;
    }

    public FeedGroupRuleCondItem[] getConditionItems() {
        return this.conditionItems;
    }

    public void setConditionItems(FeedGroupRuleCondItem[] conditionItems) {
        this.conditionItems = conditionItems;
    }

    public static class Builder {
        /**
         * 匹配类型
         * <p> 示例值：match_all
         */
        private String matchType;
        /**
         * 条件项列表
         * <p> 示例值：
         */
        private FeedGroupRuleCondItem[] conditionItems;

        /**
         * 匹配类型
         * <p> 示例值：match_all
         *
         * @param matchType
         * @return
         */
        public Builder matchType(String matchType) {
            this.matchType = matchType;
            return this;
        }

        /**
         * 匹配类型
         * <p> 示例值：match_all
         *
         * @param matchType {@link com.lark.oapi.service.im.v2.enums.FeedGroupRuleCondMatchTypeEnum}
         * @return
         */
        public Builder matchType(com.lark.oapi.service.im.v2.enums.FeedGroupRuleCondMatchTypeEnum matchType) {
            this.matchType = matchType.getValue();
            return this;
        }


        /**
         * 条件项列表
         * <p> 示例值：
         *
         * @param conditionItems
         * @return
         */
        public Builder conditionItems(FeedGroupRuleCondItem[] conditionItems) {
            this.conditionItems = conditionItems;
            return this;
        }


        public FeedGroupRuleCond build() {
            return new FeedGroupRuleCond(this);
        }
    }
}
