// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v1.model;

import com.google.gson.annotations.SerializedName;

public class BatchMessageRecallProgress {
    /**
     * 该条批量消息是否被执行过撤回操作
     * <p> 示例值：true
     */
    @SerializedName("recall")
    private Boolean recall;
    /**
     * 已经成功撤回的消息数量
     * <p> 示例值：100
     */
    @SerializedName("recall_count")
    private Integer recallCount;

    // builder 开始
    public BatchMessageRecallProgress() {
    }

    public BatchMessageRecallProgress(Builder builder) {
        /**
         * 该条批量消息是否被执行过撤回操作
         * <p> 示例值：true
         */
        this.recall = builder.recall;
        /**
         * 已经成功撤回的消息数量
         * <p> 示例值：100
         */
        this.recallCount = builder.recallCount;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Boolean getRecall() {
        return this.recall;
    }

    public void setRecall(Boolean recall) {
        this.recall = recall;
    }

    public Integer getRecallCount() {
        return this.recallCount;
    }

    public void setRecallCount(Integer recallCount) {
        this.recallCount = recallCount;
    }

    public static class Builder {
        /**
         * 该条批量消息是否被执行过撤回操作
         * <p> 示例值：true
         */
        private Boolean recall;
        /**
         * 已经成功撤回的消息数量
         * <p> 示例值：100
         */
        private Integer recallCount;

        /**
         * 该条批量消息是否被执行过撤回操作
         * <p> 示例值：true
         *
         * @param recall
         * @return
         */
        public Builder recall(Boolean recall) {
            this.recall = recall;
            return this;
        }


        /**
         * 已经成功撤回的消息数量
         * <p> 示例值：100
         *
         * @param recallCount
         * @return
         */
        public Builder recallCount(Integer recallCount) {
            this.recallCount = recallCount;
            return this;
        }


        public BatchMessageRecallProgress build() {
            return new BatchMessageRecallProgress(this);
        }
    }
}
