// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.security_and_compliance.v1.model;

import com.google.gson.annotations.SerializedName;

public class FileRiskDetectionRecordResult {
    /**
     * 检测状态
     * <p> 示例值：FINISHED
     */
    @SerializedName("status")
    private String status;
    /**
     * 风险类型
     * <p> 示例值：RISK
     */
    @SerializedName("risk_tag")
    private String riskTag;

    // builder 开始
    public FileRiskDetectionRecordResult() {
    }

    public FileRiskDetectionRecordResult(Builder builder) {
        /**
         * 检测状态
         * <p> 示例值：FINISHED
         */
        this.status = builder.status;
        /**
         * 风险类型
         * <p> 示例值：RISK
         */
        this.riskTag = builder.riskTag;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getStatus() {
        return this.status;
    }

    public void setStatus(String status) {
        this.status = status;
    }

    public String getRiskTag() {
        return this.riskTag;
    }

    public void setRiskTag(String riskTag) {
        this.riskTag = riskTag;
    }

    public static class Builder {
        /**
         * 检测状态
         * <p> 示例值：FINISHED
         */
        private String status;
        /**
         * 风险类型
         * <p> 示例值：RISK
         */
        private String riskTag;

        /**
         * 检测状态
         * <p> 示例值：FINISHED
         *
         * @param status
         * @return
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * 检测状态
         * <p> 示例值：FINISHED
         *
         * @param status {@link com.lark.oapi.service.security_and_compliance.v1.enums.FileRiskDetectionRecordResultStatusEnum}
         * @return
         */
        public Builder status(com.lark.oapi.service.security_and_compliance.v1.enums.FileRiskDetectionRecordResultStatusEnum status) {
            this.status = status.getValue();
            return this;
        }


        /**
         * 风险类型
         * <p> 示例值：RISK
         *
         * @param riskTag
         * @return
         */
        public Builder riskTag(String riskTag) {
            this.riskTag = riskTag;
            return this;
        }

        /**
         * 风险类型
         * <p> 示例值：RISK
         *
         * @param riskTag {@link com.lark.oapi.service.security_and_compliance.v1.enums.FileRiskDetectionRecordResultRiskTagEnum}
         * @return
         */
        public Builder riskTag(com.lark.oapi.service.security_and_compliance.v1.enums.FileRiskDetectionRecordResultRiskTagEnum riskTag) {
            this.riskTag = riskTag.getValue();
            return this;
        }


        public FileRiskDetectionRecordResult build() {
            return new FileRiskDetectionRecordResult(this);
        }
    }
}
