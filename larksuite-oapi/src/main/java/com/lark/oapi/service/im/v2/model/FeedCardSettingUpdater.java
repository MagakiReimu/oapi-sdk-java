// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v2.model;

import com.google.gson.annotations.SerializedName;

public class FeedCardSettingUpdater {
    /**
     * 消息流卡片 ID
     * <p> 示例值：oc_785fae31552ae88681bc69b4a1550289
     */
    @SerializedName("feed_card_id")
    private String feedCardId;
    /**
     * 标记已读的时间戳
     * <p> 示例值：1701246710
     */
    @SerializedName("read_timestamp")
    private String readTimestamp;
    /**
     * 免打扰操作是否发送系统消息
     * <p> 示例值：false
     */
    @SerializedName("mute_with_system_message")
    private Boolean muteWithSystemMessage;

    // builder 开始
    public FeedCardSettingUpdater() {
    }

    public FeedCardSettingUpdater(Builder builder) {
        /**
         * 消息流卡片 ID
         * <p> 示例值：oc_785fae31552ae88681bc69b4a1550289
         */
        this.feedCardId = builder.feedCardId;
        /**
         * 标记已读的时间戳
         * <p> 示例值：1701246710
         */
        this.readTimestamp = builder.readTimestamp;
        /**
         * 免打扰操作是否发送系统消息
         * <p> 示例值：false
         */
        this.muteWithSystemMessage = builder.muteWithSystemMessage;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getFeedCardId() {
        return this.feedCardId;
    }

    public void setFeedCardId(String feedCardId) {
        this.feedCardId = feedCardId;
    }

    public String getReadTimestamp() {
        return this.readTimestamp;
    }

    public void setReadTimestamp(String readTimestamp) {
        this.readTimestamp = readTimestamp;
    }

    public Boolean getMuteWithSystemMessage() {
        return this.muteWithSystemMessage;
    }

    public void setMuteWithSystemMessage(Boolean muteWithSystemMessage) {
        this.muteWithSystemMessage = muteWithSystemMessage;
    }

    public static class Builder {
        /**
         * 消息流卡片 ID
         * <p> 示例值：oc_785fae31552ae88681bc69b4a1550289
         */
        private String feedCardId;
        /**
         * 标记已读的时间戳
         * <p> 示例值：1701246710
         */
        private String readTimestamp;
        /**
         * 免打扰操作是否发送系统消息
         * <p> 示例值：false
         */
        private Boolean muteWithSystemMessage;

        /**
         * 消息流卡片 ID
         * <p> 示例值：oc_785fae31552ae88681bc69b4a1550289
         *
         * @param feedCardId
         * @return
         */
        public Builder feedCardId(String feedCardId) {
            this.feedCardId = feedCardId;
            return this;
        }


        /**
         * 标记已读的时间戳
         * <p> 示例值：1701246710
         *
         * @param readTimestamp
         * @return
         */
        public Builder readTimestamp(String readTimestamp) {
            this.readTimestamp = readTimestamp;
            return this;
        }


        /**
         * 免打扰操作是否发送系统消息
         * <p> 示例值：false
         *
         * @param muteWithSystemMessage
         * @return
         */
        public Builder muteWithSystemMessage(Boolean muteWithSystemMessage) {
            this.muteWithSystemMessage = muteWithSystemMessage;
            return this;
        }


        public FeedCardSettingUpdater build() {
            return new FeedCardSettingUpdater(this);
        }
    }
}
