// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.aily.v1.model;

import com.google.gson.annotations.SerializedName;

public class RecordQueryOption {
    /**
     * 是否以字符串形式返回数字
     * <p> 示例值：false
     */
    @SerializedName("stringify_number")
    private Boolean stringifyNumber;
    /**
     * 返回的列名是否去除特殊字符
     * <p> 示例值：false
     */
    @SerializedName("normalize_column_name")
    private Boolean normalizeColumnName;

    // builder 开始
    public RecordQueryOption() {
    }

    public RecordQueryOption(Builder builder) {
        /**
         * 是否以字符串形式返回数字
         * <p> 示例值：false
         */
        this.stringifyNumber = builder.stringifyNumber;
        /**
         * 返回的列名是否去除特殊字符
         * <p> 示例值：false
         */
        this.normalizeColumnName = builder.normalizeColumnName;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Boolean getStringifyNumber() {
        return this.stringifyNumber;
    }

    public void setStringifyNumber(Boolean stringifyNumber) {
        this.stringifyNumber = stringifyNumber;
    }

    public Boolean getNormalizeColumnName() {
        return this.normalizeColumnName;
    }

    public void setNormalizeColumnName(Boolean normalizeColumnName) {
        this.normalizeColumnName = normalizeColumnName;
    }

    public static class Builder {
        /**
         * 是否以字符串形式返回数字
         * <p> 示例值：false
         */
        private Boolean stringifyNumber;
        /**
         * 返回的列名是否去除特殊字符
         * <p> 示例值：false
         */
        private Boolean normalizeColumnName;

        /**
         * 是否以字符串形式返回数字
         * <p> 示例值：false
         *
         * @param stringifyNumber
         * @return
         */
        public Builder stringifyNumber(Boolean stringifyNumber) {
            this.stringifyNumber = stringifyNumber;
            return this;
        }


        /**
         * 返回的列名是否去除特殊字符
         * <p> 示例值：false
         *
         * @param normalizeColumnName
         * @return
         */
        public Builder normalizeColumnName(Boolean normalizeColumnName) {
            this.normalizeColumnName = normalizeColumnName;
            return this;
        }


        public RecordQueryOption build() {
            return new RecordQueryOption(this);
        }
    }
}
