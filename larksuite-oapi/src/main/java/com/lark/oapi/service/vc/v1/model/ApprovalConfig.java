// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.vc.v1.model;

import com.google.gson.annotations.SerializedName;

public class ApprovalConfig {
    /**
     * 预定审批开关：0 代表关闭，1 代表打开。;<b>说明</b>：;1.  未设置值时不更新原开关的值，但此时必填  approval_condition;2.  设置值为 1 时，必填  approval_condition<br>                                 ;3.  设置值为 0 时整个 ;approval_config 其他字段均可省略。
     * <p> 示例值：1
     */
    @SerializedName("approval_switch")
    private Integer approvalSwitch;
    /**
     * 预定审批条件：0 代表所有预定均需审批，1 代表满足条件的需审批;<b>说明</b>：为 1 时必填 meeting_duration
     * <p> 示例值：1
     */
    @SerializedName("approval_condition")
    private Integer approvalCondition;
    /**
     * 超过 meeting_duration;的预定需要审批（单位：小时，取值范围[0.1-99]）;;<b>说明</b>：;1.  当 approval_condition ; 为 0 ，更新时如果未设置值，默认更新为 99 .;2.  传入的值小数点后超过 2 位，自动四舍五入保留两位。
     * <p> 示例值：3
     */
    @SerializedName("meeting_duration")
    private Double meetingDuration;
    /**
     * 审批人列表，当打开审批开关时，至少需要设置一位审批人
     * <p> 示例值：[{user_id:"ou_e8bce6c3935ef1fc1b432992fd9d3db8"}]
     */
    @SerializedName("approvers")
    private SubscribeUser[] approvers;

    // builder 开始
    public ApprovalConfig() {
    }

    public ApprovalConfig(Builder builder) {
        /**
         * 预定审批开关：0 代表关闭，1 代表打开。;<b>说明</b>：;1.  未设置值时不更新原开关的值，但此时必填  approval_condition;2.  设置值为 1 时，必填  approval_condition<br>                                 ;3.  设置值为 0 时整个 ;approval_config 其他字段均可省略。
         * <p> 示例值：1
         */
        this.approvalSwitch = builder.approvalSwitch;
        /**
         * 预定审批条件：0 代表所有预定均需审批，1 代表满足条件的需审批;<b>说明</b>：为 1 时必填 meeting_duration
         * <p> 示例值：1
         */
        this.approvalCondition = builder.approvalCondition;
        /**
         * 超过 meeting_duration;的预定需要审批（单位：小时，取值范围[0.1-99]）;;<b>说明</b>：;1.  当 approval_condition ; 为 0 ，更新时如果未设置值，默认更新为 99 .;2.  传入的值小数点后超过 2 位，自动四舍五入保留两位。
         * <p> 示例值：3
         */
        this.meetingDuration = builder.meetingDuration;
        /**
         * 审批人列表，当打开审批开关时，至少需要设置一位审批人
         * <p> 示例值：[{user_id:"ou_e8bce6c3935ef1fc1b432992fd9d3db8"}]
         */
        this.approvers = builder.approvers;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Integer getApprovalSwitch() {
        return this.approvalSwitch;
    }

    public void setApprovalSwitch(Integer approvalSwitch) {
        this.approvalSwitch = approvalSwitch;
    }

    public Integer getApprovalCondition() {
        return this.approvalCondition;
    }

    public void setApprovalCondition(Integer approvalCondition) {
        this.approvalCondition = approvalCondition;
    }

    public Double getMeetingDuration() {
        return this.meetingDuration;
    }

    public void setMeetingDuration(Double meetingDuration) {
        this.meetingDuration = meetingDuration;
    }

    public SubscribeUser[] getApprovers() {
        return this.approvers;
    }

    public void setApprovers(SubscribeUser[] approvers) {
        this.approvers = approvers;
    }

    public static class Builder {
        /**
         * 预定审批开关：0 代表关闭，1 代表打开。;<b>说明</b>：;1.  未设置值时不更新原开关的值，但此时必填  approval_condition;2.  设置值为 1 时，必填  approval_condition<br>                                 ;3.  设置值为 0 时整个 ;approval_config 其他字段均可省略。
         * <p> 示例值：1
         */
        private Integer approvalSwitch;
        /**
         * 预定审批条件：0 代表所有预定均需审批，1 代表满足条件的需审批;<b>说明</b>：为 1 时必填 meeting_duration
         * <p> 示例值：1
         */
        private Integer approvalCondition;
        /**
         * 超过 meeting_duration;的预定需要审批（单位：小时，取值范围[0.1-99]）;;<b>说明</b>：;1.  当 approval_condition ; 为 0 ，更新时如果未设置值，默认更新为 99 .;2.  传入的值小数点后超过 2 位，自动四舍五入保留两位。
         * <p> 示例值：3
         */
        private Double meetingDuration;
        /**
         * 审批人列表，当打开审批开关时，至少需要设置一位审批人
         * <p> 示例值：[{user_id:"ou_e8bce6c3935ef1fc1b432992fd9d3db8"}]
         */
        private SubscribeUser[] approvers;

        /**
         * 预定审批开关：0 代表关闭，1 代表打开。;<b>说明</b>：;1.  未设置值时不更新原开关的值，但此时必填  approval_condition;2.  设置值为 1 时，必填  approval_condition<br>                                 ;3.  设置值为 0 时整个 ;approval_config 其他字段均可省略。
         * <p> 示例值：1
         *
         * @param approvalSwitch
         * @return
         */
        public Builder approvalSwitch(Integer approvalSwitch) {
            this.approvalSwitch = approvalSwitch;
            return this;
        }


        /**
         * 预定审批条件：0 代表所有预定均需审批，1 代表满足条件的需审批;<b>说明</b>：为 1 时必填 meeting_duration
         * <p> 示例值：1
         *
         * @param approvalCondition
         * @return
         */
        public Builder approvalCondition(Integer approvalCondition) {
            this.approvalCondition = approvalCondition;
            return this;
        }


        /**
         * 超过 meeting_duration;的预定需要审批（单位：小时，取值范围[0.1-99]）;;<b>说明</b>：;1.  当 approval_condition ; 为 0 ，更新时如果未设置值，默认更新为 99 .;2.  传入的值小数点后超过 2 位，自动四舍五入保留两位。
         * <p> 示例值：3
         *
         * @param meetingDuration
         * @return
         */
        public Builder meetingDuration(Double meetingDuration) {
            this.meetingDuration = meetingDuration;
            return this;
        }


        /**
         * 审批人列表，当打开审批开关时，至少需要设置一位审批人
         * <p> 示例值：[{user_id:"ou_e8bce6c3935ef1fc1b432992fd9d3db8"}]
         *
         * @param approvers
         * @return
         */
        public Builder approvers(SubscribeUser[] approvers) {
            this.approvers = approvers;
            return this;
        }


        public ApprovalConfig build() {
            return new ApprovalConfig(this);
        }
    }
}
