// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.im.v1.model;

import com.google.gson.annotations.SerializedName;

public class ToolkitCallback {
    /**
     * 回调地址
     * <p> 示例值：https://***.com/
     */
    @SerializedName("webhook")
    private String webhook;
    /**
     * 开发者自己识别的action_key，标识快捷组件的作用，回调时会把该字段带到回调地址
     * <p> 示例值：SendMessage
     */
    @SerializedName("action_key")
    private String actionKey;

    // builder 开始
    public ToolkitCallback() {
    }

    public ToolkitCallback(Builder builder) {
        /**
         * 回调地址
         * <p> 示例值：https://***.com/
         */
        this.webhook = builder.webhook;
        /**
         * 开发者自己识别的action_key，标识快捷组件的作用，回调时会把该字段带到回调地址
         * <p> 示例值：SendMessage
         */
        this.actionKey = builder.actionKey;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getWebhook() {
        return this.webhook;
    }

    public void setWebhook(String webhook) {
        this.webhook = webhook;
    }

    public String getActionKey() {
        return this.actionKey;
    }

    public void setActionKey(String actionKey) {
        this.actionKey = actionKey;
    }

    public static class Builder {
        /**
         * 回调地址
         * <p> 示例值：https://***.com/
         */
        private String webhook;
        /**
         * 开发者自己识别的action_key，标识快捷组件的作用，回调时会把该字段带到回调地址
         * <p> 示例值：SendMessage
         */
        private String actionKey;

        /**
         * 回调地址
         * <p> 示例值：https://***.com/
         *
         * @param webhook
         * @return
         */
        public Builder webhook(String webhook) {
            this.webhook = webhook;
            return this;
        }


        /**
         * 开发者自己识别的action_key，标识快捷组件的作用，回调时会把该字段带到回调地址
         * <p> 示例值：SendMessage
         *
         * @param actionKey
         * @return
         */
        public Builder actionKey(String actionKey) {
            this.actionKey = actionKey;
            return this;
        }


        public ToolkitCallback build() {
            return new ToolkitCallback(this);
        }
    }
}
