// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.aily.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.aily.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;
import com.lark.oapi.core.response.BaseResponse;

public class RecordResult {
    /**
     * 是否成功
     * <p> 示例值：
     */
    @SerializedName("success")
    private Boolean success;
    /**
     * 记录失败的唯一键对应值
     * <p> 示例值：name
     */
    @SerializedName("primary_key_value")
    private String primaryKeyValue;
    /**
     * 记录失败的第一条报错
     * <p> 示例值：
     */
    @SerializedName("errors")
    private RecordError[] errors;
    /**
     * 记录的内部 id
     * <p> 示例值：543276126389
     */
    @SerializedName("_id")
    private String id;

    // builder 开始
    public RecordResult() {
    }

    public RecordResult(Builder builder) {
        /**
         * 是否成功
         * <p> 示例值：
         */
        this.success = builder.success;
        /**
         * 记录失败的唯一键对应值
         * <p> 示例值：name
         */
        this.primaryKeyValue = builder.primaryKeyValue;
        /**
         * 记录失败的第一条报错
         * <p> 示例值：
         */
        this.errors = builder.errors;
        /**
         * 记录的内部 id
         * <p> 示例值：543276126389
         */
        this.id = builder.id;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public Boolean getSuccess() {
        return this.success;
    }

    public void setSuccess(Boolean success) {
        this.success = success;
    }

    public String getPrimaryKeyValue() {
        return this.primaryKeyValue;
    }

    public void setPrimaryKeyValue(String primaryKeyValue) {
        this.primaryKeyValue = primaryKeyValue;
    }

    public RecordError[] getErrors() {
        return this.errors;
    }

    public void setErrors(RecordError[] errors) {
        this.errors = errors;
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public static class Builder {
        /**
         * 是否成功
         * <p> 示例值：
         */
        private Boolean success;
        /**
         * 记录失败的唯一键对应值
         * <p> 示例值：name
         */
        private String primaryKeyValue;
        /**
         * 记录失败的第一条报错
         * <p> 示例值：
         */
        private RecordError[] errors;
        /**
         * 记录的内部 id
         * <p> 示例值：543276126389
         */
        private String id;

        /**
         * 是否成功
         * <p> 示例值：
         *
         * @param success
         * @return
         */
        public Builder success(Boolean success) {
            this.success = success;
            return this;
        }


        /**
         * 记录失败的唯一键对应值
         * <p> 示例值：name
         *
         * @param primaryKeyValue
         * @return
         */
        public Builder primaryKeyValue(String primaryKeyValue) {
            this.primaryKeyValue = primaryKeyValue;
            return this;
        }


        /**
         * 记录失败的第一条报错
         * <p> 示例值：
         *
         * @param errors
         * @return
         */
        public Builder errors(RecordError[] errors) {
            this.errors = errors;
            return this;
        }


        /**
         * 记录的内部 id
         * <p> 示例值：543276126389
         *
         * @param id
         * @return
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }


        public RecordResult build() {
            return new RecordResult(this);
        }
    }
}
