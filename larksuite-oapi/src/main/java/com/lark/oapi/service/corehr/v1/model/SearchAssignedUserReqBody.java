// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.corehr.v1.model;

import com.google.gson.annotations.SerializedName;

public class SearchAssignedUserReqBody {
    /**
     * 角色 ID，仅支持组织类角色， 角色 ID 可通过【批量获取角色列表】接口获取
     * <p> 示例值：100
     */
    @SerializedName("role_id")
    private String roleId;
    /**
     * 管理范围信息
     * <p> 示例值：
     */
    @SerializedName("management_scope_list")
    private ManagementScope[] managementScopeList;
    /**
     * 查找方式;;可选值有：;- 1：只查找指定 部门/工作地点/公司/社保城市，如无授权信息则返回为空;- 2：当指定的 部门/工作地点/公司/社保城市 无授权信息，向上查找第一个授权记录并直接返回
     * <p> 示例值：1
     */
    @SerializedName("search_method")
    private String searchMethod;
    /**
     * 页码标识，获取第一页传空，每次查询会返回下一页的page_token
     * <p> 示例值：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
     */
    @SerializedName("page_token")
    private String pageToken;
    /**
     * 每页获取记录数量，最大100
     * <p> 示例值：100
     */
    @SerializedName("page_size")
    private String pageSize;

    // builder 开始
    public SearchAssignedUserReqBody() {
    }

    public SearchAssignedUserReqBody(Builder builder) {
        /**
         * 角色 ID，仅支持组织类角色， 角色 ID 可通过【批量获取角色列表】接口获取
         * <p> 示例值：100
         */
        this.roleId = builder.roleId;
        /**
         * 管理范围信息
         * <p> 示例值：
         */
        this.managementScopeList = builder.managementScopeList;
        /**
         * 查找方式;;可选值有：;- 1：只查找指定 部门/工作地点/公司/社保城市，如无授权信息则返回为空;- 2：当指定的 部门/工作地点/公司/社保城市 无授权信息，向上查找第一个授权记录并直接返回
         * <p> 示例值：1
         */
        this.searchMethod = builder.searchMethod;
        /**
         * 页码标识，获取第一页传空，每次查询会返回下一页的page_token
         * <p> 示例值：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
         */
        this.pageToken = builder.pageToken;
        /**
         * 每页获取记录数量，最大100
         * <p> 示例值：100
         */
        this.pageSize = builder.pageSize;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getRoleId() {
        return this.roleId;
    }

    public void setRoleId(String roleId) {
        this.roleId = roleId;
    }

    public ManagementScope[] getManagementScopeList() {
        return this.managementScopeList;
    }

    public void setManagementScopeList(ManagementScope[] managementScopeList) {
        this.managementScopeList = managementScopeList;
    }

    public String getSearchMethod() {
        return this.searchMethod;
    }

    public void setSearchMethod(String searchMethod) {
        this.searchMethod = searchMethod;
    }

    public String getPageToken() {
        return this.pageToken;
    }

    public void setPageToken(String pageToken) {
        this.pageToken = pageToken;
    }

    public String getPageSize() {
        return this.pageSize;
    }

    public void setPageSize(String pageSize) {
        this.pageSize = pageSize;
    }

    public static class Builder {
        /**
         * 角色 ID，仅支持组织类角色， 角色 ID 可通过【批量获取角色列表】接口获取
         * <p> 示例值：100
         */
        private String roleId;
        /**
         * 管理范围信息
         * <p> 示例值：
         */
        private ManagementScope[] managementScopeList;
        /**
         * 查找方式;;可选值有：;- 1：只查找指定 部门/工作地点/公司/社保城市，如无授权信息则返回为空;- 2：当指定的 部门/工作地点/公司/社保城市 无授权信息，向上查找第一个授权记录并直接返回
         * <p> 示例值：1
         */
        private String searchMethod;
        /**
         * 页码标识，获取第一页传空，每次查询会返回下一页的page_token
         * <p> 示例值：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
         */
        private String pageToken;
        /**
         * 每页获取记录数量，最大100
         * <p> 示例值：100
         */
        private String pageSize;

        /**
         * 角色 ID，仅支持组织类角色， 角色 ID 可通过【批量获取角色列表】接口获取
         * <p> 示例值：100
         *
         * @param roleId
         * @return
         */
        public Builder roleId(String roleId) {
            this.roleId = roleId;
            return this;
        }


        /**
         * 管理范围信息
         * <p> 示例值：
         *
         * @param managementScopeList
         * @return
         */
        public Builder managementScopeList(ManagementScope[] managementScopeList) {
            this.managementScopeList = managementScopeList;
            return this;
        }


        /**
         * 查找方式;;可选值有：;- 1：只查找指定 部门/工作地点/公司/社保城市，如无授权信息则返回为空;- 2：当指定的 部门/工作地点/公司/社保城市 无授权信息，向上查找第一个授权记录并直接返回
         * <p> 示例值：1
         *
         * @param searchMethod
         * @return
         */
        public Builder searchMethod(String searchMethod) {
            this.searchMethod = searchMethod;
            return this;
        }


        /**
         * 页码标识，获取第一页传空，每次查询会返回下一页的page_token
         * <p> 示例值：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9
         *
         * @param pageToken
         * @return
         */
        public Builder pageToken(String pageToken) {
            this.pageToken = pageToken;
            return this;
        }


        /**
         * 每页获取记录数量，最大100
         * <p> 示例值：100
         *
         * @param pageSize
         * @return
         */
        public Builder pageSize(String pageSize) {
            this.pageSize = pageSize;
            return this;
        }


        public SearchAssignedUserReqBody build() {
            return new SearchAssignedUserReqBody(this);
        }
    }
}
