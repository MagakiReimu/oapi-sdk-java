// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.approval.v4.model;

import com.google.gson.annotations.SerializedName;

public class ApprovalViewerInfo {
    /**
     * 可见人类型
     * <p> 示例值：TENANT
     */
    @SerializedName("type")
    private String type;
    /**
     * 在可见人类型为DEPARTMENT时，id为部门的id ；在可见人类型为USER时，id为用户的id ；在可见人类型为ROLE时，id为角色的id ；在可见人类型为USER_GROUP时，id为用户组的id
     * <p> 示例值：ou_e03053f0541cecc3269d7a9dc34a0b21
     */
    @SerializedName("id")
    private String id;
    /**
     * 在可见人类型为USER时，表示可见人用户id
     * <p> 示例值：f7cb567e
     */
    @SerializedName("user_id")
    private String userId;

    // builder 开始
    public ApprovalViewerInfo() {
    }

    public ApprovalViewerInfo(Builder builder) {
        /**
         * 可见人类型
         * <p> 示例值：TENANT
         */
        this.type = builder.type;
        /**
         * 在可见人类型为DEPARTMENT时，id为部门的id ；在可见人类型为USER时，id为用户的id ；在可见人类型为ROLE时，id为角色的id ；在可见人类型为USER_GROUP时，id为用户组的id
         * <p> 示例值：ou_e03053f0541cecc3269d7a9dc34a0b21
         */
        this.id = builder.id;
        /**
         * 在可见人类型为USER时，表示可见人用户id
         * <p> 示例值：f7cb567e
         */
        this.userId = builder.userId;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getType() {
        return this.type;
    }

    public void setType(String type) {
        this.type = type;
    }

    public String getId() {
        return this.id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getUserId() {
        return this.userId;
    }

    public void setUserId(String userId) {
        this.userId = userId;
    }

    public static class Builder {
        /**
         * 可见人类型
         * <p> 示例值：TENANT
         */
        private String type;
        /**
         * 在可见人类型为DEPARTMENT时，id为部门的id ；在可见人类型为USER时，id为用户的id ；在可见人类型为ROLE时，id为角色的id ；在可见人类型为USER_GROUP时，id为用户组的id
         * <p> 示例值：ou_e03053f0541cecc3269d7a9dc34a0b21
         */
        private String id;
        /**
         * 在可见人类型为USER时，表示可见人用户id
         * <p> 示例值：f7cb567e
         */
        private String userId;

        /**
         * 可见人类型
         * <p> 示例值：TENANT
         *
         * @param type
         * @return
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * 可见人类型
         * <p> 示例值：TENANT
         *
         * @param type {@link com.lark.oapi.service.approval.v4.enums.ApprovalViewerInfoTypeEnum}
         * @return
         */
        public Builder type(com.lark.oapi.service.approval.v4.enums.ApprovalViewerInfoTypeEnum type) {
            this.type = type.getValue();
            return this;
        }


        /**
         * 在可见人类型为DEPARTMENT时，id为部门的id ；在可见人类型为USER时，id为用户的id ；在可见人类型为ROLE时，id为角色的id ；在可见人类型为USER_GROUP时，id为用户组的id
         * <p> 示例值：ou_e03053f0541cecc3269d7a9dc34a0b21
         *
         * @param id
         * @return
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }


        /**
         * 在可见人类型为USER时，表示可见人用户id
         * <p> 示例值：f7cb567e
         *
         * @param userId
         * @return
         */
        public Builder userId(String userId) {
            this.userId = userId;
            return this;
        }


        public ApprovalViewerInfo build() {
            return new ApprovalViewerInfo(this);
        }
    }
}
