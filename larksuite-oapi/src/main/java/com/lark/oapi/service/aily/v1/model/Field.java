// Code generated by lark suite oapi sdk gen
/*
 * MIT License
 *
 * Copyright (c) 2022 Lark Technologies Pte. Ltd.
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice, shall be included in all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
 */

package com.lark.oapi.service.aily.v1.model;

import com.lark.oapi.core.response.EmptyData;
import com.lark.oapi.service.aily.v1.enums.*;
import com.google.gson.annotations.SerializedName;
import com.google.gson.annotations.SerializedName;
import com.lark.oapi.core.annotation.Body;
import com.lark.oapi.core.annotation.Path;
import com.lark.oapi.core.annotation.Query;

import java.io.ByteArrayOutputStream;
import java.io.FileOutputStream;
import java.io.IOException;

import com.lark.oapi.core.utils.Strings;

import java.util.Map;

import com.lark.oapi.core.response.BaseResponse;

public class Field {
    /**
     * 字段标识
     * <p> 示例值：object_a
     */
    @SerializedName("api_name")
    private String apiName;
    /**
     * 字段名称
     * <p> 示例值：
     */
    @SerializedName("label")
    private Map<String, String> label;
    /**
     * 字段描述信息
     * <p> 示例值：这是一个商品的数据表
     */
    @SerializedName("ai_description")
    private String aiDescription;
    /**
     * 字段值读写权限
     * <p> 示例值：
     */
    @SerializedName("access_items")
    private String[] accessItems;
    /**
     * 字段的类型
     * <p> 示例值：bool
     */
    @SerializedName("type_name")
    private String typeName;
    /**
     * 字段的属性
     * <p> 示例值：
     */
    @SerializedName("field_setting")
    private FieldSetting fieldSetting;

    // builder 开始
    public Field() {
    }

    public Field(Builder builder) {
        /**
         * 字段标识
         * <p> 示例值：object_a
         */
        this.apiName = builder.apiName;
        /**
         * 字段名称
         * <p> 示例值：
         */
        this.label = builder.label;
        /**
         * 字段描述信息
         * <p> 示例值：这是一个商品的数据表
         */
        this.aiDescription = builder.aiDescription;
        /**
         * 字段值读写权限
         * <p> 示例值：
         */
        this.accessItems = builder.accessItems;
        /**
         * 字段的类型
         * <p> 示例值：bool
         */
        this.typeName = builder.typeName;
        /**
         * 字段的属性
         * <p> 示例值：
         */
        this.fieldSetting = builder.fieldSetting;
    }

    public static Builder newBuilder() {
        return new Builder();
    }

    public String getApiName() {
        return this.apiName;
    }

    public void setApiName(String apiName) {
        this.apiName = apiName;
    }

    public Map<String, String> getLabel() {
        return this.label;
    }

    public void setLabel(Map<String, String> label) {
        this.label = label;
    }

    public String getAiDescription() {
        return this.aiDescription;
    }

    public void setAiDescription(String aiDescription) {
        this.aiDescription = aiDescription;
    }

    public String[] getAccessItems() {
        return this.accessItems;
    }

    public void setAccessItems(String[] accessItems) {
        this.accessItems = accessItems;
    }

    public String getTypeName() {
        return this.typeName;
    }

    public void setTypeName(String typeName) {
        this.typeName = typeName;
    }

    public FieldSetting getFieldSetting() {
        return this.fieldSetting;
    }

    public void setFieldSetting(FieldSetting fieldSetting) {
        this.fieldSetting = fieldSetting;
    }

    public static class Builder {
        /**
         * 字段标识
         * <p> 示例值：object_a
         */
        private String apiName;
        /**
         * 字段名称
         * <p> 示例值：
         */
        private Map<String, String> label;
        /**
         * 字段描述信息
         * <p> 示例值：这是一个商品的数据表
         */
        private String aiDescription;
        /**
         * 字段值读写权限
         * <p> 示例值：
         */
        private String[] accessItems;
        /**
         * 字段的类型
         * <p> 示例值：bool
         */
        private String typeName;
        /**
         * 字段的属性
         * <p> 示例值：
         */
        private FieldSetting fieldSetting;

        /**
         * 字段标识
         * <p> 示例值：object_a
         *
         * @param apiName
         * @return
         */
        public Builder apiName(String apiName) {
            this.apiName = apiName;
            return this;
        }


        /**
         * 字段名称
         * <p> 示例值：
         *
         * @param label
         * @return
         */
        public Builder label(Map<String, String> label) {
            this.label = label;
            return this;
        }


        /**
         * 字段描述信息
         * <p> 示例值：这是一个商品的数据表
         *
         * @param aiDescription
         * @return
         */
        public Builder aiDescription(String aiDescription) {
            this.aiDescription = aiDescription;
            return this;
        }


        /**
         * 字段值读写权限
         * <p> 示例值：
         *
         * @param accessItems
         * @return
         */
        public Builder accessItems(String[] accessItems) {
            this.accessItems = accessItems;
            return this;
        }


        /**
         * 字段的类型
         * <p> 示例值：bool
         *
         * @param typeName
         * @return
         */
        public Builder typeName(String typeName) {
            this.typeName = typeName;
            return this;
        }


        /**
         * 字段的属性
         * <p> 示例值：
         *
         * @param fieldSetting
         * @return
         */
        public Builder fieldSetting(FieldSetting fieldSetting) {
            this.fieldSetting = fieldSetting;
            return this;
        }


        public Field build() {
            return new Field(this);
        }
    }
}
